from _typeshed import Incomplete
from odoorpc import error as error, rpc as rpc, session as session, tools as tools
from odoorpc.db import DB as DB
from odoorpc.env import Environment as Environment
from odoorpc.report import Report as Report

class ODOO:
    def __init__(
        self,
        host: str = "localhost",
        protocol: str = "jsonrpc",
        port: int = 8069,
        timeout: int = 120,
        version: Incomplete | None = None,
        opener: Incomplete | None = None,
    ) -> None: ...
    @property
    def config(self): ...
    @property
    def version(self): ...
    @property
    def db(self): ...
    @property
    def report(self): ...
    host: Incomplete
    port: Incomplete
    protocol: Incomplete
    @property
    def env(self): ...
    def json(self, url, params): ...
    def http(self, url, data: Incomplete | None = None, headers: Incomplete | None = None): ...
    def login(self, db, login: str = "admin", password: str = "admin") -> None: ...
    def logout(self): ...
    def close(self): ...
    def execute(self, model, method, *args): ...
    def execute_kw(self, model, method, args: Incomplete | None = None, kwargs: Incomplete | None = None): ...
    def exec_workflow(self, model, record_id, signal): ...
    def save(self, name, rc_file: str = "~/.odoorpcrc") -> None: ...
    @classmethod
    def load(cls, name, rc_file: str = "~/.odoorpcrc"): ...
    @classmethod
    def list(cls, rc_file: str = "~/.odoorpcrc"): ...
    @classmethod
    def remove(cls, name, rc_file: str = "~/.odoorpcrc"): ...
