[{"type": "ClassChunk", "name": "General404Error", "id": "lseg_analytics.exceptions.General404Error", "content": "class General404Error:\n    \"\"\"Non-resource 404\n    \"\"\"\n", "metadata": {"doc": "Non-resource 404\n", "annotations": "", "signature": "class General404Error:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": ["lseg_analytics.exceptions.General404Error.__init__"], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "MethodChunk", "name": "General404Error.__init__", "id": "lseg_analytics.exceptions.General404Error.__init__", "content": "class General404Error:\n    def __init__(self, error: ServiceError):\n        \"\"\"\"\"\"", "metadata": {"doc": "", "signature": "class General404Error:\n    def __init__(self, error: ServiceError):", "class": "General404Error"}, "dependencies": {"children": [], "parent": ["lseg_analytics.exceptions.General404Error"], "use": ["lseg_analytics.common.ServiceError"]}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "LibraryException", "id": "lseg_analytics.exceptions.LibraryException", "content": "class LibraryException:\n    \"\"\"Base class for all library exception, excluding azure ones\n    \"\"\"\n", "metadata": {"doc": "Base class for all library exception, excluding azure ones\n", "annotations": "", "signature": "class LibraryException:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": [], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "ResourceNotFound", "id": "lseg_analytics.exceptions.ResourceNotFound", "content": "class ResourceNotFound:\n    \"\"\"Resource not found using local logic\n    \"\"\"\n", "metadata": {"doc": "Resource not found using local logic\n", "annotations": "", "signature": "class ResourceNotFound:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": ["lseg_analytics.exceptions.ResourceNotFound.__init__"], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "MethodChunk", "name": "ResourceNotFound.__init__", "id": "lseg_analytics.exceptions.ResourceNotFound.__init__", "content": "class ResourceNotFound:\n    def __init__(self, resource_name: str, resource_id: str):\n        \"\"\"\"\"\"", "metadata": {"doc": "", "signature": "class ResourceNotFound:\n    def __init__(self, resource_name: str, resource_id: str):", "class": "ResourceNotFound"}, "dependencies": {"children": [], "parent": ["lseg_analytics.exceptions.ResourceNotFound"], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "ResourceNotFoundByServer", "id": "lseg_analytics.exceptions.ResourceNotFoundByServer", "content": "class ResourceNotFoundByServer:\n    \"\"\"REST 404 Resource not found\n    \"\"\"\n", "metadata": {"doc": "REST 404 Resource not found\n", "annotations": "", "signature": "class ResourceNotFoundByServer:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": ["lseg_analytics.exceptions.ResourceNotFoundByServer.__init__"], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "MethodChunk", "name": "ResourceNotFoundByServer.__init__", "id": "lseg_analytics.exceptions.ResourceNotFoundByServer.__init__", "content": "class ResourceNotFoundByServer:\n    def __init__(self, error: ServiceError):\n        \"\"\"\"\"\"", "metadata": {"doc": "", "signature": "class ResourceNotFoundByServer:\n    def __init__(self, error: ServiceError):", "class": "ResourceNotFoundByServer"}, "dependencies": {"children": [], "parent": ["lseg_analytics.exceptions.ResourceNotFoundByServer"], "use": ["lseg_analytics.common.ServiceError"]}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "ServerErrorBase", "id": "lseg_analytics.exceptions.ServerErrorBase", "content": "class ServerErrorBase:\n    \"\"\"Base class for all server-induced exceptions\n    \"\"\"\n", "metadata": {"doc": "Base class for all server-induced exceptions\n", "annotations": "", "signature": "class ServerErrorBase:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": [], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "ServerException", "id": "lseg_analytics.exceptions.ServerException", "content": "class ServerException:\n    \"\"\"Remote server exception\n    \"\"\"\n", "metadata": {"doc": "Remote server exception\n", "annotations": "", "signature": "class ServerException:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": ["lseg_analytics.exceptions.ServerException.__init__"], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "MethodChunk", "name": "ServerException.__init__", "id": "lseg_analytics.exceptions.ServerException.__init__", "content": "class ServerException:\n    def __init__(self, error: ServiceError):\n        \"\"\"\"\"\"", "metadata": {"doc": "", "signature": "class ServerException:\n    def __init__(self, error: ServiceError):", "class": "ServerException"}, "dependencies": {"children": [], "parent": ["lseg_analytics.exceptions.ServerException"], "use": ["lseg_analytics.common.ServiceError"]}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "UnknownServerError", "id": "lseg_analytics.exceptions.UnknownServerError", "content": "class UnknownServerError:\n    \"\"\"Unknown server error\n    \"\"\"\n", "metadata": {"doc": "Unknown server error\n", "annotations": "", "signature": "class UnknownServerError:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": ["lseg_analytics.exceptions.UnknownServerError.__init__"], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "MethodChunk", "name": "UnknownServerError.__init__", "id": "lseg_analytics.exceptions.UnknownServerError.__init__", "content": "class UnknownServerError:\n    def __init__(self, response):\n        \"\"\"\"\"\"", "metadata": {"doc": "", "signature": "class UnknownServerError:\n    def __init__(self, response):", "class": "UnknownServerError"}, "dependencies": {"children": [], "parent": ["lseg_analytics.exceptions.UnknownServerError"], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}, {"type": "ClassChunk", "name": "ValidationError", "id": "lseg_analytics.exceptions.ValidationError", "content": "class ValidationError:\n    \"\"\"Local validation error\n    \"\"\"\n", "metadata": {"doc": "Local validation error\n", "annotations": "", "signature": "class ValidationError:\n    \"\"\"\"\"\"\n"}, "dependencies": {"children": [], "parent": [], "use": []}, "source_module": "lseg_analytics.exceptions", "module_version": "1.0.0b2"}]