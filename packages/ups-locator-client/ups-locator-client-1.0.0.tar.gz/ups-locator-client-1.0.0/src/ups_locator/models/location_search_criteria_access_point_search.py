# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .access_point_search_include_criteria import AccessPointSearchIncludeCriteria
from .access_point_search_exclude_from_result import AccessPointSearchExcludeFromResult


@JsonMap(
    {
        "public_access_point_id": "PublicAccessPointID",
        "access_point_status": "AccessPointStatus",
        "account_number": "AccountNumber",
        "include_criteria": "IncludeCriteria",
        "exclude_from_result": "ExcludeFromResult",
        "exact_match_indicator": "ExactMatchIndicator",
        "exist_indicator": "ExistIndicator",
    }
)
class LocationSearchCriteriaAccessPointSearch(BaseModel):
    """Applicable for request option 64 only. This contains inclusion and exclusion criteria for address search. It also contains Account Number and Access Point Public ID search elements.

    :param public_access_point_id: The Public Access Point ID to use for UPS Access Point Search. Once this parameter is present , address or geocode search is ignored. It cannot be combined with AccountNumber search parameter., defaults to None
    :type public_access_point_id: str, optional
    :param access_point_status: Status of UPS Access Point. Valid values are:  01-Active-available 07-Active-unavailable., defaults to None
    :type access_point_status: str, optional
    :param account_number: The account number to use for UPS Access Point Search in the country or territory. Used to locate a private network for the account. Once this parameter is present any access point address or geocode search is ignored. It cannot be combined with PublicAccessPointID search parameter., defaults to None
    :type account_number: str, optional
    :param include_criteria: This contains elements to refine (include) UPS Access point address or geocode Search., defaults to None
    :type include_criteria: AccessPointSearchIncludeCriteria, optional
    :param exclude_from_result: This contains elements to exclude from UPS Access Point address or geocode search., defaults to None
    :type exclude_from_result: AccessPointSearchExcludeFromResult, optional
    :param exact_match_indicator: Presence of this tag represents that "AccessPointSearchByAddress" service is requested. The value of this tag is ignored., defaults to None
    :type exact_match_indicator: str, optional
    :param exist_indicator: Presence of this tag represents that "AccessPointAvailability" service is requested. The value of this tag is ignored., defaults to None
    :type exist_indicator: str, optional
    """

    def __init__(
        self,
        public_access_point_id: str = None,
        access_point_status: str = None,
        account_number: str = None,
        include_criteria: AccessPointSearchIncludeCriteria = None,
        exclude_from_result: AccessPointSearchExcludeFromResult = None,
        exact_match_indicator: str = None,
        exist_indicator: str = None,
    ):
        if public_access_point_id is not None:
            self.public_access_point_id = public_access_point_id
        if access_point_status is not None:
            self.access_point_status = access_point_status
        if account_number is not None:
            self.account_number = account_number
        if include_criteria is not None:
            self.include_criteria = self._define_object(
                include_criteria, AccessPointSearchIncludeCriteria
            )
        if exclude_from_result is not None:
            self.exclude_from_result = self._define_object(
                exclude_from_result, AccessPointSearchExcludeFromResult
            )
        if exact_match_indicator is not None:
            self.exact_match_indicator = exact_match_indicator
        if exist_indicator is not None:
            self.exist_indicator = exist_indicator
