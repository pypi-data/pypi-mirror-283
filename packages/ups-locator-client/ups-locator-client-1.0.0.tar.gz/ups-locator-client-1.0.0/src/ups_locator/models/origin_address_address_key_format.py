# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "consignee_name": "ConsigneeName",
        "address_line": "AddressLine",
        "address_line2": "AddressLine2",
        "address_line3": "AddressLine3",
        "political_division3": "PoliticalDivision3",
        "political_division2": "PoliticalDivision2",
        "political_division1": "PoliticalDivision1",
        "postcode_primary_low": "PostcodePrimaryLow",
        "postcode_extended_low": "PostcodeExtendedLow",
        "country_code": "CountryCode",
        "single_line_address": "SingleLineAddress",
    }
)
class OriginAddressAddressKeyFormat(BaseModel):
    """Contains all of the basic information about the origin such as: Address Lines, City, State/Province, Postal Code and Country or Territory Code.
    The element CountryCode is required.

    :param consignee_name: Name. Not relevant for this tool, defaults to None
    :type consignee_name: str, optional
    :param address_line: Address Line Information. The user may submit street level address information or provide Intersection information.
    :type address_line: str
    :param address_line2: Additional Address Line Information., defaults to None
    :type address_line2: str, optional
    :param address_line3: Additional Address Line Information., defaults to None
    :type address_line3: str, optional
    :param political_division3: Barrio or other sub-division of City, defaults to None
    :type political_division3: str, optional
    :param political_division2: City or Town.
    :type political_division2: str
    :param political_division1: State or province
    :type political_division1: str
    :param postcode_primary_low: Main postal code. Required if the user does not submit the City, State/Province address combination.
    :type postcode_primary_low: str
    :param postcode_extended_low: 4 Digit postal code extension. Valid for US only., defaults to None
    :type postcode_extended_low: str, optional
    :param country_code: Two-character country or territory abbreviation
    :type country_code: str
    :param single_line_address: Single line search information. Can contain values of origin address in a single line. Will override other origin address information. Conditionally Required for Non-Postal Code Countries. Applicable Country Ireland (IE) SingleLineAddress used for the lookup SingleLineAddress (Format - CSV) (\"Values:\" + postalCode + city + state + address + landmark	+ phoneNumber) , defaults to None
    :type single_line_address: str, optional
    """

    def __init__(
        self,
        address_line: str,
        political_division2: str,
        political_division1: str,
        postcode_primary_low: str,
        country_code: str,
        consignee_name: str = None,
        address_line2: str = None,
        address_line3: str = None,
        political_division3: str = None,
        postcode_extended_low: str = None,
        single_line_address: str = None,
    ):
        if consignee_name is not None:
            self.consignee_name = consignee_name
        self.address_line = address_line
        if address_line2 is not None:
            self.address_line2 = address_line2
        if address_line3 is not None:
            self.address_line3 = address_line3
        if political_division3 is not None:
            self.political_division3 = political_division3
        self.political_division2 = political_division2
        self.political_division1 = political_division1
        self.postcode_primary_low = postcode_primary_low
        if postcode_extended_low is not None:
            self.postcode_extended_low = postcode_extended_low
        self.country_code = country_code
        if single_line_address is not None:
            self.single_line_address = single_line_address
