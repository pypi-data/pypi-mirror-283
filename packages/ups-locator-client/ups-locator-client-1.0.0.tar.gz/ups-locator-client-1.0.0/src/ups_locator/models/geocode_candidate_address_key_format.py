# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "consignee_name": "ConsigneeName",
        "address_line": "AddressLine",
        "political_division3": "PoliticalDivision3",
        "political_division2": "PoliticalDivision2",
        "political_division1": "PoliticalDivision1",
        "postcode_primary_low": "PostcodePrimaryLow",
        "postcode_extended_low": "PostcodeExtendedLow",
        "country_code": "CountryCode",
    }
)
class GeocodeCandidateAddressKeyFormat(BaseModel):
    """Contains all of the basic information about candidate address.

    :param consignee_name: Name. Not relevant for candidate list., defaults to None
    :type consignee_name: str, optional
    :param address_line: Address Line Information. The address level or Intersection information must be returned if provided in the request. The AddressLine will be a combination of up to 3 separate address lines, each separated by a new line character.
    :type address_line: str
    :param political_division3: Subdivision within a City. e.g., a Barrio., defaults to None
    :type political_division3: str, optional
    :param political_division2: City.
    :type political_division2: str
    :param political_division1: State/Province.
    :type political_division1: str
    :param postcode_primary_low: Postal Code.
    :type postcode_primary_low: str
    :param postcode_extended_low: 4 Digit postal code extension. Valid for US only., defaults to None
    :type postcode_extended_low: str, optional
    :param country_code: A country or territory code. Valid values for candidates to be returned are: US-United States (meaning US 50)
    :type country_code: str
    """

    def __init__(
        self,
        address_line: str,
        political_division2: str,
        political_division1: str,
        postcode_primary_low: str,
        country_code: str,
        consignee_name: str = None,
        political_division3: str = None,
        postcode_extended_low: str = None,
    ):
        if consignee_name is not None:
            self.consignee_name = consignee_name
        self.address_line = address_line
        if political_division3 is not None:
            self.political_division3 = political_division3
        self.political_division2 = political_division2
        self.political_division1 = political_division1
        self.postcode_primary_low = postcode_primary_low
        if postcode_extended_low is not None:
            self.postcode_extended_low = postcode_extended_low
        self.country_code = country_code
