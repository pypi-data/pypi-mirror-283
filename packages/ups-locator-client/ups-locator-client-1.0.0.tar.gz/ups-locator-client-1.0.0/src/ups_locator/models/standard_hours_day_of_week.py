# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "day": "Day",
        "open_hours": "OpenHours",
        "close_hours": "CloseHours",
        "latest_drop_off_hours": "LatestDropOffHours",
        "prep_hours": "PrepHours",
        "closed_indicator": "ClosedIndicator",
        "open24_hours_indicator": "Open24HoursIndicator",
    }
)
class StandardHoursDayOfWeek(BaseModel):
    """StandardHoursDayOfWeek

    :param day: Day of week.  Valid values:  1-Sunday 2-Monday 3-Tuesday 4-Wednesday 5-Thursday 6-Friday 7-Saturday.
    :type day: str
    :param open_hours: Open time of a location in military format (HHMM) e.g. 930, 1700, 1845 etc. with exception for midnight. For midnight the time will be returned as 0., defaults to None
    :type open_hours: str, optional
    :param close_hours: Close time of a location in military format (HHMM) e.g. 930, 1700, 1845 etc. with exception for midnight. For midnight the time will be returned as 0., defaults to None
    :type close_hours: str, optional
    :param latest_drop_off_hours: LatestDropOffHours for Hour Type 50. Latest Drop Off time of a location in military format (HHMM) e.g. 930, 1700, 1845 etc. with exception for midnight. For midnight the time will be returned as 0., defaults to None
    :type latest_drop_off_hours: str, optional
    :param prep_hours: PrepHours for Hour Type 51. Prep Hours of a location in military format (HHMM) e.g. 930, 1700, 1845 etc. with exception for midnight. For midnight the time will be returned as 0., defaults to None
    :type prep_hours: str, optional
    :param closed_indicator: Presence absence Indicator. Indicator present means location is closed., defaults to None
    :type closed_indicator: str, optional
    :param open24_hours_indicator: Presence/ Absence Indicator. Presence denotes  for the given day, if the location is open 24 hours. Absence denotes the location is not open for 24 hours on the given day., defaults to None
    :type open24_hours_indicator: str, optional
    """

    def __init__(
        self,
        day: str,
        open_hours: str = None,
        close_hours: str = None,
        latest_drop_off_hours: str = None,
        prep_hours: str = None,
        closed_indicator: str = None,
        open24_hours_indicator: str = None,
    ):
        self.day = day
        if open_hours is not None:
            self.open_hours = open_hours
        if close_hours is not None:
            self.close_hours = close_hours
        if latest_drop_off_hours is not None:
            self.latest_drop_off_hours = latest_drop_off_hours
        if prep_hours is not None:
            self.prep_hours = prep_hours
        if closed_indicator is not None:
            self.closed_indicator = closed_indicator
        if open24_hours_indicator is not None:
            self.open24_hours_indicator = open24_hours_indicator
