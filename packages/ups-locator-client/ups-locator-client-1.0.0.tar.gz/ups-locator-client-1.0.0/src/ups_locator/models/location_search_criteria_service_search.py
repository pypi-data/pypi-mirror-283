# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .service_search_service_code import ServiceSearchServiceCode
from .service_search_service_option_code import ServiceSearchServiceOptionCode


@JsonMap(
    {
        "time": "Time",
        "service_code": "ServiceCode",
        "service_option_code": "ServiceOptionCode",
    }
)
class LocationSearchCriteriaServiceSearch(BaseModel):
    """Allows for users to further define the search criteria. Refer to the rules specified in Service Search section.

    :param time: Scheduled Local Drop-off Time. Format: HHMM, defaults to None
    :type time: str, optional
    :param service_code: service_code, defaults to None
    :type service_code: List[ServiceSearchServiceCode], optional
    :param service_option_code: service_option_code, defaults to None
    :type service_option_code: List[ServiceSearchServiceOptionCode], optional
    """

    def __init__(
        self,
        time: str = None,
        service_code: List[ServiceSearchServiceCode] = None,
        service_option_code: List[ServiceSearchServiceOptionCode] = None,
    ):
        if time is not None:
            self.time = time
        if service_code is not None:
            self.service_code = self._define_list(
                service_code, ServiceSearchServiceCode
            )
        if service_option_code is not None:
            self.service_option_code = self._define_list(
                service_option_code, ServiceSearchServiceOptionCode
            )
