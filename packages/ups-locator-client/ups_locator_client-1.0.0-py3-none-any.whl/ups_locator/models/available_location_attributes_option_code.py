# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .available_location_attributes_option_code_transportation_pick_up_schedule import (
    AvailableLocationAttributesOptionCodeTransportationPickUpSchedule,
)


@JsonMap(
    {
        "code": "Code",
        "description": "Description",
        "name": "Name",
        "category": "Category",
        "transportation_pick_up_schedule": "TransportationPickUpSchedule",
    }
)
class AvailableLocationAttributesOptionCode(BaseModel):
    """Option code is a container that contains the information of a particular retail location type or additional service or program type that is available currently. One or more of this container will be returned to give all the available codes for Retail Type or Additional Services or Program Type.

    :param code: The valid list of codes and description for Retail Locations or Additional Services or Pro-gram Types that are currently available in the database. This can be obtained by a separate type of request (Request Option 8, 16, 24, 32, 40, 48 and 56).
    :type code: str
    :param description: Description is only applicable for Program types and Additional Services. It is not provided with Location detail. It is only provided when the request is for All available additional ser-vices or all available Program types. Text will be displayed in the locale requested.
    :type description: str
    :param name: Name will indicate the name of Location/Retail Location or Additional Services or Program Types depending on the option code. Text will be displayed in the locale requested., defaults to None
    :type name: str, optional
    :param category: N/A, defaults to None
    :type category: str, optional
    :param transportation_pick_up_schedule: Container to hold information regarding pickup details for each day of the week., defaults to None
    :type transportation_pick_up_schedule: AvailableLocationAttributesOptionCodeTransportationPickUpSchedule, optional
    """

    def __init__(
        self,
        code: str,
        description: str,
        name: str = None,
        category: str = None,
        transportation_pick_up_schedule: AvailableLocationAttributesOptionCodeTransportationPickUpSchedule = None,
    ):
        self.code = code
        self.description = description
        if name is not None:
            self.name = name
        if category is not None:
            self.category = category
        if transportation_pick_up_schedule is not None:
            self.transportation_pick_up_schedule = self._define_object(
                transportation_pick_up_schedule,
                AvailableLocationAttributesOptionCodeTransportationPickUpSchedule,
            )
