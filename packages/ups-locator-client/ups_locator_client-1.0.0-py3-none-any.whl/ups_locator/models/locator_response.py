# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .locator_response_response import LocatorResponseResponse
from .locator_response_geocode import LocatorResponseGeocode
from .locator_response_search_results import LocatorResponseSearchResults


@JsonMap(
    {
        "response": "Response",
        "geocode": "Geocode",
        "search_results": "SearchResults",
        "allow_all_confidence_levels": "AllowAllConfidenceLevels",
    }
)
class LocatorResponse(BaseModel):
    """Container for LocatorResponse.

    :param response: Container for Response.
    :type response: LocatorResponseResponse
    :param geocode: Geocode is the latitude and longitude of the origin address. The Geocode is provided in the first successful response. Required to be returned when the origin address or phone number is submitted in the request.Will not be returned when the  requestoption =64, defaults to None
    :type geocode: LocatorResponseGeocode, optional
    :param search_results: Container for search results.
    :type search_results: LocatorResponseSearchResults
    :param allow_all_confidence_levels: Confidence level. Valid values: True or False
    :type allow_all_confidence_levels: str
    """

    def __init__(
        self,
        response: LocatorResponseResponse,
        search_results: LocatorResponseSearchResults,
        allow_all_confidence_levels: str,
        geocode: LocatorResponseGeocode = None,
    ):
        self.response = self._define_object(response, LocatorResponseResponse)
        if geocode is not None:
            self.geocode = self._define_object(geocode, LocatorResponseGeocode)
        self.search_results = self._define_object(
            search_results, LocatorResponseSearchResults
        )
        self.allow_all_confidence_levels = allow_all_confidence_levels
