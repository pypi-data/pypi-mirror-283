# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .access_point_information_business_classification_list import (
    AccessPointInformationBusinessClassificationList,
)
from .access_point_information_access_point_status import (
    AccessPointInformationAccessPointStatus,
)
from .access_point_information_private_network_list import (
    AccessPointInformationPrivateNetworkList,
)
from .access_point_information_availability import AccessPointInformationAvailability


@JsonMap(
    {
        "public_access_point_id": "PublicAccessPointID",
        "image_url": "ImageURL",
        "business_classification_list": "BusinessClassificationList",
        "access_point_status": "AccessPointStatus",
        "facility_slic": "FacilitySLIC",
        "private_network_list": "PrivateNetworkList",
        "availability": "Availability",
    }
)
class DropLocationAccessPointInformation(BaseModel):
    """Container for UPS Access Point specific parameters.

    :param public_access_point_id: The Public Access Point ID associated with UPS access point., defaults to None
    :type public_access_point_id: str, optional
    :param image_url: Image URL associated with UPS access point., defaults to None
    :type image_url: str, optional
    :param business_classification_list: Container to hold list for business classification., defaults to None
    :type business_classification_list: AccessPointInformationBusinessClassificationList, optional
    :param access_point_status: Container for UPS AccessPoint status., defaults to None
    :type access_point_status: AccessPointInformationAccessPointStatus, optional
    :param facility_slic: Holds the value of facility SLIC of Access Point Location. Not implemented currently. For future use., defaults to None
    :type facility_slic: str, optional
    :param private_network_list: Container to hold the list of private networks., defaults to None
    :type private_network_list: AccessPointInformationPrivateNetworkList, optional
    :param availability: Container to hold the status of shipping or DRC/DCO availability of a UPS Access Point., defaults to None
    :type availability: AccessPointInformationAvailability, optional
    """

    def __init__(
        self,
        public_access_point_id: str = None,
        image_url: str = None,
        business_classification_list: AccessPointInformationBusinessClassificationList = None,
        access_point_status: AccessPointInformationAccessPointStatus = None,
        facility_slic: str = None,
        private_network_list: AccessPointInformationPrivateNetworkList = None,
        availability: AccessPointInformationAvailability = None,
    ):
        if public_access_point_id is not None:
            self.public_access_point_id = public_access_point_id
        if image_url is not None:
            self.image_url = image_url
        if business_classification_list is not None:
            self.business_classification_list = self._define_object(
                business_classification_list,
                AccessPointInformationBusinessClassificationList,
            )
        if access_point_status is not None:
            self.access_point_status = self._define_object(
                access_point_status, AccessPointInformationAccessPointStatus
            )
        if facility_slic is not None:
            self.facility_slic = facility_slic
        if private_network_list is not None:
            self.private_network_list = self._define_object(
                private_network_list, AccessPointInformationPrivateNetworkList
            )
        if availability is not None:
            self.availability = self._define_object(
                availability, AccessPointInformationAvailability
            )
