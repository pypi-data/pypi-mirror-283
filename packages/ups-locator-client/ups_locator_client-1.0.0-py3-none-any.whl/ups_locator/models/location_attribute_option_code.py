# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .option_code_transportation_pick_up_schedule import (
    OptionCodeTransportationPickUpSchedule,
)


@JsonMap(
    {
        "category": "Category",
        "code": "Code",
        "description": "Description",
        "name": "Name",
        "transportation_pick_up_schedule": "TransportationPickUpSchedule",
    }
)
class LocationAttributeOptionCode(BaseModel):
    """LocationAttributeOptionCode

    :param category: Only applicabe for OptionType = 03 (Additional Services). Valid values: - 06 - Non transportation - 07 - Transportation , defaults to None
    :type category: str, optional
    :param code: These codes vary by country or territory. It is strongly recommended that clients contact UPS to retrieve the primary search indicator and the valid Location Types and Service Level Options for each country. Refer to Location Search Option Codes in the Appendix for additional information.
    :type code: str
    :param description: Description is only applicable for Location and Retail Location. The description for Program types and additional service is not provided with Location detail. It is only provided when the request is for 8, 24, 40, 56-All available additional services or 16, 24, 48, 56-all available Program types.
    :type description: str
    :param name: Name will indicate the name of any Additional Services/ Program Types depending on the option code. Text will be displayed in the locale selected., defaults to None
    :type name: str, optional
    :param transportation_pick_up_schedule: TransportationPickUpSchedule container contains details of Latest Drop Off time/Pickup Time for the transportation services (Ground/Air/Standard/Express/International) of the location., defaults to None
    :type transportation_pick_up_schedule: OptionCodeTransportationPickUpSchedule, optional
    """

    def __init__(
        self,
        code: str,
        description: str,
        category: str = None,
        name: str = None,
        transportation_pick_up_schedule: OptionCodeTransportationPickUpSchedule = None,
    ):
        if category is not None:
            self.category = category
        self.code = code
        self.description = description
        if name is not None:
            self.name = name
        if transportation_pick_up_schedule is not None:
            self.transportation_pick_up_schedule = self._define_object(
                transportation_pick_up_schedule, OptionCodeTransportationPickUpSchedule
            )
