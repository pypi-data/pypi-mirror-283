# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "slic": "SLIC",
        "address_line": "AddressLine",
        "city": "City",
        "postal_code_primary_low": "PostalCodePrimaryLow",
        "postal_code_extended_low": "PostalCodeExtendedLow",
        "state": "State",
        "country_code": "CountryCode",
    }
)
class FreightWillCallSearchFacilityAddress(BaseModel):
    """Facility Address Container

    :param slic: Facility SLIC. Required for Freight Will call search if FreightWillCallRequestType is 2., defaults to None
    :type slic: str, optional
    :param address_line: Address line, defaults to None
    :type address_line: List[str], optional
    :param city: City. Required for Freight Will call search if FreightWillCallRequestType is 3., defaults to None
    :type city: str, optional
    :param postal_code_primary_low: Postal code. Required for Freight Will call search if FreightWillCallRequestType is 1., defaults to None
    :type postal_code_primary_low: str, optional
    :param postal_code_extended_low: 4 Digit postal code extension. Valid for US only., defaults to None
    :type postal_code_extended_low: str, optional
    :param state: State. Required if FrieghtWillCallRequestType is 3 if State is available., defaults to None
    :type state: str, optional
    :param country_code: Country or territory code.
    :type country_code: str
    """

    def __init__(
        self,
        country_code: str,
        slic: str = None,
        address_line: List[str] = None,
        city: str = None,
        postal_code_primary_low: str = None,
        postal_code_extended_low: str = None,
        state: str = None,
    ):
        if slic is not None:
            self.slic = slic
        if address_line is not None:
            self.address_line = address_line
        if city is not None:
            self.city = city
        if postal_code_primary_low is not None:
            self.postal_code_primary_low = postal_code_primary_low
        if postal_code_extended_low is not None:
            self.postal_code_extended_low = postal_code_extended_low
        if state is not None:
            self.state = state
        self.country_code = country_code
