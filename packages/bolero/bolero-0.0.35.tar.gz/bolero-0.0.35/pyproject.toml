[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
name = "bolero"
dynamic = ["version"]
description = "sequence"
readme = "README.md"
requires-python = ">=3.6"
license = { file = "LICENSE" }
authors = [{ name = "Hanqing Liu" }, { name = "Hanchen Wang" }]
maintainers = [
    { name = "Hanqing Liu", email = "hanqingliu@fas.harvard.edu" },
    { name = "Hanchen Wang", email = "hanchenw.au@gmail.com" },
]
urls.Documentation = "https://bolero.readthedocs.io/"
urls.Source = "https://github.com/lhqing/bolero"
urls.Home-page = "https://github.com/lhqing/bolero"
dependencies = [
    "anndata",
    "beartype",
    "biopython",
    "bolero_process",
    "click",
    "deeptools",
    "gensim",
    "geosketch",
    "joblib",
    "pyfaidx",
    "pynndescent",
    "pyranges",
    "seaborn",
    "session-info",
    "tmtoolkit",
    "tqdm",
    "transformers",
    "wandb",
    "xarray",
    # "ray", # do not add ray as a dependency, install it separately otherwise skypilot will have issue
    "zarr",
]

[project.scripts]
mysbatch = "sbatch.main:submitter"

[project.optional-dependencies]
dev = ["pre-commit", "twine>=4.0.2"]
doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "sphinx>=4",
    "sphinx-book-theme>=1.0.0",
    "myst-nb",
    "sphinxcontrib-bibtex>=1.0.0",
    "sphinx-autodoc-typehints",
    "sphinxext-opengraph",
    # For notebooks
    "ipykernel",
    "ipython",
    "sphinx-copybutton",
    "pandas",
    "jupyterlab",
]
test = ["pytest", "coverage"]

[tool.coverage.run]
source = ["bolero"]
omit = ["**/test_*.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]
xfail_strict = true
addopts = [
    "--import-mode=importlib", # allow using test files with same name
]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
src = ["src"]
line-length = 88
lint.select = [
    "F",      # Errors detected by Pyflakes
    "E",      # Error detected by Pycodestyle
    "W",      # Warning detected by Pycodestyle
    "I",      # isort
    "D",      # pydocstyle
    "B",      # flake8-bugbear
    "TID",    # flake8-tidy-imports
    "C4",     # flake8-comprehensions
    "BLE",    # flake8-blind-except
    "UP",     # pyupgrade
    "RUF100", # Report unused noqa directives
]
lint.ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D200",
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    "D101",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]    "D400",
    # First line should be in imperative mood; try rephrasing
    "D400",
    "D401",
    "D404",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    "D205",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]
extend-include = ["*.ipynb"]
exclude = [
  "src/bolero/tl/generic/ema.py",
  "tests/"
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb",
]

[tool.hatch.version]
source = "vcs"
