# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from mergedapi.models.user_login_response import UserLoginResponse
from mergedapi.models.refresh_token_response import RefreshTokenResponse
from mergedapi.exceptions.api_exception import APIException


class AuthenticationController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(AuthenticationController, self).__init__(config)

    def user_login(self,
                   credential):
        """Does a POST request to /login/.

        User login and recive tokens

        Args:
            credential (Credential): topics body object

        Returns:
            UserLoginResponse: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/login/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(credential))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(UserLoginResponse.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def user_logout(self,
                    refresh_token):
        """Does a POST request to /logout/.

        User logout

        Args:
            refresh_token (AuthenticationAuthenticateResponse): request body
                object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/logout/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(refresh_token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def refresh_token(self,
                      token):
        """Does a POST request to /token/.

        Re-issue tokens from existing token

        Args:
            token (Token): Token object

        Returns:
            RefreshTokenResponse: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/token/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(token))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(RefreshTokenResponse.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()
