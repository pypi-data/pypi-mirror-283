# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from mergedapi.models.vulnerability_counts_response import VulnerabilityCountsResponse
from mergedapi.models.vulnerability_list_pb_ns_response import VulnerabilityListPBNsResponse
from mergedapi.models.vulnerability_create_pbn_response import VulnerabilityCreatePBNResponse
from mergedapi.models.vulnerability_update_pbn_response import VulnerabilityUpdatePBNResponse
from mergedapi.models.vulnerability_read_pbn_response import VulnerabilityReadPBNResponse
from mergedapi.exceptions.googlerpc_status_exception import GooglerpcStatusException


class VulnerabilityPBNController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(VulnerabilityPBNController, self).__init__(config)

    def vulnerability_service_counts(self,
                                     org_id):
        """Does a GET request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbn/counts.

        Delivers counts of PBNs and affected devices, grouped by customer risk
        and ack status.

        Args:
            org_id (str): TODO: type description here.

        Returns:
            VulnerabilityCountsResponse: Response from the API. A successful
                response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbn/counts')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityCountsResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_list_pb_ns(self,
                                         org_id,
                                         selection_pagination_page_size=None,
                                         selection_pagination_page_offset=None,
                                         selection_filtering_filter=None,
                                         selection_sort_keys=None):
        """Does a GET request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbns.

        List all PBNs from the server.

        Args:
            org_id (str): TODO: type description here.
            selection_pagination_page_size (int, optional): Defines the number
                of entities to be returned. If this is 0, the other fields are
                ignored and all qualifying entities will be returned. If
                non-0, the corresponding PaginationResponse will be populated
                with the total number of entities (subject to any filtering).
            selection_pagination_page_offset (int, optional): Holds the
                zero-based index of the page of results to be returned.
            selection_filtering_filter (str, optional): Defines a filter using
                language derived from the grammar described by
                https://google.aip.dev/160. - `address = "192.168.1.82"` -
                `count < 10` - `started_at > 2023-05-03T11:43:41.266Z` -
                `host_name = "mx*" AND severity = "major"` -
                `time_acknowledged != null` -
                `target_ids:"34f3ae1d-1829-4175-9482-b80f61e4fac7"`   #
                target_ids array contains specified id  Field names must
                appear on the left-hand side of a comparison operator; the
                right-hand side accepts only literals and logical operators. 
                A filter can only reference fields which are listed in the
                table definition in the relevant persistence repository.  When
                a filter compares the value of an enumeration, it can specify
                the value either as an integer or as a string containing the
                corresponding enumeration string, as in `severity = "major"`
                above.
            selection_sort_keys (List[str], optional): Defines the names of
                columns used to sort the returned entities. Format is
                "columname[ order]". order can be asc (ascending) or desc
                (descending); if omitted, order defaults to ascending. If
                multiple sort columns are defined, the precedence reflects the
                order in which they are specified, with the first column
                having the highest precedence. Examples: - "name" -
                "started_at desc" - "score asc"

        Returns:
            VulnerabilityListPBNsResponse: Response from the API. A successful
                response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbns')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('selection.pagination.pageSize')
                         .value(selection_pagination_page_size))
            .query_param(Parameter()
                         .key('selection.pagination.pageOffset')
                         .value(selection_pagination_page_offset))
            .query_param(Parameter()
                         .key('selection.filtering.filter')
                         .value(selection_filtering_filter))
            .query_param(Parameter()
                         .key('selection.sort.keys')
                         .value(selection_sort_keys))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityListPBNsResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_create_pbn(self,
                                         org_id,
                                         body):
        """Does a POST request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbns.

        Create PBN on the server

        Args:
            org_id (str): TODO: type description here.
            body (TrustApiV11alphaVulnerabilityPbnsRequest): TODO: type
                description here.

        Returns:
            VulnerabilityCreatePBNResponse: Response from the API. A
                successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbns')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityCreatePBNResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_update_pbn(self,
                                         org_id,
                                         definition_id=None,
                                         definition_bug_id=None,
                                         definition_pds=None,
                                         definition_trigger=None,
                                         definition_description=None,
                                         definition_headline=None,
                                         definition_platform_category=None,
                                         definition_product_category=None,
                                         definition_affected_version=None,
                                         definition_fixed_in=None,
                                         definition_customer_risk=None,
                                         definition_problem_level=None,
                                         definition_acked=None):
        """Does a PUT request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbns.

        Update PBN on the server.

        Args:
            org_id (str): TODO: type description here.
            definition_id (str, optional): Uniquely identifies the PBN.
            definition_bug_id (int, optional): Unique integer assigned to the
                problem; otherwise known as PR number.
            definition_pds (float, optional): Stands for Programmatically
                Determined Score. More info can be found from Sharepoint
                https://junipernetworks.sharepoint.com/teams/as/gsat/ASET/SiteP
                ages/A%20script%20to%20recalculate%20internal%20duplicate%20mas
                ter%20PRs%27%20score.aspx
            definition_trigger (str, optional): Describes what triggers the
                problem.
            definition_description (str, optional): Detailed description of
                the problem.
            definition_headline (str, optional): A brief description of the
                problem.
            definition_platform_category (List[str], optional): Identifies
                platforms affected by the problem.
            definition_product_category (List[str], optional): Identifies
                products affected by the problem.
            definition_affected_version (List[str], optional): Identifies
                releases that are affected by the problem.
            definition_fixed_in (List[str], optional): Identifies
                Committed-Release values where the problem is fixed.
            definition_customer_risk (DefinitionCustomerRisk1Enum, optional):
                Captures the objective classification of the potential impact
                to a customer of the bug or defect if it were to be
                encountered in a customer network.
            definition_problem_level (str, optional): Represents the level of
                service impact of the problem represented by the problem.
            definition_acked (bool, optional): Has the PBN been acknowledged?

        Returns:
            VulnerabilityUpdatePBNResponse: Response from the API. A
                successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbns')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('definition.id')
                         .value(definition_id))
            .query_param(Parameter()
                         .key('definition.bugId')
                         .value(definition_bug_id))
            .query_param(Parameter()
                         .key('definition.pds')
                         .value(definition_pds))
            .query_param(Parameter()
                         .key('definition.trigger')
                         .value(definition_trigger))
            .query_param(Parameter()
                         .key('definition.description')
                         .value(definition_description))
            .query_param(Parameter()
                         .key('definition.headline')
                         .value(definition_headline))
            .query_param(Parameter()
                         .key('definition.platformCategory')
                         .value(definition_platform_category))
            .query_param(Parameter()
                         .key('definition.productCategory')
                         .value(definition_product_category))
            .query_param(Parameter()
                         .key('definition.affectedVersion')
                         .value(definition_affected_version))
            .query_param(Parameter()
                         .key('definition.fixedIn')
                         .value(definition_fixed_in))
            .query_param(Parameter()
                         .key('definition.customerRisk')
                         .value(definition_customer_risk))
            .query_param(Parameter()
                         .key('definition.problemLevel')
                         .value(definition_problem_level))
            .query_param(Parameter()
                         .key('definition.acked')
                         .value(definition_acked))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityUpdatePBNResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_update_pbn_ack_status(self,
                                                    org_id,
                                                    ack=None,
                                                    pbn_ids=None):
        """Does a PUT request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbns/ack.

        Updates the ack status of a list of advisories.

        Args:
            org_id (str): TODO: type description here.
            ack (bool, optional): Holds true/false to indicate whether the
                PBNs should be acked/unacked.
            pbn_ids (List[str], optional): Defines the ids of the PBNs for
                which ack status is to be updated.

        Returns:
            object: Response from the API. A successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbns/ack')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('ack')
                         .value(ack))
            .query_param(Parameter()
                         .key('pbnIds')
                         .value(pbn_ids))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_read_pbn(self,
                                       org_id,
                                       id):
        """Does a GET request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbns/{id}.

        Read PBN from the server.

        Args:
            org_id (str): TODO: type description here.
            id (str): TODO: type description here.

        Returns:
            VulnerabilityReadPBNResponse: Response from the API. A successful
                response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbns/{id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('id')
                            .value(id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityReadPBNResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_delete_pbn(self,
                                         org_id,
                                         id):
        """Does a DELETE request to /trust/api/v1.1alpha/{orgId}/vulnerability/pbns/{id}.

        Delete PBN on the server.

        Args:
            org_id (str): TODO: type description here.
            id (str): TODO: type description here.

        Returns:
            object: Response from the API. A successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/pbns/{id}')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('id')
                            .value(id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()
