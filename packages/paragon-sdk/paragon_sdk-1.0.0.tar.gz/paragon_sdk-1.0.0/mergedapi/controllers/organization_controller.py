# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from mergedapi.models.site_schema import SiteSchema
from mergedapi.models.edge_schema import EdgeSchema
from mergedapi.exceptions.api_exception import APIException


class OrganizationController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(OrganizationController, self).__init__(config)

    def delete_healthbot_organization_site_site_by_id(self,
                                                      organization_name,
                                                      site_name,
                                                      x_iam_token=None):
        """Does a DELETE request to /config/organization/{organization_name}/site/{site_name}/.

        Delete operation of resource: site

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
        ).execute()

    def retrieve_healthbot_organization_site_site_by_id(self,
                                                        organization_name,
                                                        site_name,
                                                        x_iam_token=None,
                                                        working=None):
        """Does a GET request to /config/organization/{organization_name}/site/{site_name}/.

        Retrieve operation of resource: site

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            x_iam_token (str, optional): authentication header object
            working (bool, optional): true queries undeployed configuration

        Returns:
            SiteSchema: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('working')
                         .value(working))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(SiteSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def create_healthbot_organization_site_site_by_id(self,
                                                      organization_name,
                                                      site_name,
                                                      site,
                                                      x_iam_token=None):
        """Does a POST request to /config/organization/{organization_name}/site/{site_name}/.

        Create operation of resource: site

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            site (SiteSchema): sitebody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .body_param(Parameter()
                        .value(site))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def update_healthbot_organization_site_site_by_id(self,
                                                      organization_name,
                                                      site_name,
                                                      site,
                                                      x_iam_token=None):
        """Does a PUT request to /config/organization/{organization_name}/site/{site_name}/.

        Update operation of resource: site

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            site (SiteSchema): sitebody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .body_param(Parameter()
                        .value(site))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def delete_healthbot_organization_site_edge_edge_by_id(self,
                                                           organization_name,
                                                           site_name,
                                                           edge_name,
                                                           x_iam_token=None):
        """Does a DELETE request to /config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/.

        Delete operation of resource: edge

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            edge_name (str): ID of edge-name
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('edge_name')
                            .value(edge_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
        ).execute()

    def retrieve_healthbot_organization_site_edge_edge_by_id(self,
                                                             organization_name,
                                                             site_name,
                                                             edge_name,
                                                             x_iam_token=None,
                                                             working=None):
        """Does a GET request to /config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/.

        Retrieve operation of resource: edge

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            edge_name (str): ID of edge-name
            x_iam_token (str, optional): authentication header object
            working (bool, optional): true queries undeployed configuration

        Returns:
            EdgeSchema: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('edge_name')
                            .value(edge_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('working')
                         .value(working))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(EdgeSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def create_healthbot_organization_site_edge_edge_by_id(self,
                                                           organization_name,
                                                           site_name,
                                                           edge_name,
                                                           edge,
                                                           x_iam_token=None):
        """Does a POST request to /config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/.

        Create operation of resource: edge

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            edge_name (str): ID of edge-name
            edge (EdgeSchema): edgebody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('edge_name')
                            .value(edge_name)
                            .should_encode(True))
            .body_param(Parameter()
                        .value(edge))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def update_healthbot_organization_site_edge_edge_by_id(self,
                                                           organization_name,
                                                           site_name,
                                                           edge_name,
                                                           edge,
                                                           x_iam_token=None):
        """Does a PUT request to /config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/.

        Update operation of resource: edge

        Args:
            organization_name (str): ID of organization-name
            site_name (str): ID of site-name
            edge_name (str): ID of edge-name
            edge (EdgeSchema): edgebody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/organization/{organization_name}/site/{site_name}/edge/{edge_name}/')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('organization_name')
                            .value(organization_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('site_name')
                            .value(site_name)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('edge_name')
                            .value(edge_name)
                            .should_encode(True))
            .body_param(Parameter()
                        .value(edge))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()
