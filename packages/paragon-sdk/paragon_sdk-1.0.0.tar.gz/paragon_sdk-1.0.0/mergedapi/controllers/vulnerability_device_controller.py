# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from mergedapi.models.vulnerability_read_device_pbn_ids_response import VulnerabilityReadDevicePBNIdsResponse
from mergedapi.models.vulnerability_read_device_advisory_ids_response import VulnerabilityReadDeviceAdvisoryIdsResponse
from mergedapi.exceptions.googlerpc_status_exception import GooglerpcStatusException


class VulnerabilityDeviceController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(VulnerabilityDeviceController, self).__init__(config)

    def vulnerability_service_read_device_pbn_ids(self,
                                                  org_id,
                                                  device_id):
        """Does a GET request to /trust/api/v1.1alpha/{orgId}/vulnerability/device/pbns/{deviceId}.

        Delivers list of PBN ids that affect a managed device.

        Args:
            org_id (str): TODO: type description here.
            device_id (str): TODO: type description here.

        Returns:
            VulnerabilityReadDevicePBNIdsResponse: Response from the API. A
                successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/device/pbns/{deviceId}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('deviceId')
                            .value(device_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityReadDevicePBNIdsResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()

    def vulnerability_service_read_device_advisory_ids(self,
                                                       org_id,
                                                       device_id):
        """Does a GET request to /trust/api/v1.1alpha/{orgId}/vulnerability/device/{deviceId}.

        Delivers list of advisory ids that affect a managed device.

        Args:
            org_id (str): TODO: type description here.
            device_id (str): TODO: type description here.

        Returns:
            VulnerabilityReadDeviceAdvisoryIdsResponse: Response from the API.
                A successful response.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/trust/api/v1.1alpha/{orgId}/vulnerability/device/{deviceId}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('orgId')
                            .value(org_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('deviceId')
                            .value(device_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('APIKeyHeader'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(VulnerabilityReadDeviceAdvisoryIdsResponse.from_dictionary)
            .local_error('default', 'An unexpected error response.', GooglerpcStatusException)
        ).execute()
