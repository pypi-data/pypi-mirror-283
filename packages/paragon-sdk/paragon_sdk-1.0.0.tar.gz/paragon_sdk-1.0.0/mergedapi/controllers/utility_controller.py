# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from mergedapi.models.junosencode_response import JunosencodeResponse
from mergedapi.models.junosdecode_response import JunosdecodeResponse
from mergedapi.exceptions.error_exception import ErrorException


class UtilityController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(UtilityController, self).__init__(config)

    def junosencode(self,
                    data,
                    x_iam_token=None):
        """Does a POST request to /junos-encode/.

        Encode string with Junos

        Args:
            data (Data): String to Encode with Junos
            x_iam_token (str, optional): authentication header object

        Returns:
            JunosencodeResponse: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/junos-encode/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(data))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(JunosencodeResponse.from_dictionary)
            .local_error('default', 'unexpected error', ErrorException)
        ).execute()

    def junosdecode(self,
                    data,
                    x_iam_token=None):
        """Does a POST request to /junos-decode/.

        Decode string with Junos

        Args:
            data (Data): String to Encode with Junos
            x_iam_token (str, optional): authentication header object

        Returns:
            JunosdecodeResponse: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/junos-decode/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(data))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(JunosdecodeResponse.from_dictionary)
            .local_error('default', 'unexpected error', ErrorException)
        ).execute()
