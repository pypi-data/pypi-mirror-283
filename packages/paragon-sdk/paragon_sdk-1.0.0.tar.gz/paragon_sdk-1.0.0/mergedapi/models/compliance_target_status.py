# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class ComplianceTargetStatus(object):

    """Implementation of the 'complianceTargetStatus' model.

    Records the current scan status for a target.
    Summarises the result of the most recent scan that completed normally
    (without error).

    Attributes:
        target_id (str): The id of the target device associated with the
            result.
        scan_id (str): id is the system-generated unique identifier of the
            scan.
        status (ComplianceScanStatusEnum): TODO: type description here.
        score (float): When the scan is complete, defines the XCCDF-computed
            score for the device.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "target_id": 'targetId',
        "scan_id": 'scanId',
        "status": 'status',
        "score": 'score'
    }

    _optionals = [
        'target_id',
        'scan_id',
        'status',
        'score',
    ]

    def __init__(self,
                 target_id=APIHelper.SKIP,
                 scan_id=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 score=APIHelper.SKIP):
        """Constructor for the ComplianceTargetStatus class"""

        # Initialize members of the class
        if target_id is not APIHelper.SKIP:
            self.target_id = target_id 
        if scan_id is not APIHelper.SKIP:
            self.scan_id = scan_id 
        if status is not APIHelper.SKIP:
            self.status = status 
        if score is not APIHelper.SKIP:
            self.score = score 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        target_id = dictionary.get("targetId") if dictionary.get("targetId") else APIHelper.SKIP
        scan_id = dictionary.get("scanId") if dictionary.get("scanId") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        score = dictionary.get("score") if dictionary.get("score") else APIHelper.SKIP
        # Return an object of this model
        return cls(target_id,
                   scan_id,
                   status,
                   score)
