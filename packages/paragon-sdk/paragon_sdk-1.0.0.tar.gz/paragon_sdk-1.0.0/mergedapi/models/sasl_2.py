# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Sasl2(object):

    """Implementation of the 'Sasl2' model.

    Authetication using username and password over TLS connection

    Attributes:
        ca_profile (str): Name of the ca-profile to be used
        local_certificate (str): Name of the local-certificate-profile to be
            used
        password (str): Password for sasl authentication
        server_common_name (str): Common name used while creating server
            certificate
        username (str): Username for sasl authentication

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ca_profile": 'ca-profile',
        "local_certificate": 'local-certificate',
        "password": 'password',
        "server_common_name": 'server-common-name',
        "username": 'username'
    }

    _optionals = [
        'ca_profile',
        'local_certificate',
        'password',
        'server_common_name',
        'username',
    ]

    def __init__(self,
                 ca_profile=APIHelper.SKIP,
                 local_certificate=APIHelper.SKIP,
                 password=APIHelper.SKIP,
                 server_common_name=APIHelper.SKIP,
                 username=APIHelper.SKIP):
        """Constructor for the Sasl2 class"""

        # Initialize members of the class
        if ca_profile is not APIHelper.SKIP:
            self.ca_profile = ca_profile 
        if local_certificate is not APIHelper.SKIP:
            self.local_certificate = local_certificate 
        if password is not APIHelper.SKIP:
            self.password = password 
        if server_common_name is not APIHelper.SKIP:
            self.server_common_name = server_common_name 
        if username is not APIHelper.SKIP:
            self.username = username 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ca_profile = dictionary.get("ca-profile") if dictionary.get("ca-profile") else APIHelper.SKIP
        local_certificate = dictionary.get("local-certificate") if dictionary.get("local-certificate") else APIHelper.SKIP
        password = dictionary.get("password") if dictionary.get("password") else APIHelper.SKIP
        server_common_name = dictionary.get("server-common-name") if dictionary.get("server-common-name") else APIHelper.SKIP
        username = dictionary.get("username") if dictionary.get("username") else APIHelper.SKIP
        # Return an object of this model
        return cls(ca_profile,
                   local_certificate,
                   password,
                   server_common_name,
                   username)
