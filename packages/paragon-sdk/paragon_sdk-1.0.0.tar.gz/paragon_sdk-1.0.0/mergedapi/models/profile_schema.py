# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.data_summarization import DataSummarization
from mergedapi.models.rollup_summarizations_schema import RollupSummarizationsSchema
from mergedapi.models.security_1 import Security1


class ProfileSchema(object):

    """Implementation of the 'profile_schema' model.

    TODO: type model description here.

    Attributes:
        security (Security1): Security config
        data_summarization (DataSummarization): summarization config
        rollup_summarization (RollupSummarizationsSchema): Data rollup
            summarization

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "security": 'security',
        "data_summarization": 'data-summarization',
        "rollup_summarization": 'rollup-summarization'
    }

    _optionals = [
        'security',
        'data_summarization',
        'rollup_summarization',
    ]

    def __init__(self,
                 security=APIHelper.SKIP,
                 data_summarization=APIHelper.SKIP,
                 rollup_summarization=APIHelper.SKIP):
        """Constructor for the ProfileSchema class"""

        # Initialize members of the class
        if security is not APIHelper.SKIP:
            self.security = security 
        if data_summarization is not APIHelper.SKIP:
            self.data_summarization = data_summarization 
        if rollup_summarization is not APIHelper.SKIP:
            self.rollup_summarization = rollup_summarization 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        security = Security1.from_dictionary(dictionary.get('security')) if 'security' in dictionary.keys() else APIHelper.SKIP
        data_summarization = DataSummarization.from_dictionary(dictionary.get('data-summarization')) if 'data-summarization' in dictionary.keys() else APIHelper.SKIP
        rollup_summarization = RollupSummarizationsSchema.from_dictionary(dictionary.get('rollup-summarization')) if 'rollup-summarization' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(security,
                   data_summarization,
                   rollup_summarization)
