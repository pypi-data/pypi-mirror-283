# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class DoesNotMatchWithScheduler(object):

    """Implementation of the 'DoesNotMatchWithScheduler' model.

    TODO: type model description here.

    Attributes:
        scheduler (str): Name of the scheduler defined within system/scheduler
            hierarchy
        time (str): Field holding time in UNIX time format. Optional default
            is point time
        in_memory (bool): Look for time in internal cache

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "scheduler": 'scheduler',
        "time": 'time',
        "in_memory": 'in-memory'
    }

    _optionals = [
        'time',
        'in_memory',
    ]

    def __init__(self,
                 scheduler=None,
                 time=APIHelper.SKIP,
                 in_memory=APIHelper.SKIP):
        """Constructor for the DoesNotMatchWithScheduler class"""

        # Initialize members of the class
        self.scheduler = scheduler 
        if time is not APIHelper.SKIP:
            self.time = time 
        if in_memory is not APIHelper.SKIP:
            self.in_memory = in_memory 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        scheduler = dictionary.get("scheduler") if dictionary.get("scheduler") else None
        time = dictionary.get("time") if dictionary.get("time") else APIHelper.SKIP
        in_memory = dictionary.get("in-memory") if "in-memory" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(scheduler,
                   time,
                   in_memory)
