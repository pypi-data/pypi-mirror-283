# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class ScoreFactorContribution(object):

    """Implementation of the 'scoreFactorContribution' model.

    FactorContribution associates a Factor with the score contribution that
    can be made when a value for the factor is defined.

    Attributes:
        factor_id (str): Defines the id of the factor with which the
            contribution is associated.
        contributions (List[int]): The contribution values associated with the
            factor. The number and sense of these values vary according to the
            type of Factor. Specifically, an EnumerationFactor can have a
            different contribution for each enumeration value. Other types of
            Factor have only a single contribution value.
        description (str): Describes the factor contributions.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "factor_id": 'factorId',
        "contributions": 'contributions',
        "description": 'description'
    }

    _optionals = [
        'factor_id',
        'contributions',
        'description',
    ]

    def __init__(self,
                 factor_id=APIHelper.SKIP,
                 contributions=APIHelper.SKIP,
                 description=APIHelper.SKIP):
        """Constructor for the ScoreFactorContribution class"""

        # Initialize members of the class
        if factor_id is not APIHelper.SKIP:
            self.factor_id = factor_id 
        if contributions is not APIHelper.SKIP:
            self.contributions = contributions 
        if description is not APIHelper.SKIP:
            self.description = description 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        factor_id = dictionary.get("factorId") if dictionary.get("factorId") else APIHelper.SKIP
        contributions = dictionary.get("contributions") if dictionary.get("contributions") else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        # Return an object of this model
        return cls(factor_id,
                   contributions,
                   description)
