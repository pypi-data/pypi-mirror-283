# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CaptureGroups(object):

    """Implementation of the 'CaptureGroups' model.

    Capture regex groups from the provided field. New fields will be created
    in the format '<curr-field>-<group-name>' if named capture groups are
    provided

    Attributes:
        field_name (str): Field name on which capture-groups operation needs
            to be performed
        pattern (str): Regex pattern with capture groups to be used on the
            field. Should be a valid regex with capture groups and the capture
            groups needs to be named

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "field_name": 'field-name',
        "pattern": 'pattern'
    }

    def __init__(self,
                 field_name=None,
                 pattern=None):
        """Constructor for the CaptureGroups class"""

        # Initialize members of the class
        self.field_name = field_name 
        self.pattern = pattern 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        field_name = dictionary.get("field-name") if dictionary.get("field-name") else None
        pattern = dictionary.get("pattern") if dictionary.get("pattern") else None
        # Return an object of this model
        return cls(field_name,
                   pattern)
