# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class SnapshotTrustScore(object):

    """Implementation of the 'snapshotTrustScore' model.

    DeviceScan summarises the result of a trust score calculation.

    Attributes:
        score_id (str): References the score entity containing all the details
            of the score.
        end_time (datetime): The time at which the score was calculated.
        score (float): The calculated trust score.
        plan_id (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "score_id": 'scoreId',
        "end_time": 'endTime',
        "score": 'score',
        "plan_id": 'planId'
    }

    _optionals = [
        'score_id',
        'end_time',
        'score',
        'plan_id',
    ]

    def __init__(self,
                 score_id=APIHelper.SKIP,
                 end_time=APIHelper.SKIP,
                 score=APIHelper.SKIP,
                 plan_id=APIHelper.SKIP):
        """Constructor for the SnapshotTrustScore class"""

        # Initialize members of the class
        if score_id is not APIHelper.SKIP:
            self.score_id = score_id 
        if end_time is not APIHelper.SKIP:
            self.end_time = APIHelper.apply_datetime_converter(end_time, APIHelper.RFC3339DateTime) if end_time else None 
        if score is not APIHelper.SKIP:
            self.score = score 
        if plan_id is not APIHelper.SKIP:
            self.plan_id = plan_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        score_id = dictionary.get("scoreId") if dictionary.get("scoreId") else APIHelper.SKIP
        end_time = APIHelper.RFC3339DateTime.from_value(dictionary.get("endTime")).datetime if dictionary.get("endTime") else APIHelper.SKIP
        score = dictionary.get("score") if dictionary.get("score") else APIHelper.SKIP
        plan_id = dictionary.get("planId") if dictionary.get("planId") else APIHelper.SKIP
        # Return an object of this model
        return cls(score_id,
                   end_time,
                   score,
                   plan_id)
