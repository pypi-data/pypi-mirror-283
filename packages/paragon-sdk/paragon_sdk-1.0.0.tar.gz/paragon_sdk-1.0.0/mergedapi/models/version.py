# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Version(object):

    """Implementation of the 'Version' model.

    TODO: type model description here.

    Attributes:
        id (str): Uniquely identifies the version; for example "5.1", "16.4".
        frs_date (datetime): Holds the FRS (First Release Shipping) date of
            the product.
        end_of_eng_date (datetime): Holds the end of engineering date of the
            product.
        end_of_life_date (datetime): Holds the end of life date of the
            product.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "frs_date": 'frsDate',
        "end_of_eng_date": 'endOfEngDate',
        "end_of_life_date": 'endOfLifeDate'
    }

    _optionals = [
        'id',
        'frs_date',
        'end_of_eng_date',
        'end_of_life_date',
    ]

    def __init__(self,
                 id=APIHelper.SKIP,
                 frs_date=APIHelper.SKIP,
                 end_of_eng_date=APIHelper.SKIP,
                 end_of_life_date=APIHelper.SKIP):
        """Constructor for the Version class"""

        # Initialize members of the class
        if id is not APIHelper.SKIP:
            self.id = id 
        if frs_date is not APIHelper.SKIP:
            self.frs_date = APIHelper.apply_datetime_converter(frs_date, APIHelper.RFC3339DateTime) if frs_date else None 
        if end_of_eng_date is not APIHelper.SKIP:
            self.end_of_eng_date = APIHelper.apply_datetime_converter(end_of_eng_date, APIHelper.RFC3339DateTime) if end_of_eng_date else None 
        if end_of_life_date is not APIHelper.SKIP:
            self.end_of_life_date = APIHelper.apply_datetime_converter(end_of_life_date, APIHelper.RFC3339DateTime) if end_of_life_date else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        frs_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("frsDate")).datetime if dictionary.get("frsDate") else APIHelper.SKIP
        end_of_eng_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("endOfEngDate")).datetime if dictionary.get("endOfEngDate") else APIHelper.SKIP
        end_of_life_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("endOfLifeDate")).datetime if dictionary.get("endOfLifeDate") else APIHelper.SKIP
        # Return an object of this model
        return cls(id,
                   frs_date,
                   end_of_eng_date,
                   end_of_life_date)
