# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.definition import Definition


class Advisory(object):

    """Implementation of the 'Advisory' model.

    TODO: type model description here.

    Attributes:
        definition (Definition): TODO: type description here.
        affected_devices (List[str]): The ids of managed devices that are
            affected by the advisory. This will be empty if no devices are
            affected by the advisory.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "definition": 'definition',
        "affected_devices": 'affectedDevices'
    }

    _optionals = [
        'definition',
        'affected_devices',
    ]

    def __init__(self,
                 definition=APIHelper.SKIP,
                 affected_devices=APIHelper.SKIP):
        """Constructor for the Advisory class"""

        # Initialize members of the class
        if definition is not APIHelper.SKIP:
            self.definition = definition 
        if affected_devices is not APIHelper.SKIP:
            self.affected_devices = affected_devices 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        definition = Definition.from_dictionary(dictionary.get('definition')) if 'definition' in dictionary.keys() else APIHelper.SKIP
        affected_devices = dictionary.get("affectedDevices") if dictionary.get("affectedDevices") else APIHelper.SKIP
        # Return an object of this model
        return cls(definition,
                   affected_devices)
