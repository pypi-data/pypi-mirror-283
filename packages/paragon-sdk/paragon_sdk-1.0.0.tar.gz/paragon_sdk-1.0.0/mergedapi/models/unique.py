# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Unique(object):

    """Implementation of the 'Unique' model.

    Create a vector with unique elements from another vector

    Attributes:
        vector_name (str): Vector name in which unique elements needs to be
            computed. Pattern for giving vector name is @[a-z][a-zA-Z0-9_-]*

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "vector_name": 'vector-name'
    }

    def __init__(self,
                 vector_name=None):
        """Constructor for the Unique class"""

        # Initialize members of the class
        self.vector_name = vector_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        vector_name = dictionary.get("vector-name") if dictionary.get("vector-name") else None
        # Return an object of this model
        return cls(vector_name)
