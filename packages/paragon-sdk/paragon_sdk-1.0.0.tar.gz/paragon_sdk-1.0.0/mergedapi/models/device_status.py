# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class DeviceStatus(object):

    """Implementation of the 'deviceStatus' model.

    TODO: type model description here.

    Attributes:
        last_discovered (datetime): TODO: type description here.
        error (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "last_discovered": 'lastDiscovered',
        "error": 'error'
    }

    _optionals = [
        'last_discovered',
        'error',
    ]

    def __init__(self,
                 last_discovered=APIHelper.SKIP,
                 error=APIHelper.SKIP):
        """Constructor for the DeviceStatus class"""

        # Initialize members of the class
        if last_discovered is not APIHelper.SKIP:
            self.last_discovered = APIHelper.apply_datetime_converter(last_discovered, APIHelper.RFC3339DateTime) if last_discovered else None 
        if error is not APIHelper.SKIP:
            self.error = error 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        last_discovered = APIHelper.RFC3339DateTime.from_value(dictionary.get("lastDiscovered")).datetime if dictionary.get("lastDiscovered") else APIHelper.SKIP
        error = dictionary.get("error") if dictionary.get("error") else APIHelper.SKIP
        # Return an object of this model
        return cls(last_discovered,
                   error)
