# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class WithCaptureGroup(object):

    """Implementation of the 'WithCaptureGroup' model.

    TODO: type model description here.

    Attributes:
        capture_group_name (str): Name of the capture group. Should be of
            pattern [a-zA-Z][a-zA-Z0-9-]*
        expression (str): Regular expression to extract sub strings
        field_name (str): Name of the local or depending resource field name
        ignore_case (bool): If true, regex match with be case insensitive

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "capture_group_name": 'capture-group-name',
        "expression": 'expression',
        "field_name": 'field-name',
        "ignore_case": 'ignore-case'
    }

    _optionals = [
        'expression',
        'field_name',
        'ignore_case',
    ]

    def __init__(self,
                 capture_group_name=None,
                 expression=APIHelper.SKIP,
                 field_name=APIHelper.SKIP,
                 ignore_case=APIHelper.SKIP):
        """Constructor for the WithCaptureGroup class"""

        # Initialize members of the class
        self.capture_group_name = capture_group_name 
        if expression is not APIHelper.SKIP:
            self.expression = expression 
        if field_name is not APIHelper.SKIP:
            self.field_name = field_name 
        if ignore_case is not APIHelper.SKIP:
            self.ignore_case = ignore_case 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        capture_group_name = dictionary.get("capture-group-name") if dictionary.get("capture-group-name") else None
        expression = dictionary.get("expression") if dictionary.get("expression") else APIHelper.SKIP
        field_name = dictionary.get("field-name") if dictionary.get("field-name") else APIHelper.SKIP
        ignore_case = dictionary.get("ignore-case") if "ignore-case" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(capture_group_name,
                   expression,
                   field_name,
                   ignore_case)
