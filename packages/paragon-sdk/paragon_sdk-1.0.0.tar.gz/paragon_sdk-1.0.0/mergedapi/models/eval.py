# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Eval(object):

    """Implementation of the 'Eval' model.

    Evaluates the expression

    Attributes:
        expression (str): Expression for evaluation must be a valid golang
            expression. Field-name if used in expression must be prefixed with
            $. operators should be prefix and suffix with spaces. For Example:
            $a + $b - $c

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "expression": 'expression'
    }

    def __init__(self,
                 expression=None):
        """Constructor for the Eval class"""

        # Initialize members of the class
        self.expression = expression 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        expression = dictionary.get("expression") if dictionary.get("expression") else None
        # Return an object of this model
        return cls(expression)
