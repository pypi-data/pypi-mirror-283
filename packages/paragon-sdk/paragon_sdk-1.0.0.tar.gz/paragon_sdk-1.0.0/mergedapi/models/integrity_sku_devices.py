# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.sku import Sku


class IntegritySKUDevices(object):

    """Implementation of the 'integritySKUDevices' model.

    SKUDevices encapsulates an SKU and the ids of the managed devices in which
    the SKU is a component.

    Attributes:
        sku (Sku): TODO: type description here.
        device_ids (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "sku": 'sku',
        "device_ids": 'deviceIds'
    }

    _optionals = [
        'sku',
        'device_ids',
    ]

    def __init__(self,
                 sku=APIHelper.SKIP,
                 device_ids=APIHelper.SKIP):
        """Constructor for the IntegritySKUDevices class"""

        # Initialize members of the class
        if sku is not APIHelper.SKIP:
            self.sku = sku 
        if device_ids is not APIHelper.SKIP:
            self.device_ids = device_ids 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        sku = Sku.from_dictionary(dictionary.get('sku')) if 'sku' in dictionary.keys() else APIHelper.SKIP
        device_ids = dictionary.get("deviceIds") if dictionary.get("deviceIds") else APIHelper.SKIP
        # Return an object of this model
        return cls(sku,
                   device_ids)
