# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class JaimlAnomalyDetection(object):

    """Implementation of the 'JaimlAnomalyDetection' model.

    Apply jaiml anomaly detection. Call the Jaiml/Columbo api to Learn dynamic
    threshold value over period
    of time and apply it on value

    Attributes:
        field_name (str): Field name on which anomaly detection needs to be
            applied

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "field_name": 'field-name'
    }

    def __init__(self,
                 field_name=None):
        """Constructor for the JaimlAnomalyDetection class"""

        # Initialize members of the class
        self.field_name = field_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        field_name = dictionary.get("field-name") if dictionary.get("field-name") else None
        # Return an object of this model
        return cls(field_name)
