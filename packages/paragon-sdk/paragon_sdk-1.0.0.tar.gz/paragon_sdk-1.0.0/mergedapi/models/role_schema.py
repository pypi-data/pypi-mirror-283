# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class RoleSchema(object):

    """Implementation of the 'role_schema' model.

    TODO: type model description here.

    Attributes:
        role_id (str): ID generated by system
        role_name (str): Name of the role

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "role_id": 'roleId',
        "role_name": 'roleName'
    }

    _optionals = [
        'role_id',
        'role_name',
    ]

    def __init__(self,
                 role_id=APIHelper.SKIP,
                 role_name=APIHelper.SKIP):
        """Constructor for the RoleSchema class"""

        # Initialize members of the class
        if role_id is not APIHelper.SKIP:
            self.role_id = role_id 
        if role_name is not APIHelper.SKIP:
            self.role_name = role_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        role_id = dictionary.get("roleId") if dictionary.get("roleId") else APIHelper.SKIP
        role_name = dictionary.get("roleName") if dictionary.get("roleName") else APIHelper.SKIP
        # Return an object of this model
        return cls(role_id,
                   role_name)
