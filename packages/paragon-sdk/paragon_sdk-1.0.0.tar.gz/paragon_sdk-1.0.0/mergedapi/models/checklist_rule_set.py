# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class ChecklistRuleSet(object):

    """Implementation of the 'checklistRuleSet' model.

    RuleSet is the root of a tree that represents a set of checklist rules
    imported from a single document.
    Retaining the grouping from the source document allows a GUI the option of
    presenting rule groupings.

    Attributes:
        source_id (str): The id of the XCCDF document from which the rules
            were imported.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "source_id": 'sourceId'
    }

    _optionals = [
        'source_id',
    ]

    def __init__(self,
                 source_id=APIHelper.SKIP):
        """Constructor for the ChecklistRuleSet class"""

        # Initialize members of the class
        if source_id is not APIHelper.SKIP:
            self.source_id = source_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        source_id = dictionary.get("sourceId") if dictionary.get("sourceId") else APIHelper.SKIP
        # Return an object of this model
        return cls(source_id)
