# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Credenetial(object):

    """Implementation of the 'credenetial' model.

    TODO: type model description here.

    Attributes:
        email (str): User email address
        oldpassword (str): Old password
        newpassword (str): New password

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "email": 'email',
        "oldpassword": 'oldpassword',
        "newpassword": 'newpassword'
    }

    _optionals = [
        'email',
        'oldpassword',
        'newpassword',
    ]

    def __init__(self,
                 email=APIHelper.SKIP,
                 oldpassword=APIHelper.SKIP,
                 newpassword=APIHelper.SKIP):
        """Constructor for the Credenetial class"""

        # Initialize members of the class
        if email is not APIHelper.SKIP:
            self.email = email 
        if oldpassword is not APIHelper.SKIP:
            self.oldpassword = oldpassword 
        if newpassword is not APIHelper.SKIP:
            self.newpassword = newpassword 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        email = dictionary.get("email") if dictionary.get("email") else APIHelper.SKIP
        oldpassword = dictionary.get("oldpassword") if dictionary.get("oldpassword") else APIHelper.SKIP
        newpassword = dictionary.get("newpassword") if dictionary.get("newpassword") else APIHelper.SKIP
        # Return an object of this model
        return cls(email,
                   oldpassword,
                   newpassword)
