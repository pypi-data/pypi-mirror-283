# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Slack(object):

    """Implementation of the 'Slack' model.

    Define slack notification

    Attributes:
        channel (str): Channel on which notification should be posted
        url (str): URL on which slack notification needs to be posted

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "channel": 'channel',
        "url": 'url'
    }

    def __init__(self,
                 channel=None,
                 url=None):
        """Constructor for the Slack class"""

        # Initialize members of the class
        self.channel = channel 
        self.url = url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        channel = dictionary.get("channel") if dictionary.get("channel") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        # Return an object of this model
        return cls(channel,
                   url)
