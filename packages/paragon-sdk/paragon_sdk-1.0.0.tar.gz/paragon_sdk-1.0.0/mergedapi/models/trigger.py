# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.term import Term


class Trigger(object):

    """Implementation of the 'Trigger' model.

    TODO: type model description here.

    Attributes:
        description (str): Description about the trigger
        alert_type (str): Alter about the trigger
        frequency (str): Frequency or time interval at which the trigger needs
            to be evaluated. Specify positive integer followed by
            s/m/h/d/w/y/o representing
            seconds/minutes/hours/days/weeks/years/offset. Eg: 2s
        synopsis (str): Synopsis about the trigger
        disable_alarm_deduplication (List[object]): Disable alarm
            deduplication, so that alarms are always generated
        term (List[Term]): TODO: type description here.
        trigger_name (str): Trigger name. Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "term": 'term',
        "trigger_name": 'trigger-name',
        "description": 'description',
        "alert_type": 'alert-type',
        "frequency": 'frequency',
        "synopsis": 'synopsis',
        "disable_alarm_deduplication": 'disable-alarm-deduplication'
    }

    _optionals = [
        'description',
        'alert_type',
        'frequency',
        'synopsis',
        'disable_alarm_deduplication',
    ]

    def __init__(self,
                 term=None,
                 trigger_name=None,
                 description=APIHelper.SKIP,
                 alert_type=APIHelper.SKIP,
                 frequency=APIHelper.SKIP,
                 synopsis=APIHelper.SKIP,
                 disable_alarm_deduplication=APIHelper.SKIP):
        """Constructor for the Trigger class"""

        # Initialize members of the class
        if description is not APIHelper.SKIP:
            self.description = description 
        if alert_type is not APIHelper.SKIP:
            self.alert_type = alert_type 
        if frequency is not APIHelper.SKIP:
            self.frequency = frequency 
        if synopsis is not APIHelper.SKIP:
            self.synopsis = synopsis 
        if disable_alarm_deduplication is not APIHelper.SKIP:
            self.disable_alarm_deduplication = disable_alarm_deduplication 
        self.term = term 
        self.trigger_name = trigger_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        term = None
        if dictionary.get('term') is not None:
            term = [Term.from_dictionary(x) for x in dictionary.get('term')]
        trigger_name = dictionary.get("trigger-name") if dictionary.get("trigger-name") else None
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        alert_type = dictionary.get("alert-type") if dictionary.get("alert-type") else APIHelper.SKIP
        frequency = dictionary.get("frequency") if dictionary.get("frequency") else APIHelper.SKIP
        synopsis = dictionary.get("synopsis") if dictionary.get("synopsis") else APIHelper.SKIP
        disable_alarm_deduplication = dictionary.get("disable-alarm-deduplication") if dictionary.get("disable-alarm-deduplication") else APIHelper.SKIP
        # Return an object of this model
        return cls(term,
                   trigger_name,
                   description,
                   alert_type,
                   frequency,
                   synopsis,
                   disable_alarm_deduplication)
