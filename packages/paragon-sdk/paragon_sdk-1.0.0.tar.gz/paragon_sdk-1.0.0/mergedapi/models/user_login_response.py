# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class UserLoginResponse(object):

    """Implementation of the 'user_loginResponse' model.

    TODO: type model description here.

    Attributes:
        access_token (str): Access token generated by system
        refresh_token (str): Refresh token generated by system
        refresh_token_expires (str): Refresh token validity duration
        token_expires (str): Access token validity duration

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "access_token": 'accessToken',
        "refresh_token": 'refreshToken',
        "refresh_token_expires": 'refreshTokenExpires',
        "token_expires": 'tokenExpires'
    }

    _optionals = [
        'access_token',
        'refresh_token',
        'refresh_token_expires',
        'token_expires',
    ]

    def __init__(self,
                 access_token=APIHelper.SKIP,
                 refresh_token=APIHelper.SKIP,
                 refresh_token_expires=APIHelper.SKIP,
                 token_expires=APIHelper.SKIP):
        """Constructor for the UserLoginResponse class"""

        # Initialize members of the class
        if access_token is not APIHelper.SKIP:
            self.access_token = access_token 
        if refresh_token is not APIHelper.SKIP:
            self.refresh_token = refresh_token 
        if refresh_token_expires is not APIHelper.SKIP:
            self.refresh_token_expires = refresh_token_expires 
        if token_expires is not APIHelper.SKIP:
            self.token_expires = token_expires 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        access_token = dictionary.get("accessToken") if dictionary.get("accessToken") else APIHelper.SKIP
        refresh_token = dictionary.get("refreshToken") if dictionary.get("refreshToken") else APIHelper.SKIP
        refresh_token_expires = dictionary.get("refreshTokenExpires") if dictionary.get("refreshTokenExpires") else APIHelper.SKIP
        token_expires = dictionary.get("tokenExpires") if dictionary.get("tokenExpires") else APIHelper.SKIP
        # Return an object of this model
        return cls(access_token,
                   refresh_token,
                   refresh_token_expires,
                   token_expires)
