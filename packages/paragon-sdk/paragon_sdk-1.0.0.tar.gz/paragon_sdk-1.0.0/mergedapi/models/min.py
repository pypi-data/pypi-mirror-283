# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class Min(object):

    """Implementation of the 'Min' model.

    Find the min value

    Attributes:
        field_name (str): Field name on which min operation needs to be
            performed
        time_range (str): How much back in time should we look for data.
            Specify positive integer followed by s/m/h/d/w/y/o representing
            seconds/minutes/hours/days/weeks/years/offset. Eg: 2s

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "field_name": 'field-name',
        "time_range": 'time-range'
    }

    def __init__(self,
                 field_name=None,
                 time_range=None):
        """Constructor for the Min class"""

        # Initialize members of the class
        self.field_name = field_name 
        self.time_range = time_range 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        field_name = dictionary.get("field-name") if dictionary.get("field-name") else None
        time_range = dictionary.get("time-range") if dictionary.get("time-range") else None
        # Return an object of this model
        return cls(field_name,
                   time_range)
