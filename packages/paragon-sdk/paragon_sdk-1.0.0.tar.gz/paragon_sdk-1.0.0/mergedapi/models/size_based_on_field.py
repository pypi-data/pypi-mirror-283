# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.then import Then
from mergedapi.models.when_equal import WhenEqual


class SizeBasedOnField(object):

    """Implementation of the 'SizeBasedOnField' model.

    Current field size derived using previous field values

    Attributes:
        then (Then): Field size to be considered when none of comparison
            passes
        when_equal (List[WhenEqual]): List of lhs, rhs, and field size for
            each comparison

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "then": 'then',
        "when_equal": 'when-equal'
    }

    _optionals = [
        'then',
        'when_equal',
    ]

    def __init__(self,
                 then=APIHelper.SKIP,
                 when_equal=APIHelper.SKIP):
        """Constructor for the SizeBasedOnField class"""

        # Initialize members of the class
        if then is not APIHelper.SKIP:
            self.then = then 
        if when_equal is not APIHelper.SKIP:
            self.when_equal = when_equal 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        then = Then.from_dictionary(dictionary.get('then')) if 'then' in dictionary.keys() else APIHelper.SKIP
        when_equal = None
        if dictionary.get('when-equal') is not None:
            when_equal = [WhenEqual.from_dictionary(x) for x in dictionary.get('when-equal')]
        else:
            when_equal = APIHelper.SKIP
        # Return an object of this model
        return cls(then,
                   when_equal)
