# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class InventoryAssetPlacement(object):

    """Implementation of the 'inventoryAssetPlacement' model.

    AssetPlacement defines a placement within a device.

    Attributes:
        parent (List[str]): parent describes a containment hierarchy with the
            names of HardwareAsset entities. It will be empty for a toplevel
            entity e.g. a Chassis. The outermost HardwareAsset is at the
            beginning.
        place (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "parent": 'parent',
        "place": 'place'
    }

    _optionals = [
        'parent',
        'place',
    ]

    def __init__(self,
                 parent=APIHelper.SKIP,
                 place=APIHelper.SKIP):
        """Constructor for the InventoryAssetPlacement class"""

        # Initialize members of the class
        if parent is not APIHelper.SKIP:
            self.parent = parent 
        if place is not APIHelper.SKIP:
            self.place = place 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        parent = dictionary.get("parent") if dictionary.get("parent") else APIHelper.SKIP
        place = dictionary.get("place") if dictionary.get("place") else APIHelper.SKIP
        # Return an object of this model
        return cls(parent,
                   place)
