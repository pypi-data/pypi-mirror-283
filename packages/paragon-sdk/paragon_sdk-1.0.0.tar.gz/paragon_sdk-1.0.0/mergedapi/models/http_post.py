# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.basic import Basic


class HttpPost(object):

    """Implementation of the 'HttpPost' model.

    Define HTTP endpoint to post the notification

    Attributes:
        basic (Basic): Basic http authetication using username and password
        url (str): URL on which http notification needs to be posted

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "url": 'url',
        "basic": 'basic'
    }

    _optionals = [
        'basic',
    ]

    def __init__(self,
                 url=None,
                 basic=APIHelper.SKIP):
        """Constructor for the HttpPost class"""

        # Initialize members of the class
        if basic is not APIHelper.SKIP:
            self.basic = basic 
        self.url = url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        url = dictionary.get("url") if dictionary.get("url") else None
        basic = Basic.from_dictionary(dictionary.get('basic')) if 'basic' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(url,
                   basic)
