# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class WhereClause(object):

    """Implementation of the 'WhereClause' model.

    label name

    Attributes:
        key (KeyEnum): Field or key (type)
        operator (Operator1Enum): Operator for where clause
        value (str): Value for the field_tag_name to be validated
        logical_operation (LogicalOperationEnum): Graph type

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "key": 'key',
        "operator": 'operator',
        "value": 'value',
        "logical_operation": 'logical_operation'
    }

    _optionals = [
        'key',
        'operator',
        'value',
        'logical_operation',
    ]

    def __init__(self,
                 key=APIHelper.SKIP,
                 operator=APIHelper.SKIP,
                 value=APIHelper.SKIP,
                 logical_operation=APIHelper.SKIP):
        """Constructor for the WhereClause class"""

        # Initialize members of the class
        if key is not APIHelper.SKIP:
            self.key = key 
        if operator is not APIHelper.SKIP:
            self.operator = operator 
        if value is not APIHelper.SKIP:
            self.value = value 
        if logical_operation is not APIHelper.SKIP:
            self.logical_operation = logical_operation 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        key = dictionary.get("key") if dictionary.get("key") else APIHelper.SKIP
        operator = dictionary.get("operator") if dictionary.get("operator") else APIHelper.SKIP
        value = dictionary.get("value") if dictionary.get("value") else APIHelper.SKIP
        logical_operation = dictionary.get("logical_operation") if dictionary.get("logical_operation") else APIHelper.SKIP
        # Return an object of this model
        return cls(key,
                   operator,
                   value,
                   logical_operation)
