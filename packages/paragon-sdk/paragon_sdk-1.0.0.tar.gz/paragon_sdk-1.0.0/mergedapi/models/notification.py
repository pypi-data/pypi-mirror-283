# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Notification(object):

    """Implementation of the 'Notification' model.

    TODO: type model description here.

    Attributes:
        enable (List[object]): Turn on notifications
        major (List[str]): TODO: type description here.
        minor (List[str]): TODO: type description here.
        no_initial_normal_notify_suppression (bool): If true, Don't suppress
            the initial normal notifications
        normal (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "enable": 'enable',
        "major": 'major',
        "minor": 'minor',
        "no_initial_normal_notify_suppression": 'no-initial-normal-notify-suppression',
        "normal": 'normal'
    }

    _optionals = [
        'enable',
        'major',
        'minor',
        'no_initial_normal_notify_suppression',
        'normal',
    ]

    def __init__(self,
                 enable=APIHelper.SKIP,
                 major=APIHelper.SKIP,
                 minor=APIHelper.SKIP,
                 no_initial_normal_notify_suppression=APIHelper.SKIP,
                 normal=APIHelper.SKIP):
        """Constructor for the Notification class"""

        # Initialize members of the class
        if enable is not APIHelper.SKIP:
            self.enable = enable 
        if major is not APIHelper.SKIP:
            self.major = major 
        if minor is not APIHelper.SKIP:
            self.minor = minor 
        if no_initial_normal_notify_suppression is not APIHelper.SKIP:
            self.no_initial_normal_notify_suppression = no_initial_normal_notify_suppression 
        if normal is not APIHelper.SKIP:
            self.normal = normal 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        enable = dictionary.get("enable") if dictionary.get("enable") else APIHelper.SKIP
        major = dictionary.get("major") if dictionary.get("major") else APIHelper.SKIP
        minor = dictionary.get("minor") if dictionary.get("minor") else APIHelper.SKIP
        no_initial_normal_notify_suppression = dictionary.get("no-initial-normal-notify-suppression") if "no-initial-normal-notify-suppression" in dictionary.keys() else APIHelper.SKIP
        normal = dictionary.get("normal") if dictionary.get("normal") else APIHelper.SKIP
        # Return an object of this model
        return cls(enable,
                   major,
                   minor,
                   no_initial_normal_notify_suppression,
                   normal)
