# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class InventorySoftwareAsset(object):

    """Implementation of the 'inventorySoftwareAsset' model.

    SoftwareAsset defines a software asset.

    Attributes:
        name (str): TODO: type description here.
        device_id (str): TODO: type description here.
        version (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "device_id": 'deviceId',
        "version": 'version'
    }

    _optionals = [
        'name',
        'device_id',
        'version',
    ]

    def __init__(self,
                 name=APIHelper.SKIP,
                 device_id=APIHelper.SKIP,
                 version=APIHelper.SKIP):
        """Constructor for the InventorySoftwareAsset class"""

        # Initialize members of the class
        if name is not APIHelper.SKIP:
            self.name = name 
        if device_id is not APIHelper.SKIP:
            self.device_id = device_id 
        if version is not APIHelper.SKIP:
            self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        device_id = dictionary.get("deviceId") if dictionary.get("deviceId") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   device_id,
                   version)
