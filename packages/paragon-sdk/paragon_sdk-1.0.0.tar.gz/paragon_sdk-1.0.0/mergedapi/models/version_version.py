# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class VersionVersion(object):

    """Implementation of the 'versionVersion' model.

    Version represents a server version.

    Attributes:
        tag (str): Hold the build-tag/-commit/-date of the server instance
            that created the version.
        commit (str): TODO: type description here.
        date (str): TODO: type description here.
        created_time (datetime): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "tag": 'tag',
        "commit": 'commit',
        "date": 'date',
        "created_time": 'createdTime'
    }

    _optionals = [
        'tag',
        'commit',
        'date',
        'created_time',
    ]

    def __init__(self,
                 tag=APIHelper.SKIP,
                 commit=APIHelper.SKIP,
                 date=APIHelper.SKIP,
                 created_time=APIHelper.SKIP):
        """Constructor for the VersionVersion class"""

        # Initialize members of the class
        if tag is not APIHelper.SKIP:
            self.tag = tag 
        if commit is not APIHelper.SKIP:
            self.commit = commit 
        if date is not APIHelper.SKIP:
            self.date = date 
        if created_time is not APIHelper.SKIP:
            self.created_time = APIHelper.apply_datetime_converter(created_time, APIHelper.RFC3339DateTime) if created_time else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        tag = dictionary.get("tag") if dictionary.get("tag") else APIHelper.SKIP
        commit = dictionary.get("commit") if dictionary.get("commit") else APIHelper.SKIP
        date = dictionary.get("date") if dictionary.get("date") else APIHelper.SKIP
        created_time = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdTime")).datetime if dictionary.get("createdTime") else APIHelper.SKIP
        # Return an object of this model
        return cls(tag,
                   commit,
                   date,
                   created_time)
