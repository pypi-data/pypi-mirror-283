# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.interval import Interval


class Repeat(object):

    """Implementation of the 'Repeat' model.

    Control when to repeat scheduling

    Attributes:
        every (EveryEnum): Repeat every
        interval (Interval): Regular interval repetition
        never (List[object]): Never repeat scheduling

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "every": 'every',
        "interval": 'interval',
        "never": 'never'
    }

    _optionals = [
        'every',
        'interval',
        'never',
    ]

    def __init__(self,
                 every=APIHelper.SKIP,
                 interval=APIHelper.SKIP,
                 never=APIHelper.SKIP):
        """Constructor for the Repeat class"""

        # Initialize members of the class
        if every is not APIHelper.SKIP:
            self.every = every 
        if interval is not APIHelper.SKIP:
            self.interval = interval 
        if never is not APIHelper.SKIP:
            self.never = never 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        every = dictionary.get("every") if dictionary.get("every") else APIHelper.SKIP
        interval = Interval.from_dictionary(dictionary.get('interval')) if 'interval' in dictionary.keys() else APIHelper.SKIP
        never = dictionary.get("never") if dictionary.get("never") else APIHelper.SKIP
        # Return an object of this model
        return cls(every,
                   interval,
                   never)
