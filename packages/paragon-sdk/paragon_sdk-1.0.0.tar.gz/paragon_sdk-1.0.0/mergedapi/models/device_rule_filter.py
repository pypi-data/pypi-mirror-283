# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class DeviceRuleFilter(object):

    """Implementation of the 'DeviceRuleFilter' model.

    TODO: type model description here.

    Attributes:
        device_id (str): Device eligible for white list rules. Should be of
            pattern ^\*|[a-zA-Z0-9]([a-zA-Z0-9_-]*\.*)*$
        whitelist_rules (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "device_id": 'device-id',
        "whitelist_rules": 'whitelist-rules'
    }

    _optionals = [
        'whitelist_rules',
    ]

    def __init__(self,
                 device_id=None,
                 whitelist_rules=APIHelper.SKIP):
        """Constructor for the DeviceRuleFilter class"""

        # Initialize members of the class
        self.device_id = device_id 
        if whitelist_rules is not APIHelper.SKIP:
            self.whitelist_rules = whitelist_rules 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        device_id = dictionary.get("device-id") if dictionary.get("device-id") else None
        whitelist_rules = dictionary.get("whitelist-rules") if dictionary.get("whitelist-rules") else APIHelper.SKIP
        # Return an object of this model
        return cls(device_id,
                   whitelist_rules)
