# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from mergedapi.models.workflow_schema import WorkflowSchema
from mergedapi.models.workflows_schema import WorkflowsSchema
from mergedapi.exceptions.api_exception import APIException


class WorkflowController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(WorkflowController, self).__init__(config)

    def retrieve_healthbot_workflow_workflow(self,
                                             x_iam_token=None,
                                             working=None):
        """Does a GET request to /config/workflow/.

        Retrieve operation of resource: workflow

        Args:
            x_iam_token (str, optional): authentication header object
            working (bool, optional): true queries undeployed configuration

        Returns:
            List[str]: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflow/')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('working')
                         .value(working))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def delete_healthbot_workflow_workflow_by_id(self,
                                                 workflow_name,
                                                 x_iam_token=None):
        """Does a DELETE request to /config/workflow/{workflow_name}/.

        Delete operation of resource: workflow

        Args:
            workflow_name (str): ID of workflow-name
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflow/{workflow_name}/')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
        ).execute()

    def retrieve_healthbot_workflow_workflow_by_id(self,
                                                   workflow_name,
                                                   x_iam_token=None,
                                                   working=None):
        """Does a GET request to /config/workflow/{workflow_name}/.

        Retrieve operation of resource: workflow

        Args:
            workflow_name (str): ID of workflow-name
            x_iam_token (str, optional): authentication header object
            working (bool, optional): true queries undeployed configuration

        Returns:
            WorkflowSchema: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflow/{workflow_name}/')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('working')
                         .value(working))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def create_healthbot_workflow_workflow_by_id(self,
                                                 workflow_name,
                                                 workflow,
                                                 x_iam_token=None):
        """Does a POST request to /config/workflow/{workflow_name}/.

        Create operation of resource: workflow

        Args:
            workflow_name (str): ID of workflow-name
            workflow (WorkflowSchema): workflowbody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflow/{workflow_name}/')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .body_param(Parameter()
                        .value(workflow))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def update_healthbot_workflow_workflow_by_id(self,
                                                 workflow_name,
                                                 workflow,
                                                 x_iam_token=None):
        """Does a PUT request to /config/workflow/{workflow_name}/.

        Update operation of resource: workflow

        Args:
            workflow_name (str): ID of workflow-name
            workflow (WorkflowSchema): workflowbody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflow/{workflow_name}/')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .body_param(Parameter()
                        .value(workflow))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def delete_healthbot_workflows_workflow_by_id(self,
                                                  x_iam_token=None):
        """Does a DELETE request to /config/workflows/.

        Delete operation of resource: workflow

        Args:
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflows/')
            .http_method(HttpMethodEnum.DELETE)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
        ).execute()

    def retrieve_healthbot_workflows_workflow_by_id(self,
                                                    x_iam_token=None,
                                                    working=None):
        """Does a GET request to /config/workflows/.

        Retrieve operation of resource: workflow

        Args:
            x_iam_token (str, optional): authentication header object
            working (bool, optional): true queries undeployed configuration

        Returns:
            WorkflowsSchema: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflows/')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('working')
                         .value(working))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowsSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def create_healthbot_workflows_workflow_by_id(self,
                                                  workflows,
                                                  x_iam_token=None):
        """Does a POST request to /config/workflows/.

        Create/Update multiple workflows. The new content for the existing
        workflows updates the existing content and the new workflows are
        created.

        Args:
            workflows (WorkflowsSchema): workflowbody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflows/')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(workflows))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()

    def update_healthbot_workflows_workflow_by_id(self,
                                                  workflows,
                                                  x_iam_token=None):
        """Does a PUT request to /config/workflows/.

        Update operation of resource: workflow

        Args:
            workflows (WorkflowsSchema): workflowbody object
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/config/workflows/')
            .http_method(HttpMethodEnum.PUT)
            .body_param(Parameter()
                        .value(workflows))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_serializer(APIHelper.json_serialize)
        ).execute()
