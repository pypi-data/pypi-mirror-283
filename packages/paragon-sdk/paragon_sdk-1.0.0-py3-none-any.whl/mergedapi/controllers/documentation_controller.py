# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from mergedapi.exceptions.error_exception import ErrorException


class DocumentationController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(DocumentationController, self).__init__(config)

    def retrieve_defined_api(self):
        """Does a GET request to /.

        GET static api documentation

        Returns:
            void: Response from the API. Successful loaded HTML page

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/')
            .http_method(HttpMethodEnum.GET)
        ).execute()

    def retrieve_insights_api(self):
        """Does a GET request to /insights/.

        GET static api documentation

        Returns:
            void: Response from the API. Successful loaded HTML page

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/insights/')
            .http_method(HttpMethodEnum.GET)
        ).execute()
