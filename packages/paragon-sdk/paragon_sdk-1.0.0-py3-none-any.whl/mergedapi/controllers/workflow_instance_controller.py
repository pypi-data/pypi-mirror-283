# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mergedapi.api_helper import APIHelper
from mergedapi.configuration import Server
from mergedapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from mergedapi.http.http_method_enum import HttpMethodEnum
from mergedapi.models.workflow_instances_schema import WorkflowInstancesSchema
from mergedapi.models.workflow_instance_schema import WorkflowInstanceSchema
from mergedapi.exceptions.api_exception import APIException


class WorkflowInstanceController(BaseController):

    """A Controller to access Endpoints in the mergedapi API."""
    def __init__(self, config):
        super(WorkflowInstanceController, self).__init__(config)

    def delete_healthbot_workflow_instance_by_id(self,
                                                 workflow_name,
                                                 x_iam_token=None,
                                                 workflow_instance_name=None):
        """Does a DELETE request to /workflow-instance/{workflow_name}/.

        Delete operation of resource: workflow instance

        Args:
            workflow_name (str): Name of the workflow
            x_iam_token (str, optional): authentication header object
            workflow_instance_name (str, optional): ID of workflow instance

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instance/{workflow_name}/')
            .http_method(HttpMethodEnum.DELETE)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('workflow_instance_name')
                         .value(workflow_instance_name))
        ).execute()

    def retrieve_healthbot_workflow_instance_by_id(self,
                                                   workflow_name,
                                                   x_iam_token=None,
                                                   workflow_instance_name=None,
                                                   extensive=None):
        """Does a GET request to /workflow-instance/{workflow_name}/.

        Retrieve operation of resource: workflow instance

        Args:
            workflow_name (str): Name of the workflow
            x_iam_token (str, optional): authentication header object
            workflow_instance_name (str, optional): Name of the workflow
                instance
            extensive (bool, optional): Get extensive information including
                logs

        Returns:
            WorkflowInstancesSchema: Response from the API. Successful
                operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instance/{workflow_name}/')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('workflow_instance_name')
                         .value(workflow_instance_name))
            .query_param(Parameter()
                         .key('extensive')
                         .value(extensive))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowInstancesSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def update_healthbot_workflow_instance_by_id(self,
                                                 workflow_name,
                                                 operation,
                                                 x_iam_token=None,
                                                 workflow_instance_name=None):
        """Does a PUT request to /workflow-instance/{workflow_name}/.

        Update operation of resource: workflow instance

        Args:
            workflow_name (str): Name of the workflow
            operation (str): Name of the update operation
            x_iam_token (str, optional): authentication header object
            workflow_instance_name (str, optional): Name of the workflow
                instance

        Returns:
            WorkflowInstancesSchema: Response from the API. Successful
                operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instance/{workflow_name}/')
            .http_method(HttpMethodEnum.PUT)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .query_param(Parameter()
                         .key('operation')
                         .value(operation))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .query_param(Parameter()
                         .key('workflow_instance_name')
                         .value(workflow_instance_name))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowInstancesSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def create_healthbot_workflow_instance_by_id(self,
                                                 workflow_name,
                                                 x_iam_token=None,
                                                 workflow=None):
        """Does a POST request to /workflow-instance/{workflow_name}/.

        Create operation of resource: workflow instance

        Args:
            workflow_name (str): ID of workflow-name
            x_iam_token (str, optional): authentication header object
            workflow (WorkflowInstanceSchema, optional): workflowbody object

        Returns:
            WorkflowInstanceSchema: Response from the API. Successful
                operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instance/{workflow_name}/')
            .http_method(HttpMethodEnum.POST)
            .template_param(Parameter()
                            .key('workflow_name')
                            .value(workflow_name)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .body_param(Parameter()
                        .value(workflow))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowInstanceSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def delete_healthbot_workflow_instances(self,
                                            x_iam_token=None):
        """Does a DELETE request to /workflow-instances/.

        Delete operation of resource: workflow instances

        Args:
            x_iam_token (str, optional): authentication header object

        Returns:
            void: Response from the API. Successful operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instances/')
            .http_method(HttpMethodEnum.DELETE)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
        ).execute()

    def retrieve_healthbot_workflow_instances(self,
                                              x_iam_token=None):
        """Does a GET request to /workflow-instances/.

        Retrieve operation of all workflow instances

        Args:
            x_iam_token (str, optional): authentication header object

        Returns:
            WorkflowInstancesSchema: Response from the API. Successful
                operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instances/')
            .http_method(HttpMethodEnum.GET)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowInstancesSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()

    def update_healthbot_workflow_instances(self,
                                            operation,
                                            x_iam_token=None):
        """Does a PUT request to /workflow-instances/.

        Update operation of all workflow instances

        Args:
            operation (str): Name of the update operation
            x_iam_token (str, optional): authentication header object

        Returns:
            WorkflowInstancesSchema: Response from the API. Successful
                operation

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT1)
            .path('/workflow-instances/')
            .http_method(HttpMethodEnum.PUT)
            .query_param(Parameter()
                         .key('operation')
                         .value(operation))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('x-iam-token')
                          .value(x_iam_token))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(WorkflowInstancesSchema.from_dictionary)
            .local_error('400', 'Internal Error', APIException)
        ).execute()
