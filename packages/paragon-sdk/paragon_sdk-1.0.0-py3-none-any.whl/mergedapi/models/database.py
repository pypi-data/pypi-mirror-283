# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.measurement import Measurement


class Database(object):

    """Implementation of the 'Database' model.

    TODO: type model description here.

    Attributes:
        database_name (str): Database for which the roll-up summarization
            profile will be applied.
        measurement (List[Measurement]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "database_name": 'database-name',
        "measurement": 'measurement'
    }

    _optionals = [
        'measurement',
    ]

    def __init__(self,
                 database_name=None,
                 measurement=APIHelper.SKIP):
        """Constructor for the Database class"""

        # Initialize members of the class
        self.database_name = database_name 
        if measurement is not APIHelper.SKIP:
            self.measurement = measurement 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        database_name = dictionary.get("database-name") if dictionary.get("database-name") else None
        measurement = None
        if dictionary.get('measurement') is not None:
            measurement = [Measurement.from_dictionary(x) for x in dictionary.get('measurement')]
        else:
            measurement = APIHelper.SKIP
        # Return an object of this model
        return cls(database_name,
                   measurement)
