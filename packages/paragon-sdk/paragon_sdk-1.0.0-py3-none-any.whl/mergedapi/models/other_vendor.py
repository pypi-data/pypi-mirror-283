# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class OtherVendor(object):

    """Implementation of the 'OtherVendor' model.

    Other vendor device

    Attributes:
        operating_system (str): Vendor operating system, Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*
        platform (str): Platform name of the device, Example: MX240
        product (str): Product category of the device, Example: MX
        release (str): Release string of the device, Example: 19.2R1
        vendor_name (str): Vendor-name, Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "vendor_name": 'vendor-name',
        "operating_system": 'operating-system',
        "platform": 'platform',
        "product": 'product',
        "release": 'release'
    }

    _optionals = [
        'operating_system',
        'platform',
        'product',
        'release',
    ]

    def __init__(self,
                 vendor_name=None,
                 operating_system=APIHelper.SKIP,
                 platform=APIHelper.SKIP,
                 product=APIHelper.SKIP,
                 release=APIHelper.SKIP):
        """Constructor for the OtherVendor class"""

        # Initialize members of the class
        if operating_system is not APIHelper.SKIP:
            self.operating_system = operating_system 
        if platform is not APIHelper.SKIP:
            self.platform = platform 
        if product is not APIHelper.SKIP:
            self.product = product 
        if release is not APIHelper.SKIP:
            self.release = release 
        self.vendor_name = vendor_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        vendor_name = dictionary.get("vendor-name") if dictionary.get("vendor-name") else None
        operating_system = dictionary.get("operating-system") if dictionary.get("operating-system") else APIHelper.SKIP
        platform = dictionary.get("platform") if dictionary.get("platform") else APIHelper.SKIP
        product = dictionary.get("product") if dictionary.get("product") else APIHelper.SKIP
        release = dictionary.get("release") if dictionary.get("release") else APIHelper.SKIP
        # Return an object of this model
        return cls(vendor_name,
                   operating_system,
                   platform,
                   product,
                   release)
