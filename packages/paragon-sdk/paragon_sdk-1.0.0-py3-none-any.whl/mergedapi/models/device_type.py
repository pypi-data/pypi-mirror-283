# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class DeviceType(object):

    """Implementation of the 'deviceType' model.

    TODO: type model description here.

    Attributes:
        manufacturer (str): TODO: type description here.
        model (str): TODO: type description here.
        version (str): TODO: type description here.
        os_name (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "manufacturer": 'manufacturer',
        "model": 'model',
        "version": 'version',
        "os_name": 'osName'
    }

    _optionals = [
        'manufacturer',
        'model',
        'version',
        'os_name',
    ]

    def __init__(self,
                 manufacturer=APIHelper.SKIP,
                 model=APIHelper.SKIP,
                 version=APIHelper.SKIP,
                 os_name=APIHelper.SKIP):
        """Constructor for the DeviceType class"""

        # Initialize members of the class
        if manufacturer is not APIHelper.SKIP:
            self.manufacturer = manufacturer 
        if model is not APIHelper.SKIP:
            self.model = model 
        if version is not APIHelper.SKIP:
            self.version = version 
        if os_name is not APIHelper.SKIP:
            self.os_name = os_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        manufacturer = dictionary.get("manufacturer") if dictionary.get("manufacturer") else APIHelper.SKIP
        model = dictionary.get("model") if dictionary.get("model") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        os_name = dictionary.get("osName") if dictionary.get("osName") else APIHelper.SKIP
        # Return an object of this model
        return cls(manufacturer,
                   model,
                   version,
                   os_name)
