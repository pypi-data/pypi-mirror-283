# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Arg(object):

    """Implementation of the 'Arg' model.

    TODO: type model description here.

    Attributes:
        arg_name (str): name of argument
        arg_value (str): value of argument

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "arg_name": 'arg-name',
        "arg_value": 'arg-value'
    }

    _optionals = [
        'arg_value',
    ]

    def __init__(self,
                 arg_name=None,
                 arg_value=APIHelper.SKIP):
        """Constructor for the Arg class"""

        # Initialize members of the class
        self.arg_name = arg_name 
        if arg_value is not APIHelper.SKIP:
            self.arg_value = arg_value 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        arg_name = dictionary.get("arg-name") if dictionary.get("arg-name") else None
        arg_value = dictionary.get("arg-value") if dictionary.get("arg-value") else APIHelper.SKIP
        # Return an object of this model
        return cls(arg_name,
                   arg_value)
