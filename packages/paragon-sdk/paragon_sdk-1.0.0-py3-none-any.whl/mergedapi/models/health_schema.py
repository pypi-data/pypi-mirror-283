# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class HealthSchema(object):

    """Implementation of the 'healthSchema' model.

    TODO: type model description here.

    Attributes:
        device_health (Dict[str, GroupHealthSchemaEnum]): TODO: type
            description here.
        network_health (Dict[str, GroupHealthSchemaEnum]): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "device_health": 'device-health',
        "network_health": 'network-health'
    }

    _optionals = [
        'device_health',
        'network_health',
    ]

    def __init__(self,
                 device_health=APIHelper.SKIP,
                 network_health=APIHelper.SKIP):
        """Constructor for the HealthSchema class"""

        # Initialize members of the class
        if device_health is not APIHelper.SKIP:
            self.device_health = device_health 
        if network_health is not APIHelper.SKIP:
            self.network_health = network_health 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        device_health = dictionary.get("device-health") if dictionary.get("device-health") else APIHelper.SKIP
        network_health = dictionary.get("network-health") if dictionary.get("network-health") else APIHelper.SKIP
        # Return an object of this model
        return cls(device_health,
                   network_health)
