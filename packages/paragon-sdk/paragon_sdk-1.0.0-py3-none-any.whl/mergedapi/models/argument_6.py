# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Argument6(object):

    """Implementation of the 'Argument6' model.

    TODO: type model description here.

    Attributes:
        argument_name (str): Name of the argument. Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*
        mandatory (List[str]): Flag to indicate a mandatory attribute

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "argument_name": 'argument-name',
        "mandatory": 'mandatory'
    }

    _optionals = [
        'mandatory',
    ]

    _nullables = [
        'mandatory',
    ]

    def __init__(self,
                 argument_name=None,
                 mandatory=APIHelper.SKIP):
        """Constructor for the Argument6 class"""

        # Initialize members of the class
        self.argument_name = argument_name 
        if mandatory is not APIHelper.SKIP:
            self.mandatory = mandatory 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        argument_name = dictionary.get("argument-name") if dictionary.get("argument-name") else None
        mandatory = dictionary.get("mandatory") if "mandatory" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(argument_name,
                   mandatory)
