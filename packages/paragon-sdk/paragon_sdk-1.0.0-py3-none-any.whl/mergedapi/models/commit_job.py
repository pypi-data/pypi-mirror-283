# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CommitJob(object):

    """Implementation of the 'commit-job' model.

    TODO: type model description here.

    Attributes:
        detail (str): TODO: type description here.
        status (int): TODO: type description here.
        url (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "detail": 'detail',
        "status": 'status',
        "url": 'url'
    }

    def __init__(self,
                 detail=None,
                 status=None,
                 url=None):
        """Constructor for the CommitJob class"""

        # Initialize members of the class
        self.detail = detail 
        self.status = status 
        self.url = url 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        detail = dictionary.get("detail") if dictionary.get("detail") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        url = dictionary.get("url") if dictionary.get("url") else None
        # Return an object of this model
        return cls(detail,
                   status,
                   url)
