# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class RootCauseAnalysis(object):

    """Implementation of the 'RootCauseAnalysis' model.

    Setting for root cause analysis

    Attributes:
        no_rca (List[object]): Disable Root Cause analysis
        dynamic_resources (List[str]): TODO: type description here.
        exclude_resources (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "no_rca": 'no-rca',
        "dynamic_resources": 'dynamic-resources',
        "exclude_resources": 'exclude-resources'
    }

    _optionals = [
        'no_rca',
        'dynamic_resources',
        'exclude_resources',
    ]

    def __init__(self,
                 no_rca=APIHelper.SKIP,
                 dynamic_resources=APIHelper.SKIP,
                 exclude_resources=APIHelper.SKIP):
        """Constructor for the RootCauseAnalysis class"""

        # Initialize members of the class
        if no_rca is not APIHelper.SKIP:
            self.no_rca = no_rca 
        if dynamic_resources is not APIHelper.SKIP:
            self.dynamic_resources = dynamic_resources 
        if exclude_resources is not APIHelper.SKIP:
            self.exclude_resources = exclude_resources 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        no_rca = dictionary.get("no-rca") if dictionary.get("no-rca") else APIHelper.SKIP
        dynamic_resources = dictionary.get("dynamic-resources") if dictionary.get("dynamic-resources") else APIHelper.SKIP
        exclude_resources = dictionary.get("exclude-resources") if dictionary.get("exclude-resources") else APIHelper.SKIP
        # Return an object of this model
        return cls(no_rca,
                   dynamic_resources,
                   exclude_resources)
