# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class TrustApiV11alphaChecklistChecklistsRequest2(object):

    """Implementation of the 'Trust Api V11alpha Checklist Checklists Request2' model.

    TODO: type model description here.

    Attributes:
        list_id (str): The ID of the Checklist to be updated.
        scan_id (str): The ID of the compliance Scan containing the results to
            be imported.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "list_id": 'listId',
        "scan_id": 'scanId'
    }

    _optionals = [
        'list_id',
        'scan_id',
    ]

    def __init__(self,
                 list_id=APIHelper.SKIP,
                 scan_id=APIHelper.SKIP):
        """Constructor for the TrustApiV11alphaChecklistChecklistsRequest2 class"""

        # Initialize members of the class
        if list_id is not APIHelper.SKIP:
            self.list_id = list_id 
        if scan_id is not APIHelper.SKIP:
            self.scan_id = scan_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        list_id = dictionary.get("listId") if dictionary.get("listId") else APIHelper.SKIP
        scan_id = dictionary.get("scanId") if dictionary.get("scanId") else APIHelper.SKIP
        # Return an object of this model
        return cls(list_id,
                   scan_id)
