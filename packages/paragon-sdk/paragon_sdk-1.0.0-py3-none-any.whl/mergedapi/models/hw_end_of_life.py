# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.integrity_sku import IntegritySKU


class HwEndOfLife(object):

    """Implementation of the 'HwEndOfLife' model.

    TODO: type model description here.

    Attributes:
        is_not_end_of_life (bool): Holds false if any of the SKUs used in the
            device have reached their end-of-life date.
        eol_skus (List[IntegritySKU]): If is_not_end_of_life is false, holds
            details of any SKUs used in the device that have reached their
            end-of-life date.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "is_not_end_of_life": 'isNotEndOfLife',
        "eol_skus": 'eolSkus'
    }

    _optionals = [
        'is_not_end_of_life',
        'eol_skus',
    ]

    def __init__(self,
                 is_not_end_of_life=APIHelper.SKIP,
                 eol_skus=APIHelper.SKIP):
        """Constructor for the HwEndOfLife class"""

        # Initialize members of the class
        if is_not_end_of_life is not APIHelper.SKIP:
            self.is_not_end_of_life = is_not_end_of_life 
        if eol_skus is not APIHelper.SKIP:
            self.eol_skus = eol_skus 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        is_not_end_of_life = dictionary.get("isNotEndOfLife") if "isNotEndOfLife" in dictionary.keys() else APIHelper.SKIP
        eol_skus = None
        if dictionary.get('eolSkus') is not None:
            eol_skus = [IntegritySKU.from_dictionary(x) for x in dictionary.get('eolSkus')]
        else:
            eol_skus = APIHelper.SKIP
        # Return an object of this model
        return cls(is_not_end_of_life,
                   eol_skus)
