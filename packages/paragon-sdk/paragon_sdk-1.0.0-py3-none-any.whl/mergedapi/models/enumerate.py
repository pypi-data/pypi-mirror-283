# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Enumerate(object):

    """Implementation of the 'Enumerate' model.

    TODO: type model description here.

    Attributes:
        enum (str): String value of the field for the enum instance
        mas (int): Integer value for the enum instance

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "enum": 'enum',
        "mas": 'as'
    }

    _optionals = [
        'enum',
        'mas',
    ]

    def __init__(self,
                 enum=APIHelper.SKIP,
                 mas=APIHelper.SKIP):
        """Constructor for the Enumerate class"""

        # Initialize members of the class
        if enum is not APIHelper.SKIP:
            self.enum = enum 
        if mas is not APIHelper.SKIP:
            self.mas = mas 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        enum = dictionary.get("enum") if dictionary.get("enum") else APIHelper.SKIP
        mas = dictionary.get("as") if dictionary.get("as") else APIHelper.SKIP
        # Return an object of this model
        return cls(enum,
                   mas)
