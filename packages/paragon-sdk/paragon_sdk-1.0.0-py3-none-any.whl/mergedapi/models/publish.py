# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Publish(object):

    """Implementation of the 'Publish' model.

    TODO: type model description here.

    Attributes:
        destination (List[str]): TODO: type description here.
        field (List[str]): TODO: type description here.
        sensor (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "destination": 'destination',
        "field": 'field',
        "sensor": 'sensor'
    }

    _optionals = [
        'field',
        'sensor',
    ]

    def __init__(self,
                 destination=None,
                 field=APIHelper.SKIP,
                 sensor=APIHelper.SKIP):
        """Constructor for the Publish class"""

        # Initialize members of the class
        self.destination = destination 
        if field is not APIHelper.SKIP:
            self.field = field 
        if sensor is not APIHelper.SKIP:
            self.sensor = sensor 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        destination = dictionary.get("destination") if dictionary.get("destination") else None
        field = dictionary.get("field") if dictionary.get("field") else APIHelper.SKIP
        sensor = dictionary.get("sensor") if dictionary.get("sensor") else APIHelper.SKIP
        # Return an object of this model
        return cls(destination,
                   field,
                   sensor)
