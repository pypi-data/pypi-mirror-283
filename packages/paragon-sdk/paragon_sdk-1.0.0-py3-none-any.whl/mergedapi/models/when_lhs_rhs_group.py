# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class WhenLhsRhsGroup(object):

    """Implementation of the 'when-lhs-rhs-group' model.

    TODO: type model description here.

    Attributes:
        left_operand (str): Left operand
        right_operand (str): right operand
        time_range (str): How much back in time should we look for data

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "left_operand": 'left-operand',
        "right_operand": 'right-operand',
        "time_range": 'time-range'
    }

    _optionals = [
        'left_operand',
        'right_operand',
        'time_range',
    ]

    def __init__(self,
                 left_operand=APIHelper.SKIP,
                 right_operand=APIHelper.SKIP,
                 time_range=APIHelper.SKIP):
        """Constructor for the WhenLhsRhsGroup class"""

        # Initialize members of the class
        if left_operand is not APIHelper.SKIP:
            self.left_operand = left_operand 
        if right_operand is not APIHelper.SKIP:
            self.right_operand = right_operand 
        if time_range is not APIHelper.SKIP:
            self.time_range = time_range 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        left_operand = dictionary.get("left-operand") if dictionary.get("left-operand") else APIHelper.SKIP
        right_operand = dictionary.get("right-operand") if dictionary.get("right-operand") else APIHelper.SKIP
        time_range = dictionary.get("time-range") if dictionary.get("time-range") else APIHelper.SKIP
        # Return an object of this model
        return cls(left_operand,
                   right_operand,
                   time_range)
