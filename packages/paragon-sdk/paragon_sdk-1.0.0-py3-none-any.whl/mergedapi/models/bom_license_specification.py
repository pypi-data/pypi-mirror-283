# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class BomLicenseSpecification(object):

    """Implementation of the 'bomLicenseSpecification' model.

    Summarises the key properties of a Component License.
    Note that if neither expression nor license_ids are defined, the component
    does not define a license.

    Attributes:
        expression (str): Holds the SPDX expression used to define the
            component licence, or is empty if an expression was not used.
        license_ids (List[str]): When expression is not empty, holds a list of
            the SPDX licence ids that are referenced by the expression. When
            expression is empty, holds a list of SPDX licence ids specified
            for the component.
        compliance (BomComplianceEnum): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "expression": 'expression',
        "license_ids": 'licenseIds',
        "compliance": 'compliance'
    }

    _optionals = [
        'expression',
        'license_ids',
        'compliance',
    ]

    def __init__(self,
                 expression=APIHelper.SKIP,
                 license_ids=APIHelper.SKIP,
                 compliance=APIHelper.SKIP):
        """Constructor for the BomLicenseSpecification class"""

        # Initialize members of the class
        if expression is not APIHelper.SKIP:
            self.expression = expression 
        if license_ids is not APIHelper.SKIP:
            self.license_ids = license_ids 
        if compliance is not APIHelper.SKIP:
            self.compliance = compliance 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        expression = dictionary.get("expression") if dictionary.get("expression") else APIHelper.SKIP
        license_ids = dictionary.get("licenseIds") if dictionary.get("licenseIds") else APIHelper.SKIP
        compliance = dictionary.get("compliance") if dictionary.get("compliance") else APIHelper.SKIP
        # Return an object of this model
        return cls(expression,
                   license_ids,
                   compliance)
