# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.ca_profile_schema import CaProfileSchema
from mergedapi.models.local_certificate_schema import LocalCertificateSchema
from mergedapi.models.ssh_key_profile_schema import SshKeyProfileSchema


class Security1(object):

    """Implementation of the 'Security1' model.

    Security config

    Attributes:
        ca_profile (List[CaProfileSchema]): TODO: type description here.
        local_certificate (List[LocalCertificateSchema]): TODO: type
            description here.
        ssh_key_profile (List[SshKeyProfileSchema]): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ca_profile": 'ca-profile',
        "local_certificate": 'local-certificate',
        "ssh_key_profile": 'ssh-key-profile'
    }

    _optionals = [
        'ca_profile',
        'local_certificate',
        'ssh_key_profile',
    ]

    def __init__(self,
                 ca_profile=APIHelper.SKIP,
                 local_certificate=APIHelper.SKIP,
                 ssh_key_profile=APIHelper.SKIP):
        """Constructor for the Security1 class"""

        # Initialize members of the class
        if ca_profile is not APIHelper.SKIP:
            self.ca_profile = ca_profile 
        if local_certificate is not APIHelper.SKIP:
            self.local_certificate = local_certificate 
        if ssh_key_profile is not APIHelper.SKIP:
            self.ssh_key_profile = ssh_key_profile 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ca_profile = None
        if dictionary.get('ca-profile') is not None:
            ca_profile = [CaProfileSchema.from_dictionary(x) for x in dictionary.get('ca-profile')]
        else:
            ca_profile = APIHelper.SKIP
        local_certificate = None
        if dictionary.get('local-certificate') is not None:
            local_certificate = [LocalCertificateSchema.from_dictionary(x) for x in dictionary.get('local-certificate')]
        else:
            local_certificate = APIHelper.SKIP
        ssh_key_profile = None
        if dictionary.get('ssh-key-profile') is not None:
            ssh_key_profile = [SshKeyProfileSchema.from_dictionary(x) for x in dictionary.get('ssh-key-profile')]
        else:
            ssh_key_profile = APIHelper.SKIP
        # Return an object of this model
        return cls(ca_profile,
                   local_certificate,
                   ssh_key_profile)
