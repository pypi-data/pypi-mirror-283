# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.rollup_summarization_schema import RollupSummarizationSchema


class RollupSummarizationsSchema(object):

    """Implementation of the 'rollup-summarizations_schema' model.

    Data rollup summarization

    Attributes:
        field_profile (List[RollupSummarizationSchema]): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "field_profile": 'field-profile'
    }

    _optionals = [
        'field_profile',
    ]

    def __init__(self,
                 field_profile=APIHelper.SKIP):
        """Constructor for the RollupSummarizationsSchema class"""

        # Initialize members of the class
        if field_profile is not APIHelper.SKIP:
            self.field_profile = field_profile 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        field_profile = None
        if dictionary.get('field-profile') is not None:
            field_profile = [RollupSummarizationSchema.from_dictionary(x) for x in dictionary.get('field-profile')]
        else:
            field_profile = APIHelper.SKIP
        # Return an object of this model
        return cls(field_profile)
