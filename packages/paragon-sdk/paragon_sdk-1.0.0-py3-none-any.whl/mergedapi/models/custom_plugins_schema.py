# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.models.custom_plugin_schema import CustomPluginSchema


class CustomPluginsSchema(object):

    """Implementation of the 'custom-plugins_schema' model.

    TODO: type model description here.

    Attributes:
        custom_plugin (List[CustomPluginSchema]): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "custom_plugin": 'custom-plugin'
    }

    def __init__(self,
                 custom_plugin=None):
        """Constructor for the CustomPluginsSchema class"""

        # Initialize members of the class
        self.custom_plugin = custom_plugin 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        custom_plugin = None
        if dictionary.get('custom-plugin') is not None:
            custom_plugin = [CustomPluginSchema.from_dictionary(x) for x in dictionary.get('custom-plugin')]
        # Return an object of this model
        return cls(custom_plugin)
