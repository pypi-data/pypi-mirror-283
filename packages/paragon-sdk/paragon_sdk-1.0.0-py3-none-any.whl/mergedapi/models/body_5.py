# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Body5(object):

    """Implementation of the 'body5' model.

    Defines a request to create a new template.

    Attributes:
        name (str): Name and version of the template - when combined, these
            must be unique.
        version (str): TODO: type description here.
        description (str): Optional description of the template.
        sources (List[str]): IDs of the XCCDF documents containing the rules
            to be incorporated in the template.
        labels (Dict[str, str]): Labels applied to the template.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "version": 'version',
        "description": 'description',
        "sources": 'sources',
        "labels": 'labels'
    }

    _optionals = [
        'name',
        'version',
        'description',
        'sources',
        'labels',
    ]

    def __init__(self,
                 name=APIHelper.SKIP,
                 version=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 sources=APIHelper.SKIP,
                 labels=APIHelper.SKIP):
        """Constructor for the Body5 class"""

        # Initialize members of the class
        if name is not APIHelper.SKIP:
            self.name = name 
        if version is not APIHelper.SKIP:
            self.version = version 
        if description is not APIHelper.SKIP:
            self.description = description 
        if sources is not APIHelper.SKIP:
            self.sources = sources 
        if labels is not APIHelper.SKIP:
            self.labels = labels 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        sources = dictionary.get("sources") if dictionary.get("sources") else APIHelper.SKIP
        labels = dictionary.get("labels") if dictionary.get("labels") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   version,
                   description,
                   sources,
                   labels)
