# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Config(object):

    """Implementation of the 'Config' model.

    TODO: type model description here.

    Attributes:
        yaml_config (str): YAML representation of the configuration. TODO:
            provide a separate rpc to deliver a yaml schema definition for the
            configuration.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "yaml_config": 'yamlConfig'
    }

    _optionals = [
        'yaml_config',
    ]

    def __init__(self,
                 yaml_config=APIHelper.SKIP):
        """Constructor for the Config class"""

        # Initialize members of the class
        if yaml_config is not APIHelper.SKIP:
            self.yaml_config = yaml_config 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        yaml_config = dictionary.get("yamlConfig") if dictionary.get("yamlConfig") else APIHelper.SKIP
        # Return an object of this model
        return cls(yaml_config)
