# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Summary(object):

    """Implementation of the 'Summary' model.

    TODO: type model description here.

    Attributes:
        id (str): System-generated unique identifier for the BOM.
        serial_number (str): TODO: type description here.
        version (int): TODO: type description here.
        name (str): TODO: type description here.
        component_version (str): TODO: type description here.
        mtype (str): TODO: type description here.
        description (str): TODO: type description here.
        timestamp (str): TODO: type description here.
        created_at (datetime): The time at which the document was stored in
            the repository.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "serial_number": 'serialNumber',
        "version": 'version',
        "name": 'name',
        "component_version": 'componentVersion',
        "mtype": 'type',
        "description": 'description',
        "timestamp": 'timestamp',
        "created_at": 'createdAt'
    }

    _optionals = [
        'id',
        'serial_number',
        'version',
        'name',
        'component_version',
        'mtype',
        'description',
        'timestamp',
        'created_at',
    ]

    def __init__(self,
                 id=APIHelper.SKIP,
                 serial_number=APIHelper.SKIP,
                 version=APIHelper.SKIP,
                 name=APIHelper.SKIP,
                 component_version=APIHelper.SKIP,
                 mtype=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 timestamp=APIHelper.SKIP,
                 created_at=APIHelper.SKIP):
        """Constructor for the Summary class"""

        # Initialize members of the class
        if id is not APIHelper.SKIP:
            self.id = id 
        if serial_number is not APIHelper.SKIP:
            self.serial_number = serial_number 
        if version is not APIHelper.SKIP:
            self.version = version 
        if name is not APIHelper.SKIP:
            self.name = name 
        if component_version is not APIHelper.SKIP:
            self.component_version = component_version 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if description is not APIHelper.SKIP:
            self.description = description 
        if timestamp is not APIHelper.SKIP:
            self.timestamp = timestamp 
        if created_at is not APIHelper.SKIP:
            self.created_at = APIHelper.apply_datetime_converter(created_at, APIHelper.RFC3339DateTime) if created_at else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        serial_number = dictionary.get("serialNumber") if dictionary.get("serialNumber") else APIHelper.SKIP
        version = dictionary.get("version") if dictionary.get("version") else APIHelper.SKIP
        name = dictionary.get("name") if dictionary.get("name") else APIHelper.SKIP
        component_version = dictionary.get("componentVersion") if dictionary.get("componentVersion") else APIHelper.SKIP
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        timestamp = dictionary.get("timestamp") if dictionary.get("timestamp") else APIHelper.SKIP
        created_at = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdAt")).datetime if dictionary.get("createdAt") else APIHelper.SKIP
        # Return an object of this model
        return cls(id,
                   serial_number,
                   version,
                   name,
                   component_version,
                   mtype,
                   description,
                   timestamp,
                   created_at)
