# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Ifa1(object):

    """Implementation of the 'Ifa1' model.

    Inband Flow Analyzer specific parameters in Flow ingest

    Attributes:
        ports (List[int]): TODO: type description here.
        deploy_nodes (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ports": 'ports',
        "deploy_nodes": 'deploy-nodes'
    }

    _optionals = [
        'ports',
        'deploy_nodes',
    ]

    def __init__(self,
                 ports=APIHelper.SKIP,
                 deploy_nodes=APIHelper.SKIP):
        """Constructor for the Ifa1 class"""

        # Initialize members of the class
        if ports is not APIHelper.SKIP:
            self.ports = ports 
        if deploy_nodes is not APIHelper.SKIP:
            self.deploy_nodes = deploy_nodes 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ports = dictionary.get("ports") if dictionary.get("ports") else APIHelper.SKIP
        deploy_nodes = dictionary.get("deploy-nodes") if dictionary.get("deploy-nodes") else APIHelper.SKIP
        # Return an object of this model
        return cls(ports,
                   deploy_nodes)
