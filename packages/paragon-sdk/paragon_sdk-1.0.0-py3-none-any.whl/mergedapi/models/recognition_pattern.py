# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class RecognitionPattern(object):

    """Implementation of the 'RecognitionPattern' model.

    TODO: type model description here.

    Attributes:
        exclude_fields (List[str]): TODO: type description here.
        include_fields (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "exclude_fields": 'exclude-fields',
        "include_fields": 'include-fields'
    }

    _optionals = [
        'exclude_fields',
        'include_fields',
    ]

    def __init__(self,
                 exclude_fields=APIHelper.SKIP,
                 include_fields=APIHelper.SKIP):
        """Constructor for the RecognitionPattern class"""

        # Initialize members of the class
        if exclude_fields is not APIHelper.SKIP:
            self.exclude_fields = exclude_fields 
        if include_fields is not APIHelper.SKIP:
            self.include_fields = include_fields 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        exclude_fields = dictionary.get("exclude-fields") if dictionary.get("exclude-fields") else APIHelper.SKIP
        include_fields = dictionary.get("include-fields") if dictionary.get("include-fields") else APIHelper.SKIP
        # Return an object of this model
        return cls(exclude_fields,
                   include_fields)
