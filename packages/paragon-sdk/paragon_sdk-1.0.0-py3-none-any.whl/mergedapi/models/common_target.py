# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class CommonTarget(object):

    """Implementation of the 'commonTarget' model.

    Target defines an entity that is the subject of a network operation (for
    example a score calculation or a snapshot).

    Attributes:
        mclass (str): Defines the class of entity, for example "device".
        id (str): Uniquely identifies the entity within its class.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mclass": 'class',
        "id": 'id'
    }

    _optionals = [
        'mclass',
        'id',
    ]

    def __init__(self,
                 mclass=APIHelper.SKIP,
                 id=APIHelper.SKIP):
        """Constructor for the CommonTarget class"""

        # Initialize members of the class
        if mclass is not APIHelper.SKIP:
            self.mclass = mclass 
        if id is not APIHelper.SKIP:
            self.id = id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mclass = dictionary.get("class") if dictionary.get("class") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        # Return an object of this model
        return cls(mclass,
                   id)
