# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.target_2 import Target2


class Body21(object):

    """Implementation of the 'body21' model.

    TODO: type model description here.

    Attributes:
        target (Target2): TODO: type description here.
        description (str): User-defined description of the snapshot.
        labels (Dict[str, str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "target": 'target',
        "description": 'description',
        "labels": 'labels'
    }

    _optionals = [
        'target',
        'description',
        'labels',
    ]

    def __init__(self,
                 target=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 labels=APIHelper.SKIP):
        """Constructor for the Body21 class"""

        # Initialize members of the class
        if target is not APIHelper.SKIP:
            self.target = target 
        if description is not APIHelper.SKIP:
            self.description = description 
        if labels is not APIHelper.SKIP:
            self.labels = labels 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        target = Target2.from_dictionary(dictionary.get('target')) if 'target' in dictionary.keys() else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        labels = dictionary.get("labels") if dictionary.get("labels") else APIHelper.SKIP
        # Return an object of this model
        return cls(target,
                   description,
                   labels)
