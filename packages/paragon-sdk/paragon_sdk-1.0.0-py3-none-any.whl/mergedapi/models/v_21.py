# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.source_id_1 import SourceId1


class V21(object):

    """Implementation of the 'V21' model.

    SNMP version 2 configuration

    Attributes:
        community (str): Community name. 'public' will be used if not
            configured
        source_id (SourceId1): Configuration which is required to identify the
            sender of the SNMP trap/inform message

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "community": 'community',
        "source_id": 'source-id'
    }

    _optionals = [
        'community',
        'source_id',
    ]

    def __init__(self,
                 community=APIHelper.SKIP,
                 source_id=APIHelper.SKIP):
        """Constructor for the V21 class"""

        # Initialize members of the class
        if community is not APIHelper.SKIP:
            self.community = community 
        if source_id is not APIHelper.SKIP:
            self.source_id = source_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        community = dictionary.get("community") if dictionary.get("community") else APIHelper.SKIP
        source_id = SourceId1.from_dictionary(dictionary.get('source-id')) if 'source-id' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(community,
                   source_id)
