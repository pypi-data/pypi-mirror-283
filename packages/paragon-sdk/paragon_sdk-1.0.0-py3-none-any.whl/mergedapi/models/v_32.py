# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.source_id_11 import SourceId11
from mergedapi.models.usm_1 import Usm1


class V32(object):

    """Implementation of the 'V32' model.

    SNMP version 3 configuration

    Attributes:
        source_id (SourceId11): Configuration which is required to identify
            the sender/receiver of the SNMP message
        usm (Usm1): SNMP User Security Model configuration

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "source_id": 'source-id',
        "usm": 'usm'
    }

    _optionals = [
        'source_id',
        'usm',
    ]

    def __init__(self,
                 source_id=APIHelper.SKIP,
                 usm=APIHelper.SKIP):
        """Constructor for the V32 class"""

        # Initialize members of the class
        if source_id is not APIHelper.SKIP:
            self.source_id = source_id 
        if usm is not APIHelper.SKIP:
            self.usm = usm 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        source_id = SourceId11.from_dictionary(dictionary.get('source-id')) if 'source-id' in dictionary.keys() else APIHelper.SKIP
        usm = Usm1.from_dictionary(dictionary.get('usm')) if 'usm' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(source_id,
                   usm)
