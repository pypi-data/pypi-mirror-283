# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.filter import Filter


class Emails(object):

    """Implementation of the 'Emails' model.

    Define email notification

    Attributes:
        ids (List[str]): TODO: type description here.
        filter (Filter): Filter notification

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ids": 'ids',
        "filter": 'filter'
    }

    _optionals = [
        'filter',
    ]

    def __init__(self,
                 ids=None,
                 filter=APIHelper.SKIP):
        """Constructor for the Emails class"""

        # Initialize members of the class
        self.ids = ids 
        if filter is not APIHelper.SKIP:
            self.filter = filter 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ids = dictionary.get("ids") if dictionary.get("ids") else None
        filter = Filter.from_dictionary(dictionary.get('filter')) if 'filter' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(ids,
                   filter)
