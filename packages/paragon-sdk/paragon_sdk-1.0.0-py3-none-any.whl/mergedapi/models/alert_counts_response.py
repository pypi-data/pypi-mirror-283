# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class AlertCountsResponse(object):

    """Implementation of the 'alertCountsResponse' model.

    Defines the alert counts for the different severity levels.

    Attributes:
        information_count (str): TODO: type description here.
        warning_count (str): TODO: type description here.
        minor_count (str): TODO: type description here.
        major_count (str): TODO: type description here.
        critical_count (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "information_count": 'informationCount',
        "warning_count": 'warningCount',
        "minor_count": 'minorCount',
        "major_count": 'majorCount',
        "critical_count": 'criticalCount'
    }

    _optionals = [
        'information_count',
        'warning_count',
        'minor_count',
        'major_count',
        'critical_count',
    ]

    def __init__(self,
                 information_count=APIHelper.SKIP,
                 warning_count=APIHelper.SKIP,
                 minor_count=APIHelper.SKIP,
                 major_count=APIHelper.SKIP,
                 critical_count=APIHelper.SKIP):
        """Constructor for the AlertCountsResponse class"""

        # Initialize members of the class
        if information_count is not APIHelper.SKIP:
            self.information_count = information_count 
        if warning_count is not APIHelper.SKIP:
            self.warning_count = warning_count 
        if minor_count is not APIHelper.SKIP:
            self.minor_count = minor_count 
        if major_count is not APIHelper.SKIP:
            self.major_count = major_count 
        if critical_count is not APIHelper.SKIP:
            self.critical_count = critical_count 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        information_count = dictionary.get("informationCount") if dictionary.get("informationCount") else APIHelper.SKIP
        warning_count = dictionary.get("warningCount") if dictionary.get("warningCount") else APIHelper.SKIP
        minor_count = dictionary.get("minorCount") if dictionary.get("minorCount") else APIHelper.SKIP
        major_count = dictionary.get("majorCount") if dictionary.get("majorCount") else APIHelper.SKIP
        critical_count = dictionary.get("criticalCount") if dictionary.get("criticalCount") else APIHelper.SKIP
        # Return an object of this model
        return cls(information_count,
                   warning_count,
                   minor_count,
                   major_count,
                   critical_count)
