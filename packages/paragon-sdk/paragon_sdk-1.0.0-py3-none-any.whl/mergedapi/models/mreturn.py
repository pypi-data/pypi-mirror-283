# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Return(object):

    """Implementation of the 'Return' model.

    TODO: type model description here.

    Attributes:
        field_name (str): Name of the output field. Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*
        mtype (Type8Enum): TODO: type description here.
        description (str): Description about this field

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "field_name": 'field-name',
        "mtype": 'type',
        "description": 'description'
    }

    _optionals = [
        'mtype',
        'description',
    ]

    def __init__(self,
                 field_name=None,
                 mtype=APIHelper.SKIP,
                 description=APIHelper.SKIP):
        """Constructor for the Return class"""

        # Initialize members of the class
        self.field_name = field_name 
        if mtype is not APIHelper.SKIP:
            self.mtype = mtype 
        if description is not APIHelper.SKIP:
            self.description = description 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        field_name = dictionary.get("field-name") if dictionary.get("field-name") else None
        mtype = dictionary.get("type") if dictionary.get("type") else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        # Return an object of this model
        return cls(field_name,
                   mtype,
                   description)
