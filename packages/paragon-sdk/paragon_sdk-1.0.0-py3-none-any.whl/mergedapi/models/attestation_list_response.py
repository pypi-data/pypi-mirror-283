# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.attestation_attestation import AttestationAttestation


class AttestationListResponse(object):

    """Implementation of the 'attestationListResponse' model.

    TODO: type model description here.

    Attributes:
        attestations (List[AttestationAttestation]): TODO: type description
            here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "attestations": 'attestations'
    }

    _optionals = [
        'attestations',
    ]

    def __init__(self,
                 attestations=APIHelper.SKIP):
        """Constructor for the AttestationListResponse class"""

        # Initialize members of the class
        if attestations is not APIHelper.SKIP:
            self.attestations = attestations 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        attestations = None
        if dictionary.get('attestations') is not None:
            attestations = [AttestationAttestation.from_dictionary(x) for x in dictionary.get('attestations')]
        else:
            attestations = APIHelper.SKIP
        # Return an object of this model
        return cls(attestations)
