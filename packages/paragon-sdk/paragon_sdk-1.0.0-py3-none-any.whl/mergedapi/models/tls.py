# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Tls(object):

    """Implementation of the 'Tls' model.

    TODO: type model description here.

    Attributes:
        ca_profile (str): CA profile name
        insecure_skip_verify (bool): Use TLS but skip verification of
            certificate chain and host
        local_certificate_profile (str): Local certificate profile name

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "ca_profile": 'ca-profile',
        "insecure_skip_verify": 'insecure-skip-verify',
        "local_certificate_profile": 'local-certificate-profile'
    }

    _optionals = [
        'ca_profile',
        'insecure_skip_verify',
        'local_certificate_profile',
    ]

    def __init__(self,
                 ca_profile=APIHelper.SKIP,
                 insecure_skip_verify=APIHelper.SKIP,
                 local_certificate_profile=APIHelper.SKIP):
        """Constructor for the Tls class"""

        # Initialize members of the class
        if ca_profile is not APIHelper.SKIP:
            self.ca_profile = ca_profile 
        if insecure_skip_verify is not APIHelper.SKIP:
            self.insecure_skip_verify = insecure_skip_verify 
        if local_certificate_profile is not APIHelper.SKIP:
            self.local_certificate_profile = local_certificate_profile 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        ca_profile = dictionary.get("ca-profile") if dictionary.get("ca-profile") else APIHelper.SKIP
        insecure_skip_verify = dictionary.get("insecure-skip-verify") if "insecure-skip-verify" in dictionary.keys() else APIHelper.SKIP
        local_certificate_profile = dictionary.get("local-certificate-profile") if dictionary.get("local-certificate-profile") else APIHelper.SKIP
        # Return an object of this model
        return cls(ca_profile,
                   insecure_skip_verify,
                   local_certificate_profile)
