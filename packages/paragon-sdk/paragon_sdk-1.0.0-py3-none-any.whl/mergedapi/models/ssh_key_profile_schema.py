# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SshKeyProfileSchema(object):

    """Implementation of the 'ssh-key-profile_schema' model.

    TODO: type model description here.

    Attributes:
        name (str): SSH Key profile name. Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*
        ssh_private_key_file (str): SSH private key file name
        ssh_private_key_passphrase (str): SSH private key passphrase

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "ssh_private_key_file": 'ssh-private-key-file',
        "ssh_private_key_passphrase": 'ssh-private-key-passphrase'
    }

    def __init__(self,
                 name=None,
                 ssh_private_key_file=None,
                 ssh_private_key_passphrase=None):
        """Constructor for the SshKeyProfileSchema class"""

        # Initialize members of the class
        self.name = name 
        self.ssh_private_key_file = ssh_private_key_file 
        self.ssh_private_key_passphrase = ssh_private_key_passphrase 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("name") if dictionary.get("name") else None
        ssh_private_key_file = dictionary.get("ssh-private-key-file") if dictionary.get("ssh-private-key-file") else None
        ssh_private_key_passphrase = dictionary.get("ssh-private-key-passphrase") if dictionary.get("ssh-private-key-passphrase") else None
        # Return an object of this model
        return cls(name,
                   ssh_private_key_file,
                   ssh_private_key_passphrase)
