# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.version import Version


class SnapshotSoftwareEndOfLife(object):

    """Implementation of the 'snapshotSoftwareEndOfLife' model.

    SoftwareEndOfLife defines the software end of life status of the device.

    Attributes:
        is_not_end_of_life (bool): Holds false if the software end of life
            date has been reached.
        os_name (str): Holds the name of the OS software.
        version (Version): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "is_not_end_of_life": 'isNotEndOfLife',
        "os_name": 'osName',
        "version": 'version'
    }

    _optionals = [
        'is_not_end_of_life',
        'os_name',
        'version',
    ]

    def __init__(self,
                 is_not_end_of_life=APIHelper.SKIP,
                 os_name=APIHelper.SKIP,
                 version=APIHelper.SKIP):
        """Constructor for the SnapshotSoftwareEndOfLife class"""

        # Initialize members of the class
        if is_not_end_of_life is not APIHelper.SKIP:
            self.is_not_end_of_life = is_not_end_of_life 
        if os_name is not APIHelper.SKIP:
            self.os_name = os_name 
        if version is not APIHelper.SKIP:
            self.version = version 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        is_not_end_of_life = dictionary.get("isNotEndOfLife") if "isNotEndOfLife" in dictionary.keys() else APIHelper.SKIP
        os_name = dictionary.get("osName") if dictionary.get("osName") else APIHelper.SKIP
        version = Version.from_dictionary(dictionary.get('version')) if 'version' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(is_not_end_of_life,
                   os_name,
                   version)
