# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.license_1 import License1


class BomLicenseCompliance(object):

    """Implementation of the 'bomLicenseCompliance' model.

    LicenseCompliance encapsulates license metadata and a boolean defining
    whether the license complies with license policy.

    Attributes:
        license (License1): TODO: type description here.
        is_compliant (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "license": 'license',
        "is_compliant": 'isCompliant'
    }

    _optionals = [
        'license',
        'is_compliant',
    ]

    def __init__(self,
                 license=APIHelper.SKIP,
                 is_compliant=APIHelper.SKIP):
        """Constructor for the BomLicenseCompliance class"""

        # Initialize members of the class
        if license is not APIHelper.SKIP:
            self.license = license 
        if is_compliant is not APIHelper.SKIP:
            self.is_compliant = is_compliant 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        license = License1.from_dictionary(dictionary.get('license')) if 'license' in dictionary.keys() else APIHelper.SKIP
        is_compliant = dictionary.get("isCompliant") if "isCompliant" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(license,
                   is_compliant)
