# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class SnapshotDeviceScan(object):

    """Implementation of the 'snapshotDeviceScan' model.

    DeviceScan summarises the result of a scan.

    Attributes:
        result_id (str): References the target result summary containing all
            the details of the scan.
        end_time (datetime): The time at which the scan completed.
        status (ComplianceScanStatusEnum): TODO: type description here.
        score (float): The score reported by the scan.
        scan_id (str): The id of the scan with which the result is
            associated.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "result_id": 'resultId',
        "end_time": 'endTime',
        "status": 'status',
        "score": 'score',
        "scan_id": 'scanId'
    }

    _optionals = [
        'result_id',
        'end_time',
        'status',
        'score',
        'scan_id',
    ]

    def __init__(self,
                 result_id=APIHelper.SKIP,
                 end_time=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 score=APIHelper.SKIP,
                 scan_id=APIHelper.SKIP):
        """Constructor for the SnapshotDeviceScan class"""

        # Initialize members of the class
        if result_id is not APIHelper.SKIP:
            self.result_id = result_id 
        if end_time is not APIHelper.SKIP:
            self.end_time = APIHelper.apply_datetime_converter(end_time, APIHelper.RFC3339DateTime) if end_time else None 
        if status is not APIHelper.SKIP:
            self.status = status 
        if score is not APIHelper.SKIP:
            self.score = score 
        if scan_id is not APIHelper.SKIP:
            self.scan_id = scan_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        result_id = dictionary.get("resultId") if dictionary.get("resultId") else APIHelper.SKIP
        end_time = APIHelper.RFC3339DateTime.from_value(dictionary.get("endTime")).datetime if dictionary.get("endTime") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        score = dictionary.get("score") if dictionary.get("score") else APIHelper.SKIP
        scan_id = dictionary.get("scanId") if dictionary.get("scanId") else APIHelper.SKIP
        # Return an object of this model
        return cls(result_id,
                   end_time,
                   status,
                   score,
                   scan_id)
