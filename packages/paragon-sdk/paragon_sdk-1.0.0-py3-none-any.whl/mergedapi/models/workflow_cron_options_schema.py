# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class WorkflowCronOptionsSchema(object):

    """Implementation of the 'workflow_cron_options_schema' model.

    Workflow Cron Workflow Options information

    Attributes:
        description (str): Description about this cron workflow options
        schedule (str): Cron expression of time at which workflow will be run
        concurrency_policy (ConcurrencyPolicyEnum): Policy that determines
            what to do if multiple Workflows are scheduled at the same time
        starting_deadline_duration (str): Duration after the last successful
            run during which a missed Workflow will be run
        successful_jobs_history_limit (int): Number of successful Workflows
            that will be persisted at a time
        failed_jobs_history_limit (int): Policy that determines what to do if
            multiple Workflows are scheduled at the same time

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "schedule": 'schedule',
        "description": 'description',
        "concurrency_policy": 'concurrency-policy',
        "starting_deadline_duration": 'starting-deadline-duration',
        "successful_jobs_history_limit": 'successful-jobs-history-limit',
        "failed_jobs_history_limit": 'failed-jobs-history-limit'
    }

    _optionals = [
        'description',
        'concurrency_policy',
        'starting_deadline_duration',
        'successful_jobs_history_limit',
        'failed_jobs_history_limit',
    ]

    def __init__(self,
                 schedule=None,
                 description=APIHelper.SKIP,
                 concurrency_policy=APIHelper.SKIP,
                 starting_deadline_duration=APIHelper.SKIP,
                 successful_jobs_history_limit=APIHelper.SKIP,
                 failed_jobs_history_limit=APIHelper.SKIP):
        """Constructor for the WorkflowCronOptionsSchema class"""

        # Initialize members of the class
        if description is not APIHelper.SKIP:
            self.description = description 
        self.schedule = schedule 
        if concurrency_policy is not APIHelper.SKIP:
            self.concurrency_policy = concurrency_policy 
        if starting_deadline_duration is not APIHelper.SKIP:
            self.starting_deadline_duration = starting_deadline_duration 
        if successful_jobs_history_limit is not APIHelper.SKIP:
            self.successful_jobs_history_limit = successful_jobs_history_limit 
        if failed_jobs_history_limit is not APIHelper.SKIP:
            self.failed_jobs_history_limit = failed_jobs_history_limit 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        schedule = dictionary.get("schedule") if dictionary.get("schedule") else None
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        concurrency_policy = dictionary.get("concurrency-policy") if dictionary.get("concurrency-policy") else APIHelper.SKIP
        starting_deadline_duration = dictionary.get("starting-deadline-duration") if dictionary.get("starting-deadline-duration") else APIHelper.SKIP
        successful_jobs_history_limit = dictionary.get("successful-jobs-history-limit") if dictionary.get("successful-jobs-history-limit") else APIHelper.SKIP
        failed_jobs_history_limit = dictionary.get("failed-jobs-history-limit") if dictionary.get("failed-jobs-history-limit") else APIHelper.SKIP
        # Return an object of this model
        return cls(schedule,
                   description,
                   concurrency_policy,
                   starting_deadline_duration,
                   successful_jobs_history_limit,
                   failed_jobs_history_limit)
