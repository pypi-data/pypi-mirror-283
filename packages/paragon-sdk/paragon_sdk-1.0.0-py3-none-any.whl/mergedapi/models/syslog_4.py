# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Syslog4(object):

    """Implementation of the 'Syslog4' model.

    TODO: type model description here.

    Attributes:
        source_ip_addresses (List[str]): TODO: type description here.
        hostnames (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "source_ip_addresses": 'source-ip-addresses',
        "hostnames": 'hostnames'
    }

    _optionals = [
        'source_ip_addresses',
        'hostnames',
    ]

    def __init__(self,
                 source_ip_addresses=APIHelper.SKIP,
                 hostnames=APIHelper.SKIP):
        """Constructor for the Syslog4 class"""

        # Initialize members of the class
        if source_ip_addresses is not APIHelper.SKIP:
            self.source_ip_addresses = source_ip_addresses 
        if hostnames is not APIHelper.SKIP:
            self.hostnames = hostnames 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        source_ip_addresses = dictionary.get("source-ip-addresses") if dictionary.get("source-ip-addresses") else APIHelper.SKIP
        hostnames = dictionary.get("hostnames") if dictionary.get("hostnames") else APIHelper.SKIP
        # Return an object of this model
        return cls(source_ip_addresses,
                   hostnames)
