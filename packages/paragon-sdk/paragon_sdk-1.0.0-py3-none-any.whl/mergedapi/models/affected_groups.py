# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class AffectedGroups(object):

    """Implementation of the 'affected-groups' model.

    TODO: type model description here.

    Attributes:
        device_groups (List[str]): TODO: type description here.
        network_groups (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "device_groups": 'device-groups',
        "network_groups": 'network-groups'
    }

    _optionals = [
        'device_groups',
        'network_groups',
    ]

    def __init__(self,
                 device_groups=APIHelper.SKIP,
                 network_groups=APIHelper.SKIP):
        """Constructor for the AffectedGroups class"""

        # Initialize members of the class
        if device_groups is not APIHelper.SKIP:
            self.device_groups = device_groups 
        if network_groups is not APIHelper.SKIP:
            self.network_groups = network_groups 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        device_groups = dictionary.get("device-groups") if dictionary.get("device-groups") else APIHelper.SKIP
        network_groups = dictionary.get("network-groups") if dictionary.get("network-groups") else APIHelper.SKIP
        # Return an object of this model
        return cls(device_groups,
                   network_groups)
