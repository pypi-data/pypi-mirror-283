# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class DataIfMissing(object):

    """Implementation of the 'DataIfMissing' model.

    Assign value for field in case of data missing

    Attributes:
        value (str): Assign given default value for field in case of data
            missing

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "value": 'value'
    }

    _optionals = [
        'value',
    ]

    def __init__(self,
                 value=APIHelper.SKIP):
        """Constructor for the DataIfMissing class"""

        # Initialize members of the class
        if value is not APIHelper.SKIP:
            self.value = value 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        value = dictionary.get("value") if dictionary.get("value") else APIHelper.SKIP
        # Return an object of this model
        return cls(value)
