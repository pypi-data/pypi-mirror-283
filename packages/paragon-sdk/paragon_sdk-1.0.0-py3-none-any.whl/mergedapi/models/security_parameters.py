# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.tls import Tls
from mergedapi.models.user_authentication import UserAuthentication


class SecurityParameters(object):

    """Implementation of the 'SecurityParameters' model.

    Plugin specific security parameters

    Attributes:
        tls (Tls): TODO: type description here.
        user_authentication (UserAuthentication): User authentication

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "tls": 'tls',
        "user_authentication": 'user-authentication'
    }

    _optionals = [
        'tls',
        'user_authentication',
    ]

    def __init__(self,
                 tls=APIHelper.SKIP,
                 user_authentication=APIHelper.SKIP):
        """Constructor for the SecurityParameters class"""

        # Initialize members of the class
        if tls is not APIHelper.SKIP:
            self.tls = tls 
        if user_authentication is not APIHelper.SKIP:
            self.user_authentication = user_authentication 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        tls = Tls.from_dictionary(dictionary.get('tls')) if 'tls' in dictionary.keys() else APIHelper.SKIP
        user_authentication = UserAuthentication.from_dictionary(dictionary.get('user-authentication')) if 'user-authentication' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(tls,
                   user_authentication)
