# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.attestation_log_event import AttestationLogEvent


class Evidence(object):

    """Implementation of the 'Evidence' model.

    TODO: type model description here.

    Attributes:
        event_log (List[AttestationLogEvent]): Events from the TCG event log.
        pcr_values (Dict[str, str]): PCR Values retrieved from the quote.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "event_log": 'eventLog',
        "pcr_values": 'pcrValues'
    }

    _optionals = [
        'event_log',
        'pcr_values',
    ]

    def __init__(self,
                 event_log=APIHelper.SKIP,
                 pcr_values=APIHelper.SKIP):
        """Constructor for the Evidence class"""

        # Initialize members of the class
        if event_log is not APIHelper.SKIP:
            self.event_log = event_log 
        if pcr_values is not APIHelper.SKIP:
            self.pcr_values = pcr_values 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        event_log = None
        if dictionary.get('eventLog') is not None:
            event_log = [AttestationLogEvent.from_dictionary(x) for x in dictionary.get('eventLog')]
        else:
            event_log = APIHelper.SKIP
        pcr_values = dictionary.get("pcrValues") if dictionary.get("pcrValues") else APIHelper.SKIP
        # Return an object of this model
        return cls(event_log,
                   pcr_values)
