# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class Group(object):

    """Implementation of the 'Group' model.

    TODO: type model description here.

    Attributes:
        group_id (str): TODO: type description here.
        group_name (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "group_id": 'groupId',
        "group_name": 'groupName'
    }

    _optionals = [
        'group_id',
        'group_name',
    ]

    def __init__(self,
                 group_id=APIHelper.SKIP,
                 group_name=APIHelper.SKIP):
        """Constructor for the Group class"""

        # Initialize members of the class
        if group_id is not APIHelper.SKIP:
            self.group_id = group_id 
        if group_name is not APIHelper.SKIP:
            self.group_name = group_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        group_id = dictionary.get("groupId") if dictionary.get("groupId") else APIHelper.SKIP
        group_name = dictionary.get("groupName") if dictionary.get("groupName") else APIHelper.SKIP
        # Return an object of this model
        return cls(group_id,
                   group_name)
