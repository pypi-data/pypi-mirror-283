# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.summarize import Summarize


class RawData(object):

    """Implementation of the 'RawData' model.

    TODO: type model description here.

    Attributes:
        persist (object): Enables persist-raw-data
        summarize (Summarize): Enables persist-summarize-data

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "persist": 'persist',
        "summarize": 'summarize'
    }

    _optionals = [
        'persist',
        'summarize',
    ]

    def __init__(self,
                 persist=APIHelper.SKIP,
                 summarize=APIHelper.SKIP):
        """Constructor for the RawData class"""

        # Initialize members of the class
        if persist is not APIHelper.SKIP:
            self.persist = persist 
        if summarize is not APIHelper.SKIP:
            self.summarize = summarize 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        persist = dictionary.get("persist") if dictionary.get("persist") else APIHelper.SKIP
        summarize = Summarize.from_dictionary(dictionary.get('summarize')) if 'summarize' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(persist,
                   summarize)
