# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class UsePlugin(object):

    """Implementation of the 'UsePlugin' model.

    TODO: type model description here.

    Attributes:
        instance (str): Plugin instance name
        name (str): BYOI plugin name
        mtype (str): Plugin type

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "name": 'name',
        "mtype": 'type',
        "instance": 'instance'
    }

    _optionals = [
        'instance',
    ]

    def __init__(self,
                 name=None,
                 instance=APIHelper.SKIP):
        """Constructor for the UsePlugin class"""

        # Initialize members of the class
        if instance is not APIHelper.SKIP:
            self.instance = instance 
        self.name = name 
        self.mtype = 'default-plugin' 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        name = dictionary.get("name") if dictionary.get("name") else None
        instance = dictionary.get("instance") if dictionary.get("instance") else APIHelper.SKIP
        # Return an object of this model
        return cls(name,
                   instance)
