# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class WorkflowStatisticsSchema(object):

    """Implementation of the 'workflow_statistics_schema' model.

    Workflow statistics information

    Attributes:
        description (str): Description about this workflow statistics
        total_run (int): Total workflow instances run
        total_succeeded (int): Total workflow instances succeeded
        total_failed (int): Total workflow instances failed
        total_running (int): Total workflow instances running currently
        total_suspended (int): Total workflow instances suspended

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "description": 'description',
        "total_run": 'total_run',
        "total_succeeded": 'total_succeeded',
        "total_failed": 'total_failed',
        "total_running": 'total_running',
        "total_suspended": 'total_suspended'
    }

    _optionals = [
        'description',
        'total_run',
        'total_succeeded',
        'total_failed',
        'total_running',
        'total_suspended',
    ]

    def __init__(self,
                 description=APIHelper.SKIP,
                 total_run=APIHelper.SKIP,
                 total_succeeded=APIHelper.SKIP,
                 total_failed=APIHelper.SKIP,
                 total_running=APIHelper.SKIP,
                 total_suspended=APIHelper.SKIP):
        """Constructor for the WorkflowStatisticsSchema class"""

        # Initialize members of the class
        if description is not APIHelper.SKIP:
            self.description = description 
        if total_run is not APIHelper.SKIP:
            self.total_run = total_run 
        if total_succeeded is not APIHelper.SKIP:
            self.total_succeeded = total_succeeded 
        if total_failed is not APIHelper.SKIP:
            self.total_failed = total_failed 
        if total_running is not APIHelper.SKIP:
            self.total_running = total_running 
        if total_suspended is not APIHelper.SKIP:
            self.total_suspended = total_suspended 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        total_run = dictionary.get("total_run") if dictionary.get("total_run") else APIHelper.SKIP
        total_succeeded = dictionary.get("total_succeeded") if dictionary.get("total_succeeded") else APIHelper.SKIP
        total_failed = dictionary.get("total_failed") if dictionary.get("total_failed") else APIHelper.SKIP
        total_running = dictionary.get("total_running") if dictionary.get("total_running") else APIHelper.SKIP
        total_suspended = dictionary.get("total_suspended") if dictionary.get("total_suspended") else APIHelper.SKIP
        # Return an object of this model
        return cls(description,
                   total_run,
                   total_succeeded,
                   total_failed,
                   total_running,
                   total_suspended)
