# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper
from mergedapi.models.raw import Raw


class DataSummarization(object):

    """Implementation of the 'DataSummarization' model.

    summarization config

    Attributes:
        raw (List[Raw]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "raw": 'raw'
    }

    _optionals = [
        'raw',
    ]

    def __init__(self,
                 raw=APIHelper.SKIP):
        """Constructor for the DataSummarization class"""

        # Initialize members of the class
        if raw is not APIHelper.SKIP:
            self.raw = raw 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        raw = None
        if dictionary.get('raw') is not None:
            raw = [Raw.from_dictionary(x) for x in dictionary.get('raw')]
        else:
            raw = APIHelper.SKIP
        # Return an object of this model
        return cls(raw)
