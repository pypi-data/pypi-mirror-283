# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class SnmpProxy(object):

    """Implementation of the 'SnmpProxy' model.

    Loadbalancer deployment configuration for SNMP Notifications

    Attributes:
        virtual_ip_address (str): load balancer virtual ipv4 address exclusive
            for SNMP

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "virtual_ip_address": 'virtual-ip-address'
    }

    def __init__(self,
                 virtual_ip_address=None):
        """Constructor for the SnmpProxy class"""

        # Initialize members of the class
        self.virtual_ip_address = virtual_ip_address 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        virtual_ip_address = dictionary.get("virtual-ip-address") if dictionary.get("virtual-ip-address") else None
        # Return an object of this model
        return cls(virtual_ip_address)
