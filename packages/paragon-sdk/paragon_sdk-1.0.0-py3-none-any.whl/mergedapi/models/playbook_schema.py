# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class PlaybookSchema(object):

    """Implementation of the 'playbook_schema' model.

    TODO: type model description here.

    Attributes:
        description (str): Description about this playbook
        playbook_name (str): Name of the playbook. Should be of pattern
            [a-zA-Z][a-zA-Z0-9_-]*
        rules (List[str]): TODO: type description here.
        synopsis (str): Short description about this playbook
        classification (str): Classification info for this playbook

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "playbook_name": 'playbook-name',
        "description": 'description',
        "rules": 'rules',
        "synopsis": 'synopsis',
        "classification": 'classification'
    }

    _optionals = [
        'description',
        'rules',
        'synopsis',
        'classification',
    ]

    def __init__(self,
                 playbook_name=None,
                 description=APIHelper.SKIP,
                 rules=APIHelper.SKIP,
                 synopsis=APIHelper.SKIP,
                 classification=APIHelper.SKIP):
        """Constructor for the PlaybookSchema class"""

        # Initialize members of the class
        if description is not APIHelper.SKIP:
            self.description = description 
        self.playbook_name = playbook_name 
        if rules is not APIHelper.SKIP:
            self.rules = rules 
        if synopsis is not APIHelper.SKIP:
            self.synopsis = synopsis 
        if classification is not APIHelper.SKIP:
            self.classification = classification 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        playbook_name = dictionary.get("playbook-name") if dictionary.get("playbook-name") else None
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        rules = dictionary.get("rules") if dictionary.get("rules") else APIHelper.SKIP
        synopsis = dictionary.get("synopsis") if dictionary.get("synopsis") else APIHelper.SKIP
        classification = dictionary.get("classification") if dictionary.get("classification") else APIHelper.SKIP
        # Return an object of this model
        return cls(playbook_name,
                   description,
                   rules,
                   synopsis,
                   classification)
