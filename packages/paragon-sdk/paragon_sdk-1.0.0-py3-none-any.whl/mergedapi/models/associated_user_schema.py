# -*- coding: utf-8 -*-

"""
mergedapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from mergedapi.api_helper import APIHelper


class AssociatedUserSchema(object):

    """Implementation of the 'associated_user_schema' model.

    TODO: type model description here.

    Attributes:
        user_id (str): TODO: type description here.
        user_name (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user_id": 'userId',
        "user_name": 'userName'
    }

    _optionals = [
        'user_id',
        'user_name',
    ]

    def __init__(self,
                 user_id=APIHelper.SKIP,
                 user_name=APIHelper.SKIP):
        """Constructor for the AssociatedUserSchema class"""

        # Initialize members of the class
        if user_id is not APIHelper.SKIP:
            self.user_id = user_id 
        if user_name is not APIHelper.SKIP:
            self.user_name = user_name 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        user_id = dictionary.get("userId") if dictionary.get("userId") else APIHelper.SKIP
        user_name = dictionary.get("userName") if dictionary.get("userName") else APIHelper.SKIP
        # Return an object of this model
        return cls(user_id,
                   user_name)
