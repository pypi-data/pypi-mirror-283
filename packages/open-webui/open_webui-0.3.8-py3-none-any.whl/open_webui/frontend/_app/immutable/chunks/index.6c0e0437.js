import{a as r}from"./index.0732e0e3.js";const y=async(e="")=>{let a=null;const n=await fetch(`${r}/api/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t,null));if(a)throw a;let o=(n==null?void 0:n.data)??[];return o=o.filter(t=>t).sort((t,i)=>{var h,u,f,d;const s=((u=(h=t.info)==null?void 0:h.meta)==null?void 0:u.position)!==void 0,l=((d=(f=i.info)==null?void 0:f.meta)==null?void 0:d.position)!==void 0;if(s&&l)return t.info.meta.position-i.info.meta.position;if(s)return-1;if(l)return 1;const c=t.name.toLowerCase(),p=i.name.toLowerCase();return c<p?-1:c>p?1:t.name<i.name?-1:t.name>i.name?1:0}),console.log(o),o},j=async(e,a)=>{let n=null;const o=await fetch(`${r}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(a)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n=t,null));if(n)throw n;return o},g=async(e="")=>{let a=null;const n=await fetch(`${r}/api/task/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),a=o,null));if(a)throw a;return n},m=async(e,a)=>{let n=null;const o=await fetch(`${r}/api/task/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(a)}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?n=t.detail:n=t,null));if(n)throw n;return o},$=async(e="",a,n,o)=>{var s,l;let t=null;const i=await fetch(`${r}/api/task/title/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,prompt:n,...o&&{chat_id:o}})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c&&(t=c.detail),null));if(t)throw t;return((l=(s=i==null?void 0:i.choices[0])==null?void 0:s.message)==null?void 0:l.content.replace(/["']/g,""))??"New Chat"},T=async(e="",a,n,o)=>{var l,c;let t=null;const i=await fetch(`${r}/api/task/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,prompt:n,...o&&{chat_id:o}})}).then(async p=>{if(!p.ok)throw await p.json();return p.json()}).catch(p=>(console.log(p),"detail"in p&&(t=p.detail),null));if(t)throw t;const s=((c=(l=i==null?void 0:i.choices[0])==null?void 0:l.message)==null?void 0:c.content.replace(/["']/g,""))??null;return s&&/\p{Extended_Pictographic}/u.test(s)?s.match(/\p{Extended_Pictographic}/gu)[0]:null},C=async(e="",a,n,o)=>{var s,l;let t=null;const i=await fetch(`${r}/api/task/query/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:a,messages:n,prompt:o})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c&&(t=c.detail),null));if(t)throw t;return((l=(s=i==null?void 0:i.choices[0])==null?void 0:s.message)==null?void 0:l.content.replace(/["']/g,""))??o},S=async(e="")=>{let a=null;const n=await fetch(`${r}/api/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),a=t,null));if(a)throw a;return(n==null?void 0:n.data)??[]},P=async(e,a,n)=>{let o=null;const t=new FormData;t.append("file",a),t.append("urlIdx",n);const i=await fetch(`${r}/api/pipelines/upload`,{method:"POST",headers:{...e&&{authorization:`Bearer ${e}`}},body:t}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?o=s.detail:o=s,null));if(o)throw o;return i},k=async(e,a,n)=>{let o=null;const t=await fetch(`${r}/api/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({url:a,urlIdx:n})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?o=i.detail:o=i,null));if(o)throw o;return t},A=async(e,a,n)=>{let o=null;const t=await fetch(`${r}/api/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({id:a,urlIdx:n})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),"detail"in i?o=i.detail:o=i,null));if(o)throw o;return t},B=async(e,a)=>{let n=null;const o=new URLSearchParams;a!==void 0&&o.append("urlIdx",a);const t=await fetch(`${r}/api/pipelines?${o.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return(t==null?void 0:t.data)??[]},O=async(e,a,n)=>{let o=null;const t=new URLSearchParams;n!==void 0&&t.append("urlIdx",n);const i=await fetch(`${r}/api/pipelines/${a}/valves?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s,null));if(o)throw o;return i},z=async(e,a,n)=>{let o=null;const t=new URLSearchParams;n!==void 0&&t.append("urlIdx",n);const i=await fetch(`${r}/api/pipelines/${a}/valves/spec?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s,null));if(o)throw o;return i},E=async(e="",a,n,o)=>{let t=null;const i=new URLSearchParams;o!==void 0&&i.append("urlIdx",o);const s=await fetch(`${r}/api/pipelines/${a}/valves/update?${i.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(n)}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(console.log(l),"detail"in l?t=l.detail:t=l,null));if(t)throw t;return s},v=async()=>{let e=null;const a=await fetch(`${r}/api/config`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n,null));if(e)throw e;return a},b=async()=>{let e=null;const a=await fetch(`${r}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n,null));if(e)throw e;return a},G=async()=>{let e=null;const a=await fetch(`${r}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n,null));if(e)throw e;return a},N=async e=>{let a=null;const n=await fetch(`${r}/api/config/model/filter`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),a=o,null));if(a)throw a;return n},J=async(e,a,n)=>{let o=null;const t=await fetch(`${r}/api/config/model/filter`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({enabled:a,models:n})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(console.log(i),o=i,null));if(o)throw o;return t},L=async e=>{let a=null;const n=await fetch(`${r}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),a=o,null));if(a)throw a;return n.url},U=async(e,a)=>{let n=null;const o=await fetch(`${r}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:a})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),n=t,null));if(n)throw n;return o.url};export{G as a,y as b,b as c,L as d,N as e,J as f,v as g,S as h,E as i,z as j,O as k,B as l,k as m,A as n,P as o,g as p,m as q,T as r,$ as s,j as t,U as u,C as v};
//# sourceMappingURL=index.6c0e0437.js.map
