import{R as i}from"./index.0732e0e3.js";const l=async a=>{let o=null;const e=await fetch(`${i}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return e},h=async(a,o)=>{let e=null;const t=await fetch(`${i}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return t},u=async a=>{let o=null;const e=await fetch(`${i}/query/settings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return e},d=async(a,o)=>{let e=null;const t=await fetch(`${i}/query/settings/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return t},p=async(a,o)=>{let e=null;const t=await fetch(`${i}/process/doc`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({file_id:o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return t},f=async(a,o,e)=>{const t=new FormData;t.append("file",e),t.append("collection_name",o);let n=null;const r=await fetch(`${i}/doc`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${a}`},body:t}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(n=c.detail,console.log(c),null));if(n)throw n;return r},y=async(a,o,e)=>{let t=null;const n=await fetch(`${i}/web`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({url:e,collection_name:o})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(t=r.detail,console.log(r),null));if(t)throw t;return n},w=async(a,o)=>{let e=null;const t=await fetch(`${i}/youtube`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${a}`},body:JSON.stringify({url:o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(e=n.detail,console.log(n),null));if(e)throw e;return t},j=async a=>{let o=null;const e=await fetch(`${i}/scan`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,null));if(o)throw o;return e},g=async a=>{let o=null;const e=await fetch(`${i}/reset`,{method:"GET",headers:{Accept:"application/json",authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,null));if(o)throw o;return e},T=async a=>{let o=null;const e=await fetch(`${i}/embedding`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return e},$=async(a,o)=>{let e=null;const t=await fetch(`${i}/embedding/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return t},m=async a=>{let o=null;const e=await fetch(`${i}/reranking`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return e},B=async(a,o)=>{let e=null;const t=await fetch(`${i}/reranking/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({...o})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),e=n.detail,null));if(e)throw e;return t},S=async(a,o,e)=>{let t=null;const n=await fetch(`${i}/web/search`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${a}`},body:JSON.stringify({query:o,collection_name:e??""})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),t=r.detail,null));if(t)throw t;return n};export{l as a,h as b,d as c,T as d,m as e,$ as f,u as g,y as h,w as i,S as j,f as k,p,g as r,j as s,B as u};
//# sourceMappingURL=index.4b530ba8.js.map
