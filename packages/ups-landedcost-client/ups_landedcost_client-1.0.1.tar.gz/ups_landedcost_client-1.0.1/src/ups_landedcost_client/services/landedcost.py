# This file was generated by liblab | https://liblab.com/

from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..models.utils.cast_models import cast_models
from ..models.landed_cost_response import LandedCostResponse
from ..models.landed_cost_request import LandedCostRequest


class LandedcostService(BaseService):

    @cast_models
    def landed_cost(
        self,
        request_body: LandedCostRequest,
        version: str,
        trans_id: str,
        transaction_src: str,
        account_number: str = None,
    ) -> LandedCostResponse:
        """The Landed Cost Quote API allows you to estimate the all-inclusive cost of international shipments - including applicable duties, VAT, taxes, brokerage fees, and other fees. Required parameters include the currency and shipment details, such as the commodity ID, price, quantity, and country code of origin.

        :param request_body: The request body.
        :type request_body: LandedCostRequest
        :param version: Version of the API.
        :type version: str
        :param trans_id: An identifier unique to the request. Length: 32
        :type trans_id: str
        :param transaction_src: An identifier of the client/source application that is making the request. Length: 512
        :type transaction_src: str
        :param account_number: The UPS account number., defaults to None
        :type account_number: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: successful operation
        :rtype: LandedCostResponse
        """

        Validator(LandedCostRequest).validate(request_body)
        Validator(str).validate(version)
        Validator(str).validate(trans_id)
        Validator(str).validate(transaction_src)
        Validator(str).is_optional().validate(account_number)

        serialized_request = (
            Serializer(
                f"{self.base_url}/landedcost/{{version}}/quotes",
                self.get_default_headers(),
            )
            .add_header("transId", trans_id)
            .add_header("transactionSrc", transaction_src)
            .add_header("AccountNumber", account_number)
            .add_path("version", version)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response = self.send_request(serialized_request)

        return LandedCostResponse._unmap(response)
