# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({})
class Errors(BaseModel):
    """Error code and description

    :param code: Error Code, defaults to None
    :type code: str, optional
    :param description: Description of the error., defaults to None
    :type description: str, optional
    :param message: Consumer tailored error message., defaults to None
    :type message: str, optional
    :param value: The value that caused the error., defaults to None
    :type value: str, optional
    :param field: The path to the field causing the error, as returned from the backend services., defaults to None
    :type field: str, optional
    """

    def __init__(
        self,
        code: str = None,
        description: str = None,
        message: str = None,
        value: str = None,
        field: str = None,
    ):
        if code is not None:
            self.code = code
        if description is not None:
            self.description = description
        if message is not None:
            self.message = message
        if value is not None:
            self.value = value
        if field is not None:
            self.field = field
