# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "commodity_id": "commodityId",
        "gross_weight": "grossWeight",
        "gross_weight_unit": "grossWeightUnit",
        "price_each": "priceEach",
        "commodity_currency_code": "commodityCurrencyCode",
        "uom": "UOM",
        "hs_code": "hsCode",
        "origin_country_code": "originCountryCode",
    }
)
class RequestShipmentItems(BaseModel):
    """RequestShipmentItems

    :param commodity_id: Commodity ID is used to associate tariffs with product in the output. Should be unique for each commodity in a request. It is an arbitrary string provided by the user of the API that will be returned with the Landed Cost Quote to indicate which commodity the tariffs apply to.
    :type commodity_id: str
    :param gross_weight: Specifies the gross weight of the commodity as any non-negative value., defaults to None
    :type gross_weight: float, optional
    :param gross_weight_unit: Specifies the units of the gross weight. Required if GrossWeight is used. If GrossWeight is not specified, this value must not be set to anything but null. Supported values: LB, KG, defaults to None
    :type gross_weight_unit: str, optional
    :param price_each: Specifies the price for each commodity unit in the settlement currency. The total price of the entire number of shipmentItems may not exceed 999999999999.99
    :type price_each: float
    :param commodity_currency_code: Specifies the Currency Code used for commodity price. All commodities must have the same currency code.
    :type commodity_currency_code: str
    :param quantity: Specifies the number of product units to be shipped. The total price of the entire number of shipmentItems may not exceed 999999999999.99, 1 or greater than 1
    :type quantity: int
    :param uom: Specifies unit of measure. Check UOM List in the Appendices section.
    :type uom: str
    :param hs_code: Specifies a valid HS or HTS code for the shipment's destination or import country. This field is required if description is not provided., defaults to None
    :type hs_code: str, optional
    :param description: This field is populated with description of the commodity. This field is required if hsCode is not provided., defaults to None
    :type description: str, optional
    :param origin_country_code: Country of Manufacture or origin.
    :type origin_country_code: str
    """

    def __init__(
        self,
        commodity_id: str,
        price_each: float,
        commodity_currency_code: str,
        quantity: int,
        uom: str,
        origin_country_code: str,
        gross_weight: float = None,
        gross_weight_unit: str = None,
        hs_code: str = None,
        description: str = None,
    ):
        self.commodity_id = commodity_id
        if gross_weight is not None:
            self.gross_weight = gross_weight
        if gross_weight_unit is not None:
            self.gross_weight_unit = gross_weight_unit
        self.price_each = price_each
        self.commodity_currency_code = commodity_currency_code
        self.quantity = quantity
        self.uom = uom
        if hs_code is not None:
            self.hs_code = hs_code
        if description is not None:
            self.description = description
        self.origin_country_code = origin_country_code
