# coding: utf-8

"""
    XingChen 开放接口定义

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from xingchen.models.base_chat_request import BaseChatRequest  # noqa: E501

class TestBaseChatRequestAcaChatExtParam(unittest.TestCase):
    """BaseChatRequestAcaChatExtParam unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseChatRequest:
        """Test BaseChatRequestAcaChatExtParam
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseChatRequestAcaChatExtParam`
        """
        model = BaseChatRequestAcaChatExtParam()  # noqa: E501
        if include_optional:
            return BaseChatRequestAcaChatExtParam(
                model = '',
                parameters = xingchen.models.model_parameter.ModelParameters(
                    top_p = 1.337, 
                    top_k = 56, 
                    seed = 56, 
                    max_length = 56, 
                    temperature = 1.337, ),
                input = xingchen.models.input.Input(
                    prompt = '', 
                    messages = [
                        xingchen.models.message.Message(
                            name = '', 
                            role = '', 
                            content = '', 
                            finish_reason = '', 
                            meta = xingchen.models.meta.Meta(
                                has_risk = True, 
                                safety_std_answer = '', ), )
                        ], 
                    aca = xingchen.models.aca.aca(), ),
                servicename = '',
                debug = True
            )
        else:
            return BaseChatRequestAcaChatExtParam(
                input = xingchen.models.input.Input(
                    prompt = '', 
                    messages = [
                        xingchen.models.message.Message(
                            name = '', 
                            role = '', 
                            content = '', 
                            finish_reason = '', 
                            meta = xingchen.models.meta.Meta(
                                has_risk = True, 
                                safety_std_answer = '', ), )
                        ], 
                    aca = xingchen.models.aca.aca(), ),
        )
        """

    def testBaseChatRequestAcaChatExtParam(self):
        """Test BaseChatRequestAcaChatExtParam"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
