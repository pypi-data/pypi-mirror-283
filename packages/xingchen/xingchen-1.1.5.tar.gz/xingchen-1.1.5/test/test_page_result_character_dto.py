# coding: utf-8

"""
    XingChen 开放接口定义

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from xingchen.models.page_result_character_dto import PageResultCharacterDTO  # noqa: E501

class TestPageResultCharacterDTO(unittest.TestCase):
    """PageResultCharacterDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageResultCharacterDTO:
        """Test PageResultCharacterDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageResultCharacterDTO`
        """
        model = PageResultCharacterDTO()  # noqa: E501
        if include_optional:
            return PageResultCharacterDTO(
                list = [
                    xingchen.models.character_dto.CharacterDTO(
                        name = '0', 
                        avatar = xingchen.models.file_info_vo.FileInfoVO(
                            file_save_path = '', 
                            filename = '', 
                            file_url = '', ), 
                        introduction = '', 
                        basic_information = '', 
                        opening_line = '', 
                        traits = '', 
                        chat_example = '', 
                        type = '', 
                        chat_objective = '', 
                        advanced_config = xingchen.models.character_advanced_config.CharacterAdvancedConfig(
                            repository_info = xingchen.models.repository_info.RepositoryInfo(
                                repository_files = [
                                    xingchen.models.repository.Repository(
                                        file_save_path = '', 
                                        filename = '', 
                                        file_url = '', 
                                        status = '', )
                                    ], 
                                status = '', ), 
                            is_real_info = True, 
                            search_keyword = '', 
                            allow_send_image = True, 
                            image_style = '', 
                            allow_send_asr = True, 
                            asr_style = '', 
                            chat_description = '', ), 
                        character_id = '', 
                        version = 56, 
                        major_version = 56, 
                        gmt_create = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        gmt_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user_id = '', 
                        modified_by = '', 
                        tags = [
                            ''
                            ], 
                        bubbles = [
                            ''
                            ], 
                        background_img_url = '', 
                        perm_config = xingchen.models.character_permission_config.CharacterPermissionConfig(
                            is_public = 56, 
                            allow_chat = 56, 
                            allow_api = 56, ), 
                        versions = [
                            56
                            ], 
                        manageable = True, 
                        creator = '', 
                        is_pre_configured = True, )
                    ],
                page = 56,
                page_size = 56,
                total = 56,
                page_offset_value = 56
            )
        else:
            return PageResultCharacterDTO(
        )
        """

    def testPageResultCharacterDTO(self):
        """Test PageResultCharacterDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
