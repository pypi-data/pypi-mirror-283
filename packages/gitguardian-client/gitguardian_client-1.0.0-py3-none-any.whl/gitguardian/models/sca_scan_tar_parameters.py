# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .severity_enum import SeverityEnum
from .sca_ignored_vulnerability import ScaIgnoredVulnerability


@JsonMap({})
class ScaScanTarParameters(BaseModel):
    """ScaScanTarParameters

    :param minimum_severity: minimum_severity, defaults to None
    :type minimum_severity: SeverityEnum, optional
    :param ignored_vulnerabilities: ignored_vulnerabilities, defaults to None
    :type ignored_vulnerabilities: List[ScaIgnoredVulnerability], optional
    """

    def __init__(
        self,
        minimum_severity: SeverityEnum = None,
        ignored_vulnerabilities: List[ScaIgnoredVulnerability] = None,
    ):
        if minimum_severity is not None:
            self.minimum_severity = self._enum_matching(
                minimum_severity, SeverityEnum.list(), "minimum_severity"
            )
        if ignored_vulnerabilities is not None:
            self.ignored_vulnerabilities = self._define_list(
                ignored_vulnerabilities, ScaIgnoredVulnerability
            )
