# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .api_token_type_enum import ApiTokenTypeEnum
from .api_token_status_enum import ApiTokenStatusEnum
from .api_token_scope_enum import ApiTokenScopeEnum


@JsonMap({"id_": "id", "type_": "type"})
class ApiTokenDetails(BaseModel):
    """Details of an API Token

    :param id_: Id of API token, defaults to None
    :type id_: str, optional
    :param name: Name of API token, defaults to None
    :type name: str, optional
    :param workspace_id: Workspace id, defaults to None
    :type workspace_id: int, optional
    :param type_: type_, defaults to None
    :type type_: ApiTokenTypeEnum, optional
    :param status: status, defaults to None
    :type status: ApiTokenStatusEnum, optional
    :param created_at: Creation date of the API token, defaults to None
    :type created_at: str, optional
    :param last_used_at: Last usage of the API token, defaults to None
    :type last_used_at: str, optional
    :param expire_at: Expiration date of the API token, defaults to None
    :type expire_at: str, optional
    :param revoked_at: Revocation date of the API token, defaults to None
    :type revoked_at: str, optional
    :param member_id: Member id, defaults to None
    :type member_id: int, optional
    :param creator_id: Creator id, defaults to None
    :type creator_id: int, optional
    :param scopes: List of scopes, defaults to None
    :type scopes: List[ApiTokenScopeEnum], optional
    """

    def __init__(
        self,
        id_: str = None,
        name: str = None,
        workspace_id: int = None,
        type_: ApiTokenTypeEnum = None,
        status: ApiTokenStatusEnum = None,
        created_at: str = None,
        last_used_at: str = None,
        expire_at: str = None,
        revoked_at: str = None,
        member_id: int = None,
        creator_id: int = None,
        scopes: List[ApiTokenScopeEnum] = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if name is not None:
            self.name = name
        if workspace_id is not None:
            self.workspace_id = workspace_id
        if type_ is not None:
            self.type_ = self._enum_matching(type_, ApiTokenTypeEnum.list(), "type_")
        if status is not None:
            self.status = self._enum_matching(
                status, ApiTokenStatusEnum.list(), "status"
            )
        if created_at is not None:
            self.created_at = created_at
        if last_used_at is not None:
            self.last_used_at = last_used_at
        if expire_at is not None:
            self.expire_at = expire_at
        if revoked_at is not None:
            self.revoked_at = revoked_at
        if member_id is not None:
            self.member_id = member_id
        if creator_id is not None:
            self.creator_id = creator_id
        if scopes is not None:
            self.scopes = self._define_list(scopes, ApiTokenScopeEnum)
