# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({})
class Content(BaseModel):
    """Content

    :param count: count, defaults to None
    :type count: int, optional
    :param limit: limit, defaults to None
    :type limit: int, optional
    :param remaining: remaining, defaults to None
    :type remaining: int, optional
    :param since: since, defaults to None
    :type since: str, optional
    """

    def __init__(
        self,
        count: int = None,
        limit: int = None,
        remaining: int = None,
        since: str = None,
    ):
        if count is not None:
            self.count = count
        if limit is not None:
            self.limit = limit
        if remaining is not None:
            self.remaining = remaining
        if since is not None:
            self.since = since


@JsonMap({})
class Quota(BaseModel):
    """Quota

    :param content: content
    :type content: Content
    """

    def __init__(self, content: Content):
        self.content = self._define_object(content, Content)
