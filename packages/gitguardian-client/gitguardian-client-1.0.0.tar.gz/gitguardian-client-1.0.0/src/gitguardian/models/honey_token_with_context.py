# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({})
class HoneyTokenWithContext(BaseModel):
    """HoneyTokenWithContext

    :param content: content, defaults to None
    :type content: str, optional
    :param filepath: filepath, defaults to None
    :type filepath: str, optional
    :param language: language, defaults to None
    :type language: str, optional
    :param suggested_commit_message: Suggestion of a commit message to use, defaults to None
    :type suggested_commit_message: str, optional
    :param honeytoken_id: honeytoken_id, defaults to None
    :type honeytoken_id: str, optional
    :param gitguardian_url: URL of the honeytoken on the dashboard, defaults to None
    :type gitguardian_url: str, optional
    """

    def __init__(
        self,
        content: str = None,
        filepath: str = None,
        language: str = None,
        suggested_commit_message: str = None,
        honeytoken_id: str = None,
        gitguardian_url: str = None,
    ):
        if content is not None:
            self.content = content
        if filepath is not None:
            self.filepath = filepath
        if language is not None:
            self.language = language
        if suggested_commit_message is not None:
            self.suggested_commit_message = suggested_commit_message
        if honeytoken_id is not None:
            self.honeytoken_id = honeytoken_id
        if gitguardian_url is not None:
            self.gitguardian_url = gitguardian_url
