# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({})
class IncidentToken(BaseModel):
    """IncidentToken

    :param share_url: share_url, defaults to None
    :type share_url: str, optional
    :param incident_id: incident_id, defaults to None
    :type incident_id: int, optional
    :param feedback_collection: Allow the developer to submit their feedback through the share link, defaults to None
    :type feedback_collection: bool, optional
    :param auto_healing: Allow the developer to resolve or ignore through the share link, defaults to None
    :type auto_healing: bool, optional
    :param token: token, defaults to None
    :type token: str, optional
    :param expire_at: expire_at, defaults to None
    :type expire_at: str, optional
    :param revoked_at: revoked_at, defaults to None
    :type revoked_at: str, optional
    """

    def __init__(
        self,
        share_url: str = None,
        incident_id: int = None,
        feedback_collection: bool = None,
        auto_healing: bool = None,
        token: str = None,
        expire_at: str = None,
        revoked_at: str = None,
    ):
        if share_url is not None:
            self.share_url = share_url
        if incident_id is not None:
            self.incident_id = incident_id
        if feedback_collection is not None:
            self.feedback_collection = feedback_collection
        if auto_healing is not None:
            self.auto_healing = auto_healing
        if token is not None:
            self.token = token
        if expire_at is not None:
            self.expire_at = expire_at
        if revoked_at is not None:
            self.revoked_at = revoked_at
