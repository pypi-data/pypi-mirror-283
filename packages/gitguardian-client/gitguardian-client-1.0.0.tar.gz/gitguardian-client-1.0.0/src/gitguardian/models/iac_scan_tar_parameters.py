# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .severity_enum_iac import SeverityEnumIac


@JsonMap({})
class IacScanTarParameters(BaseModel):
    """IacScanTarParameters

    :param minimum_severity: minimum_severity, defaults to None
    :type minimum_severity: SeverityEnumIac, optional
    :param ignored_policies: ignored_policies, defaults to None
    :type ignored_policies: List[str], optional
    """

    def __init__(
        self,
        minimum_severity: SeverityEnumIac = None,
        ignored_policies: List[str] = None,
    ):
        if minimum_severity is not None:
            self.minimum_severity = self._enum_matching(
                minimum_severity, SeverityEnumIac.list(), "minimum_severity"
            )
        if ignored_policies is not None:
            self.ignored_policies = ignored_policies
