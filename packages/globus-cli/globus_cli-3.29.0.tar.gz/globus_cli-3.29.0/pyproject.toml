[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "globus-cli"
description = "Globus CLI"
readme = "README.rst"
authors = [
    { name = "Stephen Rosen", email = "sirosen@globus.org" },
]
keywords = [
    "globus",
    "cli",
    "command line",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "globus-sdk==3.41.0",
    "click>=8.1.4,<9",
    "jmespath==1.0.1",
    "packaging>=17.0",
    "typing_extensions>=4.0;python_version<'3.11'",
    # these are dependencies of the SDK, but they are used directly in the CLI
    # declare them here in case the underlying lib ever changes
    "requests>=2.19.1,<3.0.0",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/globus/globus-cli"

[project.optional-dependencies]
test = [
    "coverage>=7",
    "pytest>=7",
    "pytest-xdist<4",
    "pytest-timeout<3",
    "click-type-test==0.0.7;python_version>='3.10'",
    "responses==0.25.3",
    # loading test fixture data
    "ruamel.yaml==0.18.6",
    # Python 3.12 needs setuptools.
    "setuptools;python_version>='3.12'",
]

[project.scripts]
globus = "globus_cli:main"

[tool.setuptools.dynamic.version]
attr = "globus_cli.version.__version__"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "--timeout 3"
filterwarnings = ["error"]

[tool.scriv]
version = "literal: src/globus_cli/version.py: __version__"
categories = "Bugfixes, Enhancements, Other"
# we're using adoc, we'll produce fragments as 'md' and "fix" later
format = "md"
output_file = "changelog.adoc"
entry_title_template = '{{ version }} ({{ date.strftime("%Y-%m-%d") }})'

[tool.mypy]
# the desired config here is
#   strict=true
# however, strict=true does not play well with overrides (used below)
# therefore, we explicitly declare a number of options which approach
# `strict=true` in effect
warn_unused_configs = true

# TODO: enable disallow_any_generics (currently fails)
# disallow_any_generics = true
disallow_subclassing_any = true

# do not disallow_untyped_calls, as we have untyped defs of our own
# this rule causes too much chaos at present
#
# disallow_untyped_calls = true

disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

# additional settings (not part of strict=true)
warn_unreachable = true

[[tool.mypy.overrides]]
disallow_untyped_defs = false
disallow_incomplete_defs = false
module = [
    "globus_cli.services.gcs",
    "globus_cli.services.transfer.recursive_ls",
    "globus_cli.termio",
    "globus_cli.termio.printer",
    "globus_cli.termio.awscli_text",
]
