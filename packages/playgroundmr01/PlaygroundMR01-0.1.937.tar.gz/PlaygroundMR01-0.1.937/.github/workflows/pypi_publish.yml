# This file is autogenerated by maturin v0.14.17
# To update, run
#
#    maturin generate-ci github -o .github/workflows/pypi_publish.yml
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions: write-all
  #contents: write-all

jobs:
  # Preliminary job to update Cargo files
  update-cargo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install or update cargo-edit
      - name: Install cargo-edit
        run: |
          cargo install --force cargo-edit

      # Add cargo binaries to PATH
      - name: Add cargo binaries to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      # Update Cargo.toml Version
      - name: Update Cargo.toml Version
        run: |
          chmod +x Update_Cargo_version.sh
          ./Update_Cargo_version.sh

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Accessing the secret
        run: |
          git config --local user.email "playgroundmr0@gmail.com"
          git config --local user.name "playground-mr0"
          git add .
          git commit -m "Automated commit"
          git push origin $GITHUB_REF
  linux:
    needs: update-cargo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      # Ensure latest version of Cargo files
      - name: Fetch latest changes
        run: git pull origin $GITHUB_REF
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    needs: update-cargo
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      # Ensure latest version of Cargo files
      - name: Fetch latest changes
        run: git pull origin $GITHUB_REF
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    needs: update-cargo
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      # Ensure latest version of Cargo files
      - name: Fetch latest changes
        run: git pull origin $GITHUB_REF
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    needs: update-cargo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Ensure latest version of Cargo files
      - name: Fetch latest changes
        run: git pull origin $GITHUB_REF
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    # if: "startsWith(github.ref, 'refs/tags/')"
    needs: [update-cargo, linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
