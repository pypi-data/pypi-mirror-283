Metadata-Version: 2.1
Name: onomatopoeia
Version: 1.3.0
Summary: Partybiz
License: GPL-3.0-only
Keywords: documentation
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: biotech (>=1.0.3,<2.0.0)
Requires-Dist: click (>=8.1.7,<9.0.0)
Requires-Dist: flask (>=3.0.3,<4.0.0)
Requires-Dist: jsonschema (>=4.21.1,<5.0.0)
Requires-Dist: law-dictionary (>=1.0.11,<2.0.0)
Requires-Dist: mako (>=1.3.3,<2.0.0)
Requires-Dist: rich (>=13.7.1,<14.0.0)
Requires-Dist: sanic (>=23.12.1,<24.0.0)
Project-URL: GitLab, https://gitlab.com/offline-money/squash-1/onomatopoeia
Description-Content-Type: text/markdown




----

Bravo!  You have received a Mercantilism Diploma in "onomatopoeia" from   
the Orbital Convergence University International Air and Water 
Embassy of the Tangerine Planet (the planet that is one ellipse further from
the Sun than Earth's ellipse).

You are now officially certified to include "onomatopoeia" in your practice!

Encore! Encore! Encore! Encore!

----


# onomatopoeia

----

## description
Started from the shell, "onomatopoeia" presents files in the current working    
directory (CWD) that have extension ".O.HTML" (case sensitive).

----		
	
## obtainment
`[xonsh] pip install onomatopoeia`

----

## tutorial
`[xonsh] onomatopoeia help`

----	


## the shell interface
`[xonsh] onomatopoeia`

"onomatopoeia" starts on port 20000, or the first avaible port after that.  
 * Running on http://127.0.0.1:20000  

This is the equivalent of:   
`[xonsh] onomatopoeia start --port 20000`   

----
  
Alternatively you can add `--static-port` and "onomatopoeia"   
stops if the port specified is unavailable.  
`[xonsh] onomatopoeia start --port 20000 --static-port`   

----

### This is an example ".O.HTML" file.


```
<pre>
	<h1>This is an example HTML file.</h1>
	<p>
		It really only needs the "pre" tag to    
		look like a reflection of its contents in a browser.   
	</p>   
	<p>
		Tags like "html" and "body" are actually not   
		necessary for rendering HTML in modern browsers.  
	</p>   
	<p>  
		for text to wrap, instead of extending off the page,    
		style "white-space: pre-wrap" can be utilized instead of 
		a "pre" tag like so:
		
		<div style="white-space: pre-wrap"></div>
	</p>
</pre>
```


However, here is the "CSS1Compat" option,   
[https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode](https://developer.mozilla.org/en-US/docs/Web/HTML/Quirks_Mode_and_Standards_Mode)   

with scaling based on the browser screen "viewport" of the screen,  
[https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Viewport_meta_tag)  

and support for UTF-8 characters.    
[http://www.unicode.org/charts](http://www.unicode.org/charts)    
[https://www.w3.org/International/questions/qa-html-encoding-declarations]([https://www.w3.org/International/questions/qa-html-encoding-declarations])     



```
<!doctype html>
<html>
	<head>	
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
	</head>
	<body>
		<main>
			<article style="white-space: pre-wrap">
				
			
			</article>
		</main>
	</body>
</html>
```

---

## the python3 interface
```
import pathlib
from os.path import dirname, join, normpath
this_folder = pathlib.Path (__file__).parent.resolve ()

import onomatopoeia
onomatopoeia.start ({
	"extensions": [ 
		'.O.HTML',
		'.S.HTML',
		'.$.HTML',
		'.s.HTML',
		'.6.HTML',
		'.jpg', 
		'.png' 
	],
	
	#
	#	This is the node from which the traversal occur.
	#
	"directory": str (this_folder) + "/structures/onomatopoeia",
	
	#
	#	This path is removed from the absolute path of share files found.
	#
	"relative path": str (this_folder) + "/structures/onomatopoeia",
	
	
	#
	#	The first port to check
	#
	"port": 20000,
	
	#
	#	Whether to check more ports if port is unavailable
	#
	"static port": False,
	
	#
	#	0, 1, 2
	#
	"verbose": 1,
})

import time
while True:
	time.sleep (1000)
```

---

## contacts
graceful.bryonics@proton.me


