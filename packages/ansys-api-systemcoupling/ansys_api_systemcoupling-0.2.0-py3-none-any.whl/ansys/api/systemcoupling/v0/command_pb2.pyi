"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ansys.api.systemcoupling.v0.variant_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CommandRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Argument(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        VAL_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        @property
        def val(self) -> ansys.api.systemcoupling.v0.variant_pb2.Variant: ...
        def __init__(self,
            *,
            name : typing.Text = ...,
            val : typing.Optional[ansys.api.systemcoupling.v0.variant_pb2.Variant] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["val",b"val"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["name",b"name","val",b"val"]) -> None: ...

    COMMAND_FIELD_NUMBER: builtins.int
    ARGS_FIELD_NUMBER: builtins.int
    command: typing.Text = ...
    @property
    def args(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CommandRequest.Argument]: ...
    def __init__(self,
        *,
        command : typing.Text = ...,
        args : typing.Optional[typing.Iterable[global___CommandRequest.Argument]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["args",b"args","command",b"command"]) -> None: ...
global___CommandRequest = CommandRequest

class CommandResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> ansys.api.systemcoupling.v0.variant_pb2.Variant: ...
    def __init__(self,
        *,
        result : typing.Optional[ansys.api.systemcoupling.v0.variant_pb2.Variant] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["result",b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["result",b"result"]) -> None: ...
global___CommandResponse = CommandResponse
