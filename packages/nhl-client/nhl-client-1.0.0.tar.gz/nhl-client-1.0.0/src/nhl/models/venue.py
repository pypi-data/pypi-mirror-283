# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"id_": "id"})
class TimeZone(BaseModel):
    """TimeZone

    :param id_: id_, defaults to None
    :type id_: str, optional
    :param offset: offset, defaults to None
    :type offset: float, optional
    :param tz: tz, defaults to None
    :type tz: str, optional
    """

    def __init__(self, id_: str = None, offset: float = None, tz: str = None):
        if id_ is not None:
            self.id_ = id_
        if offset is not None:
            self.offset = offset
        if tz is not None:
            self.tz = tz


@JsonMap({"time_zone": "timeZone"})
class Venue(BaseModel):
    """Venue

    :param name: name, defaults to None
    :type name: str, optional
    :param link: link, defaults to None
    :type link: str, optional
    :param city: city, defaults to None
    :type city: str, optional
    :param time_zone: time_zone, defaults to None
    :type time_zone: TimeZone, optional
    """

    def __init__(
        self,
        name: str = None,
        link: str = None,
        city: str = None,
        time_zone: TimeZone = None,
    ):
        if name is not None:
            self.name = name
        if link is not None:
            self.link = link
        if city is not None:
            self.city = city
        if time_zone is not None:
            self.time_zone = self._define_object(time_zone, TimeZone)
