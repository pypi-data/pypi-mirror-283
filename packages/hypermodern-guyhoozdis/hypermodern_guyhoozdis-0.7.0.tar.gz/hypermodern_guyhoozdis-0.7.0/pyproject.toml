[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/legacy/"
priority = "explicit"


[tool.poetry]
name = "hypermodern-guyhoozdis"
version = "0.7.0"
description = "A template package based on The Hypermodern Project"
authors = ["Guy Hoozdis <GuyHoozdis@users.noreply.github.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/guyhoozdis/hypermodern-python"
repository = "https://github.com/guyhoozdis/hypermodern-python"
documentation = "https://hypermodern-guyhoozdis.readthedocs.io"
keywords = ["hypermodern", "template", "package", "guyhoozdis"]


[tool.poetry.dependencies]
python = ">=3.8.1,<3.13"
click = "^8.1.7"
requests = "^2.32.3"
desert = "^2022.9.22"
marshmallow = "^3.21.3"


[tool.poetry.group.dev.dependencies]
ipython = "*"
ipdb = "^0.13.13"
pytest = "^8.2.2"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
coverage = {extras = ["toml"], version = "^7.5.3"}
xdoctest = "^1.1.5"
codecov = "^2.1.13"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = [
  {version = "^7.3.7", python = "^3.9"},
  {version = "*", python = "<3.9"},
]
sphinx-autodoc-typehints = [
  {version = "^2.2.2", python = "^3.9"},
  {version = "*", python = "<3.9"},
]
furo = "^2024.5.6"


[tool.poetry.group.mypy]
optional = true

[tool.poetry.group.mypy.dependencies]
mypy = "^1.10.0"
typeguard = "^4.3.0"
types-requests = "^2.32.0.20240622"


[tool.poetry.group.black]
optional = true

[tool.poetry.group.black.dependencies]
black = "^24.4.2"


[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
flake8 = "^7.1.0"
flake8-annotations = "^3.1.1"
flake8-docstrings = "^1.7.0"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.6"
flake8-bugbear = "^24.4.26"
flake8-import-order = "^0.18.2"
darglint = "^1.8.1"


[tool.poetry.scripts]
hypermodern-guyhoozdis = "hypermodern_guyhoozdis.console:main"


[tool.coverage.paths]
source = ["src", "*/site-packages"]


[tool.coverage.run]
branch = true
source = ["hypermodern_guyhoozdis"]
omit = [
  "__main__.py"
]


[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_also = [
  "__name__ == .__main__.:",
]
