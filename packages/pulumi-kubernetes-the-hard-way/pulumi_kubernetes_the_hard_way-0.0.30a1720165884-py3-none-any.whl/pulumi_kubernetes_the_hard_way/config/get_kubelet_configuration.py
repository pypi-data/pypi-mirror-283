# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetKubeletConfigurationResult',
    'AwaitableGetKubeletConfigurationResult',
    'get_kubelet_configuration',
    'get_kubelet_configuration_output',
]

@pulumi.output_type
class GetKubeletConfigurationResult:
    """
    Get the kubelet configuration.
    """
    def __init__(__self__, result=None):
        if result and not isinstance(result, dict):
            raise TypeError("Expected argument 'result' to be a dict")
        pulumi.set(__self__, "result", result)

    @property
    @pulumi.getter
    def result(self) -> 'outputs.KubeletConfiguration':
        return pulumi.get(self, "result")


class AwaitableGetKubeletConfigurationResult(GetKubeletConfigurationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetKubeletConfigurationResult(
            result=self.result)


def get_kubelet_configuration(anonymous: Optional[bool] = None,
                              authorization_mode: Optional[str] = None,
                              cgroup_driver: Optional[str] = None,
                              client_ca_file: Optional[str] = None,
                              cluster_dns: Optional[Sequence[str]] = None,
                              cluster_domain: Optional[str] = None,
                              container_runtime_endpoint: Optional[str] = None,
                              pod_cidr: Optional[str] = None,
                              resolv_conf: Optional[str] = None,
                              runtime_request_timeout: Optional[str] = None,
                              tls_cert_file: Optional[str] = None,
                              tls_private_key_file: Optional[str] = None,
                              webhook: Optional[bool] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetKubeletConfigurationResult:
    """
    Get the kubelet configuration.
    """
    __args__ = dict()
    __args__['anonymous'] = anonymous
    __args__['authorizationMode'] = authorization_mode
    __args__['cgroupDriver'] = cgroup_driver
    __args__['clientCAFile'] = client_ca_file
    __args__['clusterDNS'] = cluster_dns
    __args__['clusterDomain'] = cluster_domain
    __args__['containerRuntimeEndpoint'] = container_runtime_endpoint
    __args__['podCIDR'] = pod_cidr
    __args__['resolvConf'] = resolv_conf
    __args__['runtimeRequestTimeout'] = runtime_request_timeout
    __args__['tlsCertFile'] = tls_cert_file
    __args__['tlsPrivateKeyFile'] = tls_private_key_file
    __args__['webhook'] = webhook
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('kubernetes-the-hard-way:config:getKubeletConfiguration', __args__, opts=opts, typ=GetKubeletConfigurationResult).value

    return AwaitableGetKubeletConfigurationResult(
        result=pulumi.get(__ret__, 'result'))


@_utilities.lift_output_func(get_kubelet_configuration)
def get_kubelet_configuration_output(anonymous: Optional[pulumi.Input[Optional[bool]]] = None,
                                     authorization_mode: Optional[pulumi.Input[Optional[str]]] = None,
                                     cgroup_driver: Optional[pulumi.Input[Optional[str]]] = None,
                                     client_ca_file: Optional[pulumi.Input[Optional[str]]] = None,
                                     cluster_dns: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                                     cluster_domain: Optional[pulumi.Input[Optional[str]]] = None,
                                     container_runtime_endpoint: Optional[pulumi.Input[Optional[str]]] = None,
                                     pod_cidr: Optional[pulumi.Input[str]] = None,
                                     resolv_conf: Optional[pulumi.Input[Optional[str]]] = None,
                                     runtime_request_timeout: Optional[pulumi.Input[Optional[str]]] = None,
                                     tls_cert_file: Optional[pulumi.Input[Optional[str]]] = None,
                                     tls_private_key_file: Optional[pulumi.Input[Optional[str]]] = None,
                                     webhook: Optional[pulumi.Input[Optional[bool]]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetKubeletConfigurationResult]:
    """
    Get the kubelet configuration.
    """
    ...
