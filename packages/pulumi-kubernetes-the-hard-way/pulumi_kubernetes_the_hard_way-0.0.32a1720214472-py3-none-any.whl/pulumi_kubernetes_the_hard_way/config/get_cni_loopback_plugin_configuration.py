# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetCniLoopbackPluginConfigurationResult',
    'AwaitableGetCniLoopbackPluginConfigurationResult',
    'get_cni_loopback_plugin_configuration',
    'get_cni_loopback_plugin_configuration_output',
]

@pulumi.output_type
class GetCniLoopbackPluginConfigurationResult:
    """
    Get the `loopback` configuration.
    """
    def __init__(__self__, result=None):
        if result and not isinstance(result, dict):
            raise TypeError("Expected argument 'result' to be a dict")
        pulumi.set(__self__, "result", result)

    @property
    @pulumi.getter
    def result(self) -> 'outputs.CniLoopbackPluginConfiguration':
        return pulumi.get(self, "result")


class AwaitableGetCniLoopbackPluginConfigurationResult(GetCniLoopbackPluginConfigurationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCniLoopbackPluginConfigurationResult(
            result=self.result)


def get_cni_loopback_plugin_configuration(cni_version: Optional[str] = None,
                                          name: Optional[str] = None,
                                          type: Optional[str] = None,
                                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCniLoopbackPluginConfigurationResult:
    """
    Get the `loopback` configuration.


    :param str cni_version: CNI version.
    :param str name: CNI plugin name.
    :param str type: CNI plugin type.
    """
    __args__ = dict()
    __args__['cniVersion'] = cni_version
    __args__['name'] = name
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('kubernetes-the-hard-way:config:getCniLoopbackPluginConfiguration', __args__, opts=opts, typ=GetCniLoopbackPluginConfigurationResult).value

    return AwaitableGetCniLoopbackPluginConfigurationResult(
        result=pulumi.get(__ret__, 'result'))


@_utilities.lift_output_func(get_cni_loopback_plugin_configuration)
def get_cni_loopback_plugin_configuration_output(cni_version: Optional[pulumi.Input[Optional[str]]] = None,
                                                 name: Optional[pulumi.Input[Optional[str]]] = None,
                                                 type: Optional[pulumi.Input[Optional[str]]] = None,
                                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCniLoopbackPluginConfigurationResult]:
    """
    Get the `loopback` configuration.


    :param str cni_version: CNI version.
    :param str name: CNI plugin name.
    :param str type: CNI plugin type.
    """
    ...
