# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class RemoveLineResponseType(Enum):
    """An enumeration representing different categories.

    :cvar HARDPHONE: "HardPhone"
    :vartype HARDPHONE: str
    :cvar SOFTPHONE: "SoftPhone"
    :vartype SOFTPHONE: str
    :cvar OTHERPHONE: "OtherPhone"
    :vartype OTHERPHONE: str
    :cvar MOBILEDEVICE: "MobileDevice"
    :vartype MOBILEDEVICE: str
    :cvar BLA: "BLA"
    :vartype BLA: str
    :cvar PAGING: "Paging"
    :vartype PAGING: str
    :cvar WEBPHONE: "WebPhone"
    :vartype WEBPHONE: str
    :cvar WEBRTC: "WebRTC"
    :vartype WEBRTC: str
    :cvar ZOOMMOBILE: "ZoomMobile"
    :vartype ZOOMMOBILE: str
    :cvar ZOOMPHONE: "ZoomPhone"
    :vartype ZOOMPHONE: str
    :cvar ROOM: "Room"
    :vartype ROOM: str
    :cvar UNKNOWN: "Unknown"
    :vartype UNKNOWN: str
    """

    HARDPHONE = "HardPhone"
    SOFTPHONE = "SoftPhone"
    OTHERPHONE = "OtherPhone"
    MOBILEDEVICE = "MobileDevice"
    BLA = "BLA"
    PAGING = "Paging"
    WEBPHONE = "WebPhone"
    WEBRTC = "WebRTC"
    ZOOMMOBILE = "ZoomMobile"
    ZOOMPHONE = "ZoomPhone"
    ROOM = "Room"
    UNKNOWN = "Unknown"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, RemoveLineResponseType._member_map_.values())
        )


@JsonMap({"id_": "id", "type_": "type"})
class RemoveLineResponse(BaseModel):
    """RemoveLineResponse

    :param id_: Internal identifier of a source device
    :type id_: str
    :param type_: Device type
    :type type_: RemoveLineResponseType
    :param name: The display name of a source device
    :type name: str
    :param serial: Serial number of a device (HardPhone), defaults to None
    :type serial: str, optional
    """

    def __init__(
        self, id_: str, type_: RemoveLineResponseType, name: str, serial: str = None
    ):
        self.id_ = id_
        self.type_ = self._enum_matching(type_, RemoveLineResponseType.list(), "type_")
        self.name = name
        if serial is not None:
            self.serial = serial
