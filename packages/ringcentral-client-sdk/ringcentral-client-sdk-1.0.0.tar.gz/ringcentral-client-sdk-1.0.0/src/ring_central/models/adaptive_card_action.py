# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel
from .action_adaptive_card_info import ActionAdaptiveCardInfo


class AdaptiveCardActionType(Enum):
    """An enumeration representing different categories.

    :cvar ACTION_SHOWCARD: "Action.ShowCard"
    :vartype ACTION_SHOWCARD: str
    :cvar ACTION_SUBMIT: "Action.Submit"
    :vartype ACTION_SUBMIT: str
    :cvar ACTION_OPENURL: "Action.OpenUrl"
    :vartype ACTION_OPENURL: str
    :cvar ACTION_TOGGLEVISIBILITY: "Action.ToggleVisibility"
    :vartype ACTION_TOGGLEVISIBILITY: str
    """

    ACTION_SHOWCARD = "Action.ShowCard"
    ACTION_SUBMIT = "Action.Submit"
    ACTION_OPENURL = "Action.OpenUrl"
    ACTION_TOGGLEVISIBILITY = "Action.ToggleVisibility"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, AdaptiveCardActionType._member_map_.values())
        )


@JsonMap({"type_": "type"})
class AdaptiveCardAction(BaseModel):
    """AdaptiveCardAction

    :param type_: type_, defaults to None
    :type type_: AdaptiveCardActionType, optional
    :param title: title, defaults to None
    :type title: str, optional
    :param card: card, defaults to None
    :type card: ActionAdaptiveCardInfo, optional
    :param url: url, defaults to None
    :type url: str, optional
    """

    def __init__(
        self,
        type_: AdaptiveCardActionType = None,
        title: str = None,
        card: ActionAdaptiveCardInfo = None,
        url: str = None,
    ):
        if type_ is not None:
            self.type_ = self._enum_matching(
                type_, AdaptiveCardActionType.list(), "type_"
            )
        if title is not None:
            self.title = title
        if card is not None:
            self.card = self._define_object(card, ActionAdaptiveCardInfo)
        if url is not None:
            self.url = url
