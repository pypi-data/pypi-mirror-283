# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "send_welcome_emails_to_users": "sendWelcomeEmailsToUsers",
        "send_welcome_email": "sendWelcomeEmail",
    }
)
class UserTransitionInfo(BaseModel):
    """For NotActivated extensions only. Welcome email settings


    :param send_welcome_emails_to_users: Specifies if a welcome/activation email is sent to the existing<br>users during account confirmation<br>, defaults to None
    :type send_welcome_emails_to_users: bool, optional
    :param send_welcome_email: Specifies if a welcome/activation email is sent to the new users (within extension status changing from<br>'Unassigned' to 'NotActivated/Disabled')<br>, defaults to None
    :type send_welcome_email: bool, optional
    """

    def __init__(
        self, send_welcome_emails_to_users: bool = None, send_welcome_email: bool = None
    ):
        if send_welcome_emails_to_users is not None:
            self.send_welcome_emails_to_users = send_welcome_emails_to_users
        if send_welcome_email is not None:
            self.send_welcome_email = send_welcome_email
