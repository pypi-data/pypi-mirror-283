# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"plain_text": "plainText", "join_query": "joinQuery"})
class BridgeResponseSecurityPassword(BaseModel):
    """BridgeResponseSecurityPassword

    :param plain_text: Meeting password.<br>This field will be returned only if the request was done by bridge owner, his delegate or any user who has<br>the Super Admin privilege.<br>, defaults to None
    :type plain_text: str, optional
    :param pstn: Meeting password for PSTN users.<br>This field will be returned only if the request was done by bridge owner, his delegate or any user who has<br>the Super Admin privilege.<br>, defaults to None
    :type pstn: str, optional
    :param join_query: Meeting password hash.<br>This field will be returned only if the request was done by bridge owner, his delegate or any user who has<br>the Super Admin privilege.<br>, defaults to None
    :type join_query: str, optional
    """

    def __init__(
        self, plain_text: str = None, pstn: str = None, join_query: str = None
    ):
        if plain_text is not None:
            self.plain_text = plain_text
        if pstn is not None:
            self.pstn = pstn
        if join_query is not None:
            self.join_query = join_query
