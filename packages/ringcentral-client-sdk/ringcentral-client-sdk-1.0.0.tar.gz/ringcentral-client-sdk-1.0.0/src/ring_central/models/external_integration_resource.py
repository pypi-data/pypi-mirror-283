# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "id_": "id",
        "type_id": "typeId",
        "type_": "type",
        "display_name": "displayName",
        "routing_type": "routingType",
        "outbound_edge_id": "outboundEdgeId",
    }
)
class ExternalIntegrationResource(BaseModel):
    """ExternalIntegrationResource

    :param id_: id_, defaults to None
    :type id_: str, optional
    :param type_id: type_id, defaults to None
    :type type_id: str, optional
    :param type_: type_, defaults to None
    :type type_: str, optional
    :param display_name: display_name, defaults to None
    :type display_name: str, optional
    :param routing_type: routing_type, defaults to None
    :type routing_type: str, optional
    :param outbound_edge_id: outbound_edge_id, defaults to None
    :type outbound_edge_id: str, optional
    """

    def __init__(
        self,
        id_: str = None,
        type_id: str = None,
        type_: str = None,
        display_name: str = None,
        routing_type: str = None,
        outbound_edge_id: str = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if type_id is not None:
            self.type_id = type_id
        if type_ is not None:
            self.type_ = type_
        if display_name is not None:
            self.display_name = display_name
        if routing_type is not None:
            self.routing_type = routing_type
        if outbound_edge_id is not None:
            self.outbound_edge_id = outbound_edge_id
