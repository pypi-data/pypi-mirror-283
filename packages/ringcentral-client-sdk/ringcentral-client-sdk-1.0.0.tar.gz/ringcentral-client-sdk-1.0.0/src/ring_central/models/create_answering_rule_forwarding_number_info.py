# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class CreateAnsweringRuleForwardingNumberInfoType(Enum):
    """An enumeration representing different categories.

    :cvar HOME: "Home"
    :vartype HOME: str
    :cvar MOBILE: "Mobile"
    :vartype MOBILE: str
    :cvar WORK: "Work"
    :vartype WORK: str
    :cvar PHONELINE: "PhoneLine"
    :vartype PHONELINE: str
    :cvar OUTAGE: "Outage"
    :vartype OUTAGE: str
    :cvar OTHER: "Other"
    :vartype OTHER: str
    :cvar BUSINESSMOBILEPHONE: "BusinessMobilePhone"
    :vartype BUSINESSMOBILEPHONE: str
    :cvar EXTERNALCARRIER: "ExternalCarrier"
    :vartype EXTERNALCARRIER: str
    :cvar EXTENSIONAPPS: "ExtensionApps"
    :vartype EXTENSIONAPPS: str
    """

    HOME = "Home"
    MOBILE = "Mobile"
    WORK = "Work"
    PHONELINE = "PhoneLine"
    OUTAGE = "Outage"
    OTHER = "Other"
    BUSINESSMOBILEPHONE = "BusinessMobilePhone"
    EXTERNALCARRIER = "ExternalCarrier"
    EXTENSIONAPPS = "ExtensionApps"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                CreateAnsweringRuleForwardingNumberInfoType._member_map_.values(),
            )
        )


@JsonMap({"id_": "id", "phone_number": "phoneNumber", "type_": "type"})
class CreateAnsweringRuleForwardingNumberInfo(BaseModel):
    """CreateAnsweringRuleForwardingNumberInfo

    :param id_: Internal identifier of a forwarding number, defaults to None
    :type id_: str, optional
    :param uri: Canonical URI of a forwarding/call flip phone number, defaults to None
    :type uri: str, optional
    :param phone_number: Forwarding/Call flip phone number, defaults to None
    :type phone_number: str, optional
    :param label: Forwarding/Call flip number title, defaults to None
    :type label: str, optional
    :param type_: Type of forwarding number, defaults to None
    :type type_: CreateAnsweringRuleForwardingNumberInfoType, optional
    """

    def __init__(
        self,
        id_: str = None,
        uri: str = None,
        phone_number: str = None,
        label: str = None,
        type_: CreateAnsweringRuleForwardingNumberInfoType = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if uri is not None:
            self.uri = uri
        if phone_number is not None:
            self.phone_number = phone_number
        if label is not None:
            self.label = label
        if type_ is not None:
            self.type_ = self._enum_matching(
                type_, CreateAnsweringRuleForwardingNumberInfoType.list(), "type_"
            )
