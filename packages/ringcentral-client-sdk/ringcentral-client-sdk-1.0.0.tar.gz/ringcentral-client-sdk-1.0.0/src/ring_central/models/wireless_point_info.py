# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .emergency_address_auto_update_site_info import EmergencyAddressAutoUpdateSiteInfo
from .emergency_address_info import EmergencyAddressInfo, EmergencyAddressInfoGuard
from .erl_location_info import ErlLocationInfo


@JsonMap(
    {
        "id_": "id",
        "emergency_address": "emergencyAddress",
        "emergency_location": "emergencyLocation",
        "emergency_location_id": "emergencyLocationId",
    }
)
class WirelessPointInfo(BaseModel):
    """WirelessPointInfo

    :param uri: Link to the wireless point resource, defaults to None
    :type uri: str, optional
    :param id_: Internal identifier of a wireless point, defaults to None
    :type id_: str, optional
    :param bssid: Unique 48-bit identifier of the wireless access point that follows MAC address conventions
    :type bssid: str
    :param name: Wireless access point name
    :type name: str
    :param site: site, defaults to None
    :type site: EmergencyAddressAutoUpdateSiteInfo, optional
    :param emergency_address: emergency_address
    :type emergency_address: EmergencyAddressInfo
    :param emergency_location: Emergency response location information, defaults to None
    :type emergency_location: ErlLocationInfo, optional
    :param emergency_location_id: Deprecated. Emergency response location (address) internal identifier. Only one of a pair `emergencyAddress` or `emergencyLocationId` should be specified, otherwise the error is returned, defaults to None
    :type emergency_location_id: str, optional
    """

    def __init__(
        self,
        bssid: str,
        name: str,
        emergency_address: EmergencyAddressInfo,
        uri: str = None,
        id_: str = None,
        site: EmergencyAddressAutoUpdateSiteInfo = None,
        emergency_location: ErlLocationInfo = None,
        emergency_location_id: str = None,
    ):
        if uri is not None:
            self.uri = uri
        if id_ is not None:
            self.id_ = id_
        self.bssid = bssid
        self.name = name
        if site is not None:
            self.site = self._define_object(site, EmergencyAddressAutoUpdateSiteInfo)
        self.emergency_address = EmergencyAddressInfoGuard.return_one_of(
            emergency_address
        )
        if emergency_location is not None:
            self.emergency_location = self._define_object(
                emergency_location, ErlLocationInfo
            )
        if emergency_location_id is not None:
            self.emergency_location_id = emergency_location_id
