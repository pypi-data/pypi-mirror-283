# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


class TmWebhookInfoStatus(Enum):
    """An enumeration representing different categories.

    :cvar ACTIVE: "Active"
    :vartype ACTIVE: str
    :cvar SUSPENDED: "Suspended"
    :vartype SUSPENDED: str
    :cvar DELETED: "Deleted"
    :vartype DELETED: str
    """

    ACTIVE = "Active"
    SUSPENDED = "Suspended"
    DELETED = "Deleted"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, TmWebhookInfoStatus._member_map_.values()))


@JsonMap(
    {
        "id_": "id",
        "creator_id": "creatorId",
        "group_ids": "groupIds",
        "creation_time": "creationTime",
        "last_modified_time": "lastModifiedTime",
    }
)
class TmWebhookInfo(BaseModel):
    """TmWebhookInfo

    :param id_: Internal identifier of a webhook, defaults to None
    :type id_: str, optional
    :param creator_id: Internal identifier of the user who created a webhook, defaults to None
    :type creator_id: str, optional
    :param group_ids: Internal identifiers of groups where a webhook has been created, defaults to None
    :type group_ids: List[str], optional
    :param creation_time: Webhook creation time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, defaults to None
    :type creation_time: str, optional
    :param last_modified_time: Webhook last update time in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, defaults to None
    :type last_modified_time: str, optional
    :param uri: Public link to send a webhook payload, defaults to None
    :type uri: str, optional
    :param status: Current status of a webhook, defaults to None
    :type status: TmWebhookInfoStatus, optional
    """

    def __init__(
        self,
        id_: str = None,
        creator_id: str = None,
        group_ids: List[str] = None,
        creation_time: str = None,
        last_modified_time: str = None,
        uri: str = None,
        status: TmWebhookInfoStatus = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if creator_id is not None:
            self.creator_id = creator_id
        if group_ids is not None:
            self.group_ids = group_ids
        if creation_time is not None:
            self.creation_time = creation_time
        if last_modified_time is not None:
            self.last_modified_time = last_modified_time
        if uri is not None:
            self.uri = uri
        if status is not None:
            self.status = self._enum_matching(
                status, TmWebhookInfoStatus.list(), "status"
            )
