# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .get_presence_info import GetPresenceInfo
from .presence_navigation_info import PresenceNavigationInfo
from .presence_paging_info import PresencePagingInfo


@JsonMap({})
class AccountPresenceInfo(BaseModel):
    """AccountPresenceInfo

    :param uri: Canonical URI of account presence resource, defaults to None
    :type uri: str, optional
    :param records: List of Prompts, defaults to None
    :type records: List[GetPresenceInfo], optional
    :param navigation: Information on navigation, defaults to None
    :type navigation: PresenceNavigationInfo, optional
    :param paging: Information on paging, defaults to None
    :type paging: PresencePagingInfo, optional
    """

    def __init__(
        self,
        uri: str = None,
        records: List[GetPresenceInfo] = None,
        navigation: PresenceNavigationInfo = None,
        paging: PresencePagingInfo = None,
    ):
        if uri is not None:
            self.uri = uri
        if records is not None:
            self.records = self._define_list(records, GetPresenceInfo)
        if navigation is not None:
            self.navigation = self._define_object(navigation, PresenceNavigationInfo)
        if paging is not None:
            self.paging = self._define_object(paging, PresencePagingInfo)
