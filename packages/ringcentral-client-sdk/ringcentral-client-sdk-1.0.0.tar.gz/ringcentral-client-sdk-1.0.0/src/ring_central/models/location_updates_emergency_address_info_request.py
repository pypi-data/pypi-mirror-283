# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "country_id": "countryId",
        "country_iso_code": "countryIsoCode",
        "country_name": "countryName",
        "customer_name": "customerName",
        "state_id": "stateId",
        "state_iso_code": "stateIsoCode",
        "state_name": "stateName",
    }
)
class LocationUpdatesEmergencyAddressInfoRequest(BaseModel):
    """Emergency address assigned to the switch. Only one of a pair `emergencyAddress`
    or `emergencyLocationId` should be specified, otherwise the error is returned


    :param country: Country name, defaults to None
    :type country: str, optional
    :param country_id: Internal identifier of a country, defaults to None
    :type country_id: str, optional
    :param country_iso_code: ISO code of a country, defaults to None
    :type country_iso_code: str, optional
    :param country_name: Full name of a country, defaults to None
    :type country_name: str, optional
    :param customer_name: Customer name, defaults to None
    :type customer_name: str, optional
    :param state: State/Province name. Mandatory for the USA, the UK and Canada, defaults to None
    :type state: str, optional
    :param state_id: Internal identifier of a state, defaults to None
    :type state_id: str, optional
    :param state_iso_code: ISO code of a state, defaults to None
    :type state_iso_code: str, optional
    :param state_name: Full name of a state, defaults to None
    :type state_name: str, optional
    :param city: City name, defaults to None
    :type city: str, optional
    :param street: First line address, defaults to None
    :type street: str, optional
    :param street2: Second line address (apartment, suite, unit, building, floor,<br>etc.)<br>, defaults to None
    :type street2: str, optional
    :param zip: Postal (Zip) code, defaults to None
    :type zip: str, optional
    """

    def __init__(
        self,
        country: str = None,
        country_id: str = None,
        country_iso_code: str = None,
        country_name: str = None,
        customer_name: str = None,
        state: str = None,
        state_id: str = None,
        state_iso_code: str = None,
        state_name: str = None,
        city: str = None,
        street: str = None,
        street2: str = None,
        zip: str = None,
    ):
        if country is not None:
            self.country = country
        if country_id is not None:
            self.country_id = country_id
        if country_iso_code is not None:
            self.country_iso_code = country_iso_code
        if country_name is not None:
            self.country_name = country_name
        if customer_name is not None:
            self.customer_name = customer_name
        if state is not None:
            self.state = state
        if state_id is not None:
            self.state_id = state_id
        if state_iso_code is not None:
            self.state_iso_code = state_iso_code
        if state_name is not None:
            self.state_name = state_name
        if city is not None:
            self.city = city
        if street is not None:
            self.street = street
        if street2 is not None:
            self.street2 = street2
        if zip is not None:
            self.zip = zip
