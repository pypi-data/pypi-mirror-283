# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .emergency_service_address_resource_request import (
    EmergencyServiceAddressResourceRequest,
)
from .device_emergency_info import DeviceEmergencyInfo
from .device_update_extension_info import DeviceUpdateExtensionInfo
from .device_update_phone_lines_info import DeviceUpdatePhoneLinesInfo


@JsonMap(
    {
        "emergency_service_address": "emergencyServiceAddress",
        "phone_lines": "phoneLines",
        "use_as_common_phone": "useAsCommonPhone",
    }
)
class AccountDeviceUpdate(BaseModel):
    """AccountDeviceUpdate

    :param emergency_service_address: Address for emergency cases. The same emergency address is assigned to all<br>numbers of a single device. If the emergency address is also specified in<br>`emergency` resource, then this value is ignored<br>, defaults to None
    :type emergency_service_address: EmergencyServiceAddressResourceRequest, optional
    :param emergency: Device emergency settings, defaults to None
    :type emergency: DeviceEmergencyInfo, optional
    :param extension: Information on extension that the device is assigned to, defaults to None
    :type extension: DeviceUpdateExtensionInfo, optional
    :param phone_lines: Information on phone lines added to a device, defaults to None
    :type phone_lines: DeviceUpdatePhoneLinesInfo, optional
    :param use_as_common_phone: Supported only for devices assigned to Limited extensions.<br>If true, enables users to log in to this phone as a common phone<br>, defaults to None
    :type use_as_common_phone: bool, optional
    :param name: Device label, maximum number of symbols is 64, defaults to None
    :type name: str, optional
    """

    def __init__(
        self,
        emergency_service_address: EmergencyServiceAddressResourceRequest = None,
        emergency: DeviceEmergencyInfo = None,
        extension: DeviceUpdateExtensionInfo = None,
        phone_lines: DeviceUpdatePhoneLinesInfo = None,
        use_as_common_phone: bool = None,
        name: str = None,
    ):
        if emergency_service_address is not None:
            self.emergency_service_address = self._define_object(
                emergency_service_address, EmergencyServiceAddressResourceRequest
            )
        if emergency is not None:
            self.emergency = self._define_object(emergency, DeviceEmergencyInfo)
        if extension is not None:
            self.extension = self._define_object(extension, DeviceUpdateExtensionInfo)
        if phone_lines is not None:
            self.phone_lines = self._define_object(
                phone_lines, DeviceUpdatePhoneLinesInfo
            )
        if use_as_common_phone is not None:
            self.use_as_common_phone = use_as_common_phone
        if name is not None:
            self.name = name
