# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .make_call_out_caller_info_request_from import MakeCallOutCallerInfoRequestFrom
from .make_call_out_caller_info_request_to import MakeCallOutCallerInfoRequestTo


@JsonMap({"from_": "from", "country_id": "countryId"})
class MakeCallOutRequest(BaseModel):
    """MakeCallOutRequest

    :param from_: Instance id of the caller. It corresponds to the 1st leg of the CallOut call.
    :type from_: MakeCallOutCallerInfoRequestFrom
    :param to: Phone number of the called party. This number corresponds to the 2nd leg of a CallOut call
    :type to: MakeCallOutCallerInfoRequestTo
    :param country_id: Optional. Dialing plan country data. If not specified, then extension home country is applied by default., defaults to None
    :type country_id: int, optional
    """

    def __init__(
        self,
        from_: MakeCallOutCallerInfoRequestFrom,
        to: MakeCallOutCallerInfoRequestTo,
        country_id: int = None,
    ):
        self.from_ = self._define_object(from_, MakeCallOutCallerInfoRequestFrom)
        self.to = self._define_object(to, MakeCallOutCallerInfoRequestTo)
        if country_id is not None:
            self.country_id = country_id
