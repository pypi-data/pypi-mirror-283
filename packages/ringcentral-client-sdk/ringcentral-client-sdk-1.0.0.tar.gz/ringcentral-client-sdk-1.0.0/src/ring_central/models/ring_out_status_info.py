# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class CallStatus(Enum):
    """An enumeration representing different categories.

    :cvar INVALID: "Invalid"
    :vartype INVALID: str
    :cvar SUCCESS: "Success"
    :vartype SUCCESS: str
    :cvar INPROGRESS: "InProgress"
    :vartype INPROGRESS: str
    :cvar BUSY: "Busy"
    :vartype BUSY: str
    :cvar NOANSWER: "NoAnswer"
    :vartype NOANSWER: str
    :cvar REJECTED: "Rejected"
    :vartype REJECTED: str
    :cvar GENERICERROR: "GenericError"
    :vartype GENERICERROR: str
    :cvar FINISHED: "Finished"
    :vartype FINISHED: str
    :cvar INTERNATIONALDISABLED: "InternationalDisabled"
    :vartype INTERNATIONALDISABLED: str
    :cvar DESTINATIONBLOCKED: "DestinationBlocked"
    :vartype DESTINATIONBLOCKED: str
    :cvar NOTENOUGHFUNDS: "NotEnoughFunds"
    :vartype NOTENOUGHFUNDS: str
    :cvar NOSUCHUSER: "NoSuchUser"
    :vartype NOSUCHUSER: str
    """

    INVALID = "Invalid"
    SUCCESS = "Success"
    INPROGRESS = "InProgress"
    BUSY = "Busy"
    NOANSWER = "NoAnswer"
    REJECTED = "Rejected"
    GENERICERROR = "GenericError"
    FINISHED = "Finished"
    INTERNATIONALDISABLED = "InternationalDisabled"
    DESTINATIONBLOCKED = "DestinationBlocked"
    NOTENOUGHFUNDS = "NotEnoughFunds"
    NOSUCHUSER = "NoSuchUser"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, CallStatus._member_map_.values()))


class CallerStatus(Enum):
    """An enumeration representing different categories.

    :cvar INVALID: "Invalid"
    :vartype INVALID: str
    :cvar SUCCESS: "Success"
    :vartype SUCCESS: str
    :cvar INPROGRESS: "InProgress"
    :vartype INPROGRESS: str
    :cvar BUSY: "Busy"
    :vartype BUSY: str
    :cvar NOANSWER: "NoAnswer"
    :vartype NOANSWER: str
    :cvar REJECTED: "Rejected"
    :vartype REJECTED: str
    :cvar GENERICERROR: "GenericError"
    :vartype GENERICERROR: str
    :cvar FINISHED: "Finished"
    :vartype FINISHED: str
    :cvar INTERNATIONALDISABLED: "InternationalDisabled"
    :vartype INTERNATIONALDISABLED: str
    :cvar DESTINATIONBLOCKED: "DestinationBlocked"
    :vartype DESTINATIONBLOCKED: str
    :cvar NOTENOUGHFUNDS: "NotEnoughFunds"
    :vartype NOTENOUGHFUNDS: str
    :cvar NOSUCHUSER: "NoSuchUser"
    :vartype NOSUCHUSER: str
    """

    INVALID = "Invalid"
    SUCCESS = "Success"
    INPROGRESS = "InProgress"
    BUSY = "Busy"
    NOANSWER = "NoAnswer"
    REJECTED = "Rejected"
    GENERICERROR = "GenericError"
    FINISHED = "Finished"
    INTERNATIONALDISABLED = "InternationalDisabled"
    DESTINATIONBLOCKED = "DestinationBlocked"
    NOTENOUGHFUNDS = "NotEnoughFunds"
    NOSUCHUSER = "NoSuchUser"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, CallerStatus._member_map_.values()))


class CalleeStatus(Enum):
    """An enumeration representing different categories.

    :cvar INVALID: "Invalid"
    :vartype INVALID: str
    :cvar SUCCESS: "Success"
    :vartype SUCCESS: str
    :cvar INPROGRESS: "InProgress"
    :vartype INPROGRESS: str
    :cvar BUSY: "Busy"
    :vartype BUSY: str
    :cvar NOANSWER: "NoAnswer"
    :vartype NOANSWER: str
    :cvar REJECTED: "Rejected"
    :vartype REJECTED: str
    :cvar GENERICERROR: "GenericError"
    :vartype GENERICERROR: str
    :cvar FINISHED: "Finished"
    :vartype FINISHED: str
    :cvar INTERNATIONALDISABLED: "InternationalDisabled"
    :vartype INTERNATIONALDISABLED: str
    :cvar DESTINATIONBLOCKED: "DestinationBlocked"
    :vartype DESTINATIONBLOCKED: str
    :cvar NOTENOUGHFUNDS: "NotEnoughFunds"
    :vartype NOTENOUGHFUNDS: str
    :cvar NOSUCHUSER: "NoSuchUser"
    :vartype NOSUCHUSER: str
    """

    INVALID = "Invalid"
    SUCCESS = "Success"
    INPROGRESS = "InProgress"
    BUSY = "Busy"
    NOANSWER = "NoAnswer"
    REJECTED = "Rejected"
    GENERICERROR = "GenericError"
    FINISHED = "Finished"
    INTERNATIONALDISABLED = "InternationalDisabled"
    DESTINATIONBLOCKED = "DestinationBlocked"
    NOTENOUGHFUNDS = "NotEnoughFunds"
    NOSUCHUSER = "NoSuchUser"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, CalleeStatus._member_map_.values()))


@JsonMap(
    {
        "call_status": "callStatus",
        "caller_status": "callerStatus",
        "callee_status": "calleeStatus",
    }
)
class RingOutStatusInfo(BaseModel):
    """RingOut status information

    :param call_status: Status of a call, defaults to None
    :type call_status: CallStatus, optional
    :param caller_status: Status of a calling party, defaults to None
    :type caller_status: CallerStatus, optional
    :param callee_status: Status of a called party, defaults to None
    :type callee_status: CalleeStatus, optional
    """

    def __init__(
        self,
        call_status: CallStatus = None,
        caller_status: CallerStatus = None,
        callee_status: CalleeStatus = None,
    ):
        if call_status is not None:
            self.call_status = self._enum_matching(
                call_status, CallStatus.list(), "call_status"
            )
        if caller_status is not None:
            self.caller_status = self._enum_matching(
                caller_status, CallerStatus.list(), "caller_status"
            )
        if callee_status is not None:
            self.callee_status = self._enum_matching(
                callee_status, CalleeStatus.list(), "callee_status"
            )
