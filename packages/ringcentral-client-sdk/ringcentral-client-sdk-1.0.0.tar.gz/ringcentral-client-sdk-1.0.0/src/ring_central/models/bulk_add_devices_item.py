# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from typing import Union
from .utils.json_map import JsonMap
from .base import BaseModel
from .base import OneOfBaseModel
from .bulk_operation_extension_reference import BulkOperationExtensionReference
from .postal_address import PostalAddress
from .phone_number_definition_toll_type import PhoneNumberDefinitionTollType
from .phone_number_definition_preferred_area_code import (
    PhoneNumberDefinitionPreferredAreaCode,
)
from .phone_number_definition_direct_number_with_reservation_id import (
    PhoneNumberDefinitionDirectNumberWithReservationId,
)
from .phone_number_definition_number_id import PhoneNumberDefinitionNumberId


class BulkAddDevicesItemType(Enum):
    """An enumeration representing different categories.

    :cvar OTHERPHONE: "OtherPhone"
    :vartype OTHERPHONE: str
    :cvar WEBRTC: "WebRTC"
    :vartype WEBRTC: str
    """

    OTHERPHONE = "OtherPhone"
    WEBRTC = "WebRTC"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, BulkAddDevicesItemType._member_map_.values())
        )


@JsonMap({})
class Emergency1_2(BaseModel):
    """Emergency1_2

    :param address: Postal address/location
    :type address: PostalAddress
    """

    def __init__(self, address: PostalAddress):
        self.address = self._define_object(address, PostalAddress)


@JsonMap({"id_": "id"})
class Emergency2Location2(BaseModel):
    """Emergency2Location2

    :param id_: Emergency location ID
    :type id_: str
    """

    def __init__(self, id_: str):
        self.id_ = id_


@JsonMap({})
class Emergency2_2(BaseModel):
    """Emergency2_2

    :param location: location
    :type location: Emergency2Location2
    """

    def __init__(self, location: Emergency2Location2):
        self.location = self._define_object(location, Emergency2Location2)


class BulkAddDevicesItemEmergencyGuard(OneOfBaseModel):
    class_list = {"Emergency1_2": Emergency1_2, "Emergency2_2": Emergency2_2}


BulkAddDevicesItemEmergency = Union[Emergency1_2, Emergency2_2]


class BulkAddDevicesItemPhoneInfoGuard(OneOfBaseModel):
    class_list = {
        "PhoneNumberDefinitionTollType": PhoneNumberDefinitionTollType,
        "PhoneNumberDefinitionPreferredAreaCode": PhoneNumberDefinitionPreferredAreaCode,
        "PhoneNumberDefinitionDirectNumberWithReservationId": PhoneNumberDefinitionDirectNumberWithReservationId,
        "PhoneNumberDefinitionNumberId": PhoneNumberDefinitionNumberId,
    }


BulkAddDevicesItemPhoneInfo = Union[
    PhoneNumberDefinitionTollType,
    PhoneNumberDefinitionPreferredAreaCode,
    PhoneNumberDefinitionDirectNumberWithReservationId,
    PhoneNumberDefinitionNumberId,
]


@JsonMap({"cost_center_id": "costCenterId", "type_": "type", "phone_info": "phoneInfo"})
class BulkAddDevicesItem(BaseModel):
    """BulkAddDevicesItem

    :param cost_center_id: Internal identifier of a cost center, defaults to None
    :type cost_center_id: str, optional
    :param extension: Information about an extension this device is assigned to
    :type extension: BulkOperationExtensionReference
    :param type_: Device type. Only "OtherPhone" and "WebRTC" device types are supported at the moment
    :type type_: BulkAddDevicesItemType
    :param emergency: Only "address" is supported at the moment
    :type emergency: BulkAddDevicesItemEmergency
    :param phone_info: phone_info
    :type phone_info: BulkAddDevicesItemPhoneInfo
    """

    def __init__(
        self,
        extension: BulkOperationExtensionReference,
        type_: BulkAddDevicesItemType,
        emergency: BulkAddDevicesItemEmergency,
        phone_info: BulkAddDevicesItemPhoneInfo,
        cost_center_id: str = None,
    ):
        if cost_center_id is not None:
            self.cost_center_id = cost_center_id
        self.extension = self._define_object(extension, BulkOperationExtensionReference)
        self.type_ = self._enum_matching(type_, BulkAddDevicesItemType.list(), "type_")
        self.emergency = BulkAddDevicesItemEmergencyGuard.return_one_of(emergency)
        self.phone_info = BulkAddDevicesItemPhoneInfoGuard.return_one_of(phone_info)
