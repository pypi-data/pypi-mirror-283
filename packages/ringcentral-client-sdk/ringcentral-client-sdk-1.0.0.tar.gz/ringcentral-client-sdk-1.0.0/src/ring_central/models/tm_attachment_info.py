# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class TmAttachmentInfoType(Enum):
    """An enumeration representing different categories.

    :cvar FILE: "File"
    :vartype FILE: str
    :cvar NOTE: "Note"
    :vartype NOTE: str
    :cvar EVENT: "Event"
    :vartype EVENT: str
    :cvar CARD: "Card"
    :vartype CARD: str
    """

    FILE = "File"
    NOTE = "Note"
    EVENT = "Event"
    CARD = "Card"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, TmAttachmentInfoType._member_map_.values()))


@JsonMap({"id_": "id", "type_": "type"})
class TmAttachmentInfo(BaseModel):
    """TmAttachmentInfo

    :param id_: Internal identifier of an attachment, defaults to None
    :type id_: str, optional
    :param type_: Type of an attachment, defaults to None
    :type type_: TmAttachmentInfoType, optional
    """

    def __init__(self, id_: str = None, type_: TmAttachmentInfoType = None):
        if id_ is not None:
            self.id_ = id_
        if type_ is not None:
            self.type_ = self._enum_matching(
                type_, TmAttachmentInfoType.list(), "type_"
            )
