# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class EmergencyAddressLineProvisioningStatus(Enum):
    """An enumeration representing different categories.

    :cvar VALID: "Valid"
    :vartype VALID: str
    :cvar PROVISIONING: "Provisioning"
    :vartype PROVISIONING: str
    :cvar INVALID: "Invalid"
    :vartype INVALID: str
    """

    VALID = "Valid"
    PROVISIONING = "Provisioning"
    INVALID = "Invalid"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                EmergencyAddressLineProvisioningStatus._member_map_.values(),
            )
        )


@JsonMap(
    {"local_only": "localOnly", "line_provisioning_status": "lineProvisioningStatus"}
)
class EmergencyAddress(BaseModel):
    """EmergencyAddress

    :param required: If set to `true` then specifying emergency address is required, defaults to None
    :type required: bool, optional
    :param local_only: If set to `true` then only local emergency address can be specified, defaults to None
    :type local_only: bool, optional
    :param line_provisioning_status: This status is associated with a phone line provision state, defaults to None
    :type line_provisioning_status: EmergencyAddressLineProvisioningStatus, optional
    """

    def __init__(
        self,
        required: bool = None,
        local_only: bool = None,
        line_provisioning_status: EmergencyAddressLineProvisioningStatus = None,
    ):
        if required is not None:
            self.required = required
        if local_only is not None:
            self.local_only = local_only
        if line_provisioning_status is not None:
            self.line_provisioning_status = self._enum_matching(
                line_provisioning_status,
                EmergencyAddressLineProvisioningStatus.list(),
                "line_provisioning_status",
            )
