# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"id_": "id", "iso_code": "isoCode", "calling_code": "callingCode"})
class CountryInfoShortModel(BaseModel):
    """CountryInfoShortModel

    :param id_: Internal identifier of a country, defaults to None
    :type id_: str, optional
    :param uri: Canonical URI of a country resource, defaults to None
    :type uri: str, optional
    :param name: The official name of a country, defaults to None
    :type name: str, optional
    :param iso_code: A ISO country code value complying with the<br>[ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)<br>format.<br>, defaults to None
    :type iso_code: str, optional
    :param calling_code: Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)<br>recommendations [E.123](http://en.wikipedia.org/wiki/E.123) and<br>[E.164](http://en.wikipedia.org/wiki/E.164),<br>see [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)<br>, defaults to None
    :type calling_code: str, optional
    """

    def __init__(
        self,
        id_: str = None,
        uri: str = None,
        name: str = None,
        iso_code: str = None,
        calling_code: str = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if uri is not None:
            self.uri = uri
        if name is not None:
            self.name = name
        if iso_code is not None:
            self.iso_code = iso_code
        if calling_code is not None:
            self.calling_code = calling_code
