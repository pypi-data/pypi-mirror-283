# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .meeting_external_user_info_resource import MeetingExternalUserInfoResource
from .dial_in_number_resource import DialInNumberResource


@JsonMap(
    {
        "support_uri": "supportUri",
        "intl_dial_in_numbers_uri": "intlDialInNumbersUri",
        "external_user_info": "externalUserInfo",
        "dial_in_numbers": "dialInNumbers",
    }
)
class MeetingServiceInfoResource(BaseModel):
    """MeetingServiceInfoResource

    :param uri: uri, defaults to None
    :type uri: str, optional
    :param support_uri: support_uri, defaults to None
    :type support_uri: str, optional
    :param intl_dial_in_numbers_uri: intl_dial_in_numbers_uri, defaults to None
    :type intl_dial_in_numbers_uri: str, optional
    :param external_user_info: external_user_info, defaults to None
    :type external_user_info: MeetingExternalUserInfoResource, optional
    :param dial_in_numbers: dial_in_numbers, defaults to None
    :type dial_in_numbers: List[DialInNumberResource], optional
    """

    def __init__(
        self,
        uri: str = None,
        support_uri: str = None,
        intl_dial_in_numbers_uri: str = None,
        external_user_info: MeetingExternalUserInfoResource = None,
        dial_in_numbers: List[DialInNumberResource] = None,
    ):
        if uri is not None:
            self.uri = uri
        if support_uri is not None:
            self.support_uri = support_uri
        if intl_dial_in_numbers_uri is not None:
            self.intl_dial_in_numbers_uri = intl_dial_in_numbers_uri
        if external_user_info is not None:
            self.external_user_info = self._define_object(
                external_user_info, MeetingExternalUserInfoResource
            )
        if dial_in_numbers is not None:
            self.dial_in_numbers = self._define_list(
                dial_in_numbers, DialInNumberResource
            )
