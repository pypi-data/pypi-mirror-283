# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "call_id": "callId",
        "to_tag": "toTag",
        "from_tag": "fromTag",
        "remote_uri": "remoteUri",
        "local_uri": "localUri",
        "rc_session_id": "rcSessionId",
    }
)
class DetailedCallInfo(BaseModel):
    """DetailedCallInfo

    :param call_id: call_id, defaults to None
    :type call_id: str, optional
    :param to_tag: to_tag, defaults to None
    :type to_tag: str, optional
    :param from_tag: from_tag, defaults to None
    :type from_tag: str, optional
    :param remote_uri: remote_uri, defaults to None
    :type remote_uri: str, optional
    :param local_uri: local_uri, defaults to None
    :type local_uri: str, optional
    :param rc_session_id: rc_session_id, defaults to None
    :type rc_session_id: str, optional
    """

    def __init__(
        self,
        call_id: str = None,
        to_tag: str = None,
        from_tag: str = None,
        remote_uri: str = None,
        local_uri: str = None,
        rc_session_id: str = None,
    ):
        if call_id is not None:
            self.call_id = call_id
        if to_tag is not None:
            self.to_tag = to_tag
        if from_tag is not None:
            self.from_tag = from_tag
        if remote_uri is not None:
            self.remote_uri = remote_uri
        if local_uri is not None:
            self.local_uri = local_uri
        if rc_session_id is not None:
            self.rc_session_id = rc_session_id
