# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .data_export_task_contact_info import DataExportTaskContactInfo


@JsonMap({"time_from": "timeFrom", "time_to": "timeTo", "chat_ids": "chatIds"})
class SpecificInfo(BaseModel):
    """Information specified in request

    :param time_from: Starting time for data collection, defaults to None
    :type time_from: str, optional
    :param time_to: Ending time for data collection, defaults to None
    :type time_to: str, optional
    :param contacts: contacts, defaults to None
    :type contacts: List[DataExportTaskContactInfo], optional
    :param chat_ids: List of chats from which the data (posts, files, tasks, events, notes, etc.) will be collected, defaults to None
    :type chat_ids: List[str], optional
    """

    def __init__(
        self,
        time_from: str = None,
        time_to: str = None,
        contacts: List[DataExportTaskContactInfo] = None,
        chat_ids: List[str] = None,
    ):
        if time_from is not None:
            self.time_from = time_from
        if time_to is not None:
            self.time_to = time_to
        if contacts is not None:
            self.contacts = self._define_list(contacts, DataExportTaskContactInfo)
        if chat_ids is not None:
            self.chat_ids = chat_ids
