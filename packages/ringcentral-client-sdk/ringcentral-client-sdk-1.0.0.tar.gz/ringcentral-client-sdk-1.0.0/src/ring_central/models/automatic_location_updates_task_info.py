# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel
from .task_result_info import TaskResultInfo


class AutomaticLocationUpdatesTaskInfoStatus(Enum):
    """An enumeration representing different categories.

    :cvar ACCEPTED: "Accepted"
    :vartype ACCEPTED: str
    :cvar INPROGRESS: "InProgress"
    :vartype INPROGRESS: str
    :cvar COMPLETED: "Completed"
    :vartype COMPLETED: str
    :cvar FAILED: "Failed"
    :vartype FAILED: str
    """

    ACCEPTED = "Accepted"
    INPROGRESS = "InProgress"
    COMPLETED = "Completed"
    FAILED = "Failed"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                AutomaticLocationUpdatesTaskInfoStatus._member_map_.values(),
            )
        )


class AutomaticLocationUpdatesTaskInfoType(Enum):
    """An enumeration representing different categories.

    :cvar WIRELESSPOINTSBULKCREATE: "WirelessPointsBulkCreate"
    :vartype WIRELESSPOINTSBULKCREATE: str
    :cvar WIRELESSPOINTSBULKUPDATE: "WirelessPointsBulkUpdate"
    :vartype WIRELESSPOINTSBULKUPDATE: str
    :cvar SWITCHESBULKCREATE: "SwitchesBulkCreate"
    :vartype SWITCHESBULKCREATE: str
    :cvar SWITCHESBULKUPDATE: "SwitchesBulkUpdate"
    :vartype SWITCHESBULKUPDATE: str
    """

    WIRELESSPOINTSBULKCREATE = "WirelessPointsBulkCreate"
    WIRELESSPOINTSBULKUPDATE = "WirelessPointsBulkUpdate"
    SWITCHESBULKCREATE = "SwitchesBulkCreate"
    SWITCHESBULKUPDATE = "SwitchesBulkUpdate"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                AutomaticLocationUpdatesTaskInfoType._member_map_.values(),
            )
        )


@JsonMap(
    {
        "id_": "id",
        "creation_time": "creationTime",
        "last_modified_time": "lastModifiedTime",
        "type_": "type",
    }
)
class AutomaticLocationUpdatesTaskInfo(BaseModel):
    """AutomaticLocationUpdatesTaskInfo

    :param id_: Internal identifier of a task, defaults to None
    :type id_: str, optional
    :param status: Status of a task, defaults to None
    :type status: AutomaticLocationUpdatesTaskInfoStatus, optional
    :param creation_time: Task creation time, defaults to None
    :type creation_time: str, optional
    :param last_modified_time: Time of the task latest modification, defaults to None
    :type last_modified_time: str, optional
    :param type_: Type of task, defaults to None
    :type type_: AutomaticLocationUpdatesTaskInfoType, optional
    :param result: Task detailed result. Returned for failed and completed tasks, defaults to None
    :type result: TaskResultInfo, optional
    """

    def __init__(
        self,
        id_: str = None,
        status: AutomaticLocationUpdatesTaskInfoStatus = None,
        creation_time: str = None,
        last_modified_time: str = None,
        type_: AutomaticLocationUpdatesTaskInfoType = None,
        result: TaskResultInfo = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if status is not None:
            self.status = self._enum_matching(
                status, AutomaticLocationUpdatesTaskInfoStatus.list(), "status"
            )
        if creation_time is not None:
            self.creation_time = creation_time
        if last_modified_time is not None:
            self.last_modified_time = last_modified_time
        if type_ is not None:
            self.type_ = self._enum_matching(
                type_, AutomaticLocationUpdatesTaskInfoType.list(), "type_"
            )
        if result is not None:
            self.result = self._define_object(result, TaskResultInfo)
