# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class WebhookDeliveryModeRequestTransportType(Enum):
    """An enumeration representing different categories.

    :cvar WEBHOOK: "WebHook"
    :vartype WEBHOOK: str
    """

    WEBHOOK = "WebHook"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                WebhookDeliveryModeRequestTransportType._member_map_.values(),
            )
        )


@JsonMap({"transport_type": "transportType", "verification_token": "verificationToken"})
class WebhookDeliveryModeRequest(BaseModel):
    """WebhookDeliveryModeRequest

    :param transport_type: The transport type for this subscription, or the channel by which an app should be notified of an event
    :type transport_type: WebhookDeliveryModeRequestTransportType
    :param address: The URL to which notifications should be delivered. This is only applicable for the `WebHook` transport type, for which it is a required field.<br>
    :type address: str
    :param verification_token: An optional validation token used to verify the authenticity of the incoming webhook. Applicable only for the `WebHook` transport type., defaults to None
    :type verification_token: str, optional
    """

    def __init__(
        self,
        transport_type: WebhookDeliveryModeRequestTransportType,
        address: str,
        verification_token: str = None,
    ):
        self.transport_type = self._enum_matching(
            transport_type,
            WebhookDeliveryModeRequestTransportType.list(),
            "transport_type",
        )
        self.address = address
        if verification_token is not None:
            self.verification_token = verification_token
