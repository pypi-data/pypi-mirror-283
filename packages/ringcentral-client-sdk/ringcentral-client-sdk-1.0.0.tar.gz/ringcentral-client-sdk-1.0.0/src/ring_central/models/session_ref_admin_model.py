# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .webinar_ref_model import WebinarRefModel


@JsonMap({"id_": "id", "start_time": "startTime", "end_time": "endTime"})
class SessionRefAdminModel(BaseModel):
    """SessionRefAdminModel

    :param id_: Internal object ID, defaults to None
    :type id_: str, optional
    :param start_time: Session start time. If a session hasn't been started this fields should be set to "scheduledStartTime"<br>, defaults to None
    :type start_time: str, optional
    :param end_time: Session end time. If a session hasn't been finished this fields should be set to ("startTime"+"scheduledDuration")<br>, defaults to None
    :type end_time: str, optional
    :param duration: Session duration in seconds rounded up (returned if 'startTime' and 'endTime' are not empty), defaults to None
    :type duration: int, optional
    :param title: Session title. If blank - derived from webinar title., defaults to None
    :type title: str, optional
    :param description: User-friendly description of the Session. If blank - derived from webinar title., defaults to None
    :type description: str, optional
    :param webinar: webinar, defaults to None
    :type webinar: WebinarRefModel, optional
    """

    def __init__(
        self,
        id_: str = None,
        start_time: str = None,
        end_time: str = None,
        duration: int = None,
        title: str = None,
        description: str = None,
        webinar: WebinarRefModel = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if start_time is not None:
            self.start_time = start_time
        if end_time is not None:
            self.end_time = end_time
        if duration is not None:
            self.duration = duration
        if title is not None:
            self.title = title
        if description is not None:
            self.description = description
        if webinar is not None:
            self.webinar = self._define_object(webinar, WebinarRefModel)
