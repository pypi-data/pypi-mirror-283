# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"event_filters": "eventFilters", "expires_in": "expiresIn"})
class UpdateSubscriptionRequest(BaseModel):
    """UpdateSubscriptionRequest

    :param event_filters: The list of event filters corresponding to events the user is subscribed to
    :type event_filters: List[str]
    :param expires_in: Subscription lifetime in seconds. The maximum subscription lifetime depends upon the specified `transportType`:<br><br>\| Transport type      \| Maximum permitted lifetime     \|<br>\| ------------------- \| ------------------------------ \|<br>\| `WebHook`           \| 315360000 seconds (10 years)   \|<br>\| `RC/APNS`, `RC/GSM` \| 7776000 seconds (90 days)      \|<br>\| `PubNub`            \| 900 seconds (15 minutes)       \|<br>\| `WebSocket`         \| n/a (the parameter is ignored) \|<br>, defaults to None
    :type expires_in: int, optional
    """

    def __init__(self, event_filters: List[str], expires_in: int = None):
        self.event_filters = event_filters
        if expires_in is not None:
            self.expires_in = expires_in
