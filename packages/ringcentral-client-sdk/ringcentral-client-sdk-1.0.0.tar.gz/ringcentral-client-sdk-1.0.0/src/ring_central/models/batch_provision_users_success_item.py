# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"id_": "id", "phone_number": "phoneNumber"})
class ExtensionDevices(BaseModel):
    """ExtensionDevices

    :param id_: The internal identifier of device created
    :type id_: str
    :param phone_number: Phone number in e.164 format (with '+' prefix)
    :type phone_number: str
    """

    def __init__(self, id_: str, phone_number: str):
        self.id_ = id_
        self.phone_number = self._pattern_matching(
            phone_number, "^\+[1-9]\d{1,14}$", "phone_number"
        )


@JsonMap({"id_": "id"})
class BatchProvisionUsersSuccessItemExtension(BaseModel):
    """BatchProvisionUsersSuccessItemExtension

    :param id_: The internal identifier of RingCentral extension created
    :type id_: str
    :param devices: devices
    :type devices: List[ExtensionDevices]
    """

    def __init__(self, id_: str, devices: List[ExtensionDevices]):
        self.id_ = id_
        self.devices = self._define_list(devices, ExtensionDevices)


@JsonMap({})
class BatchProvisionUsersSuccessItem(BaseModel):
    """BatchProvisionUsersSuccessItem

    :param successful: Indicates if the provisioning operation was successful for this item, always `true` in this model
    :type successful: bool
    :param extension: extension
    :type extension: BatchProvisionUsersSuccessItemExtension
    """

    def __init__(
        self, successful: bool, extension: BatchProvisionUsersSuccessItemExtension
    ):
        self.successful = successful
        self.extension = self._define_object(
            extension, BatchProvisionUsersSuccessItemExtension
        )
