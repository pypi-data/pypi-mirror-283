# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .missed_call_extension_info_external_number import (
    MissedCallExtensionInfoExternalNumber,
)


@JsonMap({"id_": "id", "external_number": "externalNumber"})
class MissedCallExtensionInfo(BaseModel):
    """Specifies an extension (a calling group) which should be used for the missed call transfer. Returned only if the `actionType` is set to 'ConnectToExtension'

    :param id_: Internal identifier of an extension which should be used for the missed call transfer, defaults to None
    :type id_: str, optional
    :param external_number: Specifies an external PSTN number which should be used for the missed call transfer. Returned only if the actionType is set to `ConnectToExternalNumber`, defaults to None
    :type external_number: MissedCallExtensionInfoExternalNumber, optional
    """

    def __init__(
        self,
        id_: str = None,
        external_number: MissedCallExtensionInfoExternalNumber = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if external_number is not None:
            self.external_number = self._define_object(
                external_number, MissedCallExtensionInfoExternalNumber
            )
