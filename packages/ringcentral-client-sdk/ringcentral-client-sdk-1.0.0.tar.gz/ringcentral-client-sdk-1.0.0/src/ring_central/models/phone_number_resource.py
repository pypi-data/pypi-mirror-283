# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class PhoneNumberResourceUsageType(Enum):
    """An enumeration representing different categories.

    :cvar MOBILENUMBER: "MobileNumber"
    :vartype MOBILENUMBER: str
    :cvar CONTACTNUMBER: "ContactNumber"
    :vartype CONTACTNUMBER: str
    :cvar DIRECTNUMBER: "DirectNumber"
    :vartype DIRECTNUMBER: str
    :cvar FORWARDEDNUMBER: "ForwardedNumber"
    :vartype FORWARDEDNUMBER: str
    """

    MOBILENUMBER = "MobileNumber"
    CONTACTNUMBER = "ContactNumber"
    DIRECTNUMBER = "DirectNumber"
    FORWARDEDNUMBER = "ForwardedNumber"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, PhoneNumberResourceUsageType._member_map_.values())
        )


@JsonMap(
    {
        "formatted_phone_number": "formattedPhoneNumber",
        "phone_number": "phoneNumber",
        "type_": "type",
        "usage_type": "usageType",
    }
)
class PhoneNumberResource(BaseModel):
    """PhoneNumberResource

    :param formatted_phone_number: formatted_phone_number, defaults to None
    :type formatted_phone_number: str, optional
    :param phone_number: phone_number, defaults to None
    :type phone_number: str, optional
    :param type_: type_, defaults to None
    :type type_: str, optional
    :param label: Custom user name of a phone number, if any, defaults to None
    :type label: str, optional
    :param usage_type: Usage type of phone number, defaults to None
    :type usage_type: PhoneNumberResourceUsageType, optional
    :param hidden: Specifies if a phone number should be hidden or not, defaults to None
    :type hidden: bool, optional
    :param primary: Specifies if the number is primary, i.e. displayed as 'main number' and called by default, defaults to None
    :type primary: bool, optional
    """

    def __init__(
        self,
        formatted_phone_number: str = None,
        phone_number: str = None,
        type_: str = None,
        label: str = None,
        usage_type: PhoneNumberResourceUsageType = None,
        hidden: bool = None,
        primary: bool = None,
    ):
        if formatted_phone_number is not None:
            self.formatted_phone_number = formatted_phone_number
        if phone_number is not None:
            self.phone_number = phone_number
        if type_ is not None:
            self.type_ = type_
        if label is not None:
            self.label = label
        if usage_type is not None:
            self.usage_type = self._enum_matching(
                usage_type, PhoneNumberResourceUsageType.list(), "usage_type"
            )
        if hidden is not None:
            self.hidden = hidden
        if primary is not None:
            self.primary = primary
