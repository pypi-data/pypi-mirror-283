# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class ObjectType(Enum):
    """An enumeration representing different categories.

    :cvar EXTENSION: "Extension"
    :vartype EXTENSION: str
    :cvar ACCOUNT: "Account"
    :vartype ACCOUNT: str
    :cvar COMPANY: "Company"
    :vartype COMPANY: str
    :cvar TEMPLATE: "Template"
    :vartype TEMPLATE: str
    """

    EXTENSION = "Extension"
    ACCOUNT = "Account"
    COMPANY = "Company"
    TEMPLATE = "Template"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, ObjectType._member_map_.values()))


@JsonMap(
    {
        "object_id": "objectId",
        "object_type": "objectType",
        "extension_number": "extensionNumber",
        "site_id": "siteId",
    }
)
class AccountHistoryRecordTarget(BaseModel):
    """Action target object (company/extension)

    :param object_id: Extension identifier of the affected entity or "0" for Company level, defaults to None
    :type object_id: str, optional
    :param object_type: Type of the entity., defaults to None
    :type object_type: ObjectType, optional
    :param name: Target extension name, defaults to None
    :type name: str, optional
    :param extension_number: Target extension (short) number  of the affected entity (if the objectType is EXTENSION)., defaults to None
    :type extension_number: str, optional
    :param site_id: Target extension site identifier (if any), defaults to None
    :type site_id: str, optional
    """

    def __init__(
        self,
        object_id: str = None,
        object_type: ObjectType = None,
        name: str = None,
        extension_number: str = None,
        site_id: str = None,
    ):
        if object_id is not None:
            self.object_id = object_id
        if object_type is not None:
            self.object_type = self._enum_matching(
                object_type, ObjectType.list(), "object_type"
            )
        if name is not None:
            self.name = name
        if extension_number is not None:
            self.extension_number = extension_number
        if site_id is not None:
            self.site_id = site_id
