# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "local_recording": "localRecording",
        "cloud_recording": "cloudRecording",
        "auto_recording": "autoRecording",
        "cloud_recording_download": "cloudRecordingDownload",
        "host_delete_cloud_recording": "hostDeleteCloudRecording",
        "account_user_access_recording": "accountUserAccessRecording",
        "auto_delete_cmr": "autoDeleteCmr",
    }
)
class AccountLockSettingRecordResponse(BaseModel):
    """AccountLockSettingRecordResponse

    :param local_recording: local_recording, defaults to None
    :type local_recording: bool, optional
    :param cloud_recording: cloud_recording, defaults to None
    :type cloud_recording: bool, optional
    :param auto_recording: auto_recording, defaults to None
    :type auto_recording: bool, optional
    :param cloud_recording_download: cloud_recording_download, defaults to None
    :type cloud_recording_download: bool, optional
    :param host_delete_cloud_recording: host_delete_cloud_recording, defaults to None
    :type host_delete_cloud_recording: bool, optional
    :param account_user_access_recording: account_user_access_recording, defaults to None
    :type account_user_access_recording: bool, optional
    :param auto_delete_cmr: auto_delete_cmr, defaults to None
    :type auto_delete_cmr: bool, optional
    """

    def __init__(
        self,
        local_recording: bool = None,
        cloud_recording: bool = None,
        auto_recording: bool = None,
        cloud_recording_download: bool = None,
        host_delete_cloud_recording: bool = None,
        account_user_access_recording: bool = None,
        auto_delete_cmr: bool = None,
    ):
        if local_recording is not None:
            self.local_recording = local_recording
        if cloud_recording is not None:
            self.cloud_recording = cloud_recording
        if auto_recording is not None:
            self.auto_recording = auto_recording
        if cloud_recording_download is not None:
            self.cloud_recording_download = cloud_recording_download
        if host_delete_cloud_recording is not None:
            self.host_delete_cloud_recording = host_delete_cloud_recording
        if account_user_access_recording is not None:
            self.account_user_access_recording = account_user_access_recording
        if auto_delete_cmr is not None:
            self.auto_delete_cmr = auto_delete_cmr
