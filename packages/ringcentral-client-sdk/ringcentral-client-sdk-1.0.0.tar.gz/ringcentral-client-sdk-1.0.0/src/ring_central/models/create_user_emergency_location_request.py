# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .common_emergency_location_address_info import (
    CommonEmergencyLocationAddressInfo,
    CommonEmergencyLocationAddressInfoGuard,
)
from .common_emergency_location_address_info_default import (
    CommonEmergencyLocationAddressInfoDefault,
)
from .common_emergency_location_address_info_au import (
    CommonEmergencyLocationAddressInfoAu,
)
from .common_emergency_location_address_info_fr import (
    CommonEmergencyLocationAddressInfoFr,
)


@JsonMap({"address_format_id": "addressFormatId"})
class CreateUserEmergencyLocationRequest(BaseModel):
    """CreateUserEmergencyLocationRequest

    :param name: Name of a new personal emergency response location, defaults to None
    :type name: str, optional
    :param address_format_id: Address format ID, defaults to None
    :type address_format_id: str, optional
    :param trusted: If 'true' address validation for non-us addresses is skipped, defaults to None
    :type trusted: bool, optional
    :param address: address, defaults to None
    :type address: CommonEmergencyLocationAddressInfo, optional
    """

    def __init__(
        self,
        name: str = None,
        address_format_id: str = None,
        trusted: bool = None,
        address: CommonEmergencyLocationAddressInfo = None,
    ):
        if name is not None:
            self.name = name
        if address_format_id is not None:
            self.address_format_id = address_format_id
        if trusted is not None:
            self.trusted = trusted
        if address is not None:
            self.address = CommonEmergencyLocationAddressInfoGuard.return_one_of(
                address
            )
