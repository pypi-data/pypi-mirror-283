# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .account_history_record_public_initiator import AccountHistoryRecordPublicInitiator
from .account_history_record_target import AccountHistoryRecordTarget
from .account_history_record_public_details import AccountHistoryRecordPublicDetails


@JsonMap(
    {
        "id_": "id",
        "event_time": "eventTime",
        "action_id": "actionId",
        "event_type": "eventType",
        "account_id": "accountId",
        "account_name": "accountName",
        "client_ip": "clientIp",
    }
)
class AccountHistoryPublicRecord(BaseModel):
    """AccountHistoryPublicRecord

    :param id_: Internal record identifier, defaults to None
    :type id_: str, optional
    :param event_time: Timestamp of an event (provided by a client), RFC3339 date-time format, UTC time zone., defaults to None
    :type event_time: str, optional
    :param initiator: Event initiator info, defaults to None
    :type initiator: AccountHistoryRecordPublicInitiator, optional
    :param action_id: Action type, defaults to None
    :type action_id: str, optional
    :param event_type: Operation: "CREATE", "UPDATE", "DELETE" or custom, defaults to None
    :type event_type: str, optional
    :param account_id: Account identifier which is related with the particular record., defaults to None
    :type account_id: str, optional
    :param account_name: Account (company) name, defaults to None
    :type account_name: str, optional
    :param target: Action target object (company/extension), defaults to None
    :type target: AccountHistoryRecordTarget, optional
    :param client_ip: IP-address of a client., defaults to None
    :type client_ip: str, optional
    :param comment: Custom top-level comment, defaults to None
    :type comment: str, optional
    :param details: details, defaults to None
    :type details: AccountHistoryRecordPublicDetails, optional
    """

    def __init__(
        self,
        id_: str = None,
        event_time: str = None,
        initiator: AccountHistoryRecordPublicInitiator = None,
        action_id: str = None,
        event_type: str = None,
        account_id: str = None,
        account_name: str = None,
        target: AccountHistoryRecordTarget = None,
        client_ip: str = None,
        comment: str = None,
        details: AccountHistoryRecordPublicDetails = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if event_time is not None:
            self.event_time = event_time
        if initiator is not None:
            self.initiator = self._define_object(
                initiator, AccountHistoryRecordPublicInitiator
            )
        if action_id is not None:
            self.action_id = action_id
        if event_type is not None:
            self.event_type = event_type
        if account_id is not None:
            self.account_id = account_id
        if account_name is not None:
            self.account_name = account_name
        if target is not None:
            self.target = self._define_object(target, AccountHistoryRecordTarget)
        if client_ip is not None:
            self.client_ip = client_ip
        if comment is not None:
            self.comment = comment
        if details is not None:
            self.details = self._define_object(
                details, AccountHistoryRecordPublicDetails
            )
