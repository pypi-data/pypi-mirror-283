# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .automatic_location_updates_site_info import AutomaticLocationUpdatesSiteInfo
from .public_ip_range_info import PublicIpRangeInfo
from .private_ip_range_info_request import PrivateIpRangeInfoRequest


@JsonMap(
    {
        "id_": "id",
        "public_ip_ranges": "publicIpRanges",
        "private_ip_ranges": "privateIpRanges",
    }
)
class UpdateNetworkRequest(BaseModel):
    """UpdateNetworkRequest

    :param id_: Internal identifier of a network, defaults to None
    :type id_: str, optional
    :param name: name
    :type name: str
    :param site: Site data. If multi-site feature is turned on for the account,<br>then ID of a site must be specified. In order to assign a wireless<br>point to the main site (company) site ID should be set to `main-site`<br>, defaults to None
    :type site: AutomaticLocationUpdatesSiteInfo, optional
    :param public_ip_ranges: public_ip_ranges
    :type public_ip_ranges: List[PublicIpRangeInfo]
    :param private_ip_ranges: private_ip_ranges
    :type private_ip_ranges: List[PrivateIpRangeInfoRequest]
    """

    def __init__(
        self,
        name: str,
        public_ip_ranges: List[PublicIpRangeInfo],
        private_ip_ranges: List[PrivateIpRangeInfoRequest],
        id_: str = None,
        site: AutomaticLocationUpdatesSiteInfo = None,
    ):
        if id_ is not None:
            self.id_ = id_
        self.name = name
        if site is not None:
            self.site = self._define_object(site, AutomaticLocationUpdatesSiteInfo)
        self.public_ip_ranges = self._define_list(public_ip_ranges, PublicIpRangeInfo)
        self.private_ip_ranges = self._define_list(
            private_ip_ranges, PrivateIpRangeInfoRequest
        )
