# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .timeline_response_options_counters import TimelineResponseOptionsCounters
from .timeline_response_options_timers import TimelineResponseOptionsTimers


@JsonMap({})
class TimelineResponseOptions(BaseModel):
    """Counters and timers options for calls breakdown

    :param counters: Options for selecting breakdown for calls count, defaults to None
    :type counters: TimelineResponseOptionsCounters, optional
    :param timers: Options for selecting breakdown for calls duration, defaults to None
    :type timers: TimelineResponseOptionsTimers, optional
    """

    def __init__(
        self,
        counters: TimelineResponseOptionsCounters = None,
        timers: TimelineResponseOptionsTimers = None,
    ):
        if counters is not None:
            self.counters = self._define_object(
                counters, TimelineResponseOptionsCounters
            )
        if timers is not None:
            self.timers = self._define_object(timers, TimelineResponseOptionsTimers)
