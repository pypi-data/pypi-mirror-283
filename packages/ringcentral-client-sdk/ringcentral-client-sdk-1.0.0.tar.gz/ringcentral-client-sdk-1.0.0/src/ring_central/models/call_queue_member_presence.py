# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .call_queue_member import CallQueueMember


@JsonMap(
    {
        "accept_queue_calls": "acceptQueueCalls",
        "accept_current_queue_calls": "acceptCurrentQueueCalls",
    }
)
class CallQueueMemberPresence(BaseModel):
    """CallQueueMemberPresence

    :param member: Call queue member information, defaults to None
    :type member: CallQueueMember, optional
    :param accept_queue_calls: Private member telephony availability status applied to calls of all queues, defaults to None
    :type accept_queue_calls: bool, optional
    :param accept_current_queue_calls: Call queue member availability in this particular queue, defaults to None
    :type accept_current_queue_calls: bool, optional
    """

    def __init__(
        self,
        member: CallQueueMember = None,
        accept_queue_calls: bool = None,
        accept_current_queue_calls: bool = None,
    ):
        if member is not None:
            self.member = self._define_object(member, CallQueueMember)
        if accept_queue_calls is not None:
            self.accept_queue_calls = accept_queue_calls
        if accept_current_queue_calls is not None:
            self.accept_current_queue_calls = accept_current_queue_calls
