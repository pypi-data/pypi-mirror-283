# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel
from .site_ivr_actions_extension_info_update import SiteIvrActionsExtensionInfoUpdate


class SiteIvrActionsUpdateInput(Enum):
    """An enumeration representing different categories.

    :cvar STAR: "Star"
    :vartype STAR: str
    :cvar HASH: "Hash"
    :vartype HASH: str
    :cvar NOINPUT: "NoInput"
    :vartype NOINPUT: str
    :cvar _0: "0"
    :vartype _0: str
    """

    STAR = "Star"
    HASH = "Hash"
    NOINPUT = "NoInput"
    _0 = "0"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, SiteIvrActionsUpdateInput._member_map_.values())
        )


class SiteIvrActionsUpdateAction(Enum):
    """An enumeration representing different categories.

    :cvar REPEAT: "Repeat"
    :vartype REPEAT: str
    :cvar RETURNTOROOT: "ReturnToRoot"
    :vartype RETURNTOROOT: str
    :cvar RETURNTOPREVIOUS: "ReturnToPrevious"
    :vartype RETURNTOPREVIOUS: str
    :cvar RETURNTOTOPLEVELMENU: "ReturnToTopLevelMenu"
    :vartype RETURNTOTOPLEVELMENU: str
    :cvar CONNECT: "Connect"
    :vartype CONNECT: str
    :cvar CONNECTTOOPERATOR: "ConnectToOperator"
    :vartype CONNECTTOOPERATOR: str
    :cvar DISCONNECT: "Disconnect"
    :vartype DISCONNECT: str
    :cvar DONOTHING: "DoNothing"
    :vartype DONOTHING: str
    """

    REPEAT = "Repeat"
    RETURNTOROOT = "ReturnToRoot"
    RETURNTOPREVIOUS = "ReturnToPrevious"
    RETURNTOTOPLEVELMENU = "ReturnToTopLevelMenu"
    CONNECT = "Connect"
    CONNECTTOOPERATOR = "ConnectToOperator"
    DISCONNECT = "Disconnect"
    DONOTHING = "DoNothing"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, SiteIvrActionsUpdateAction._member_map_.values())
        )


@JsonMap({})
class SiteIvrActionsUpdate(BaseModel):
    """Keys handling settings

    :param input: input, defaults to None
    :type input: SiteIvrActionsUpdateInput, optional
    :param action: Key handling action:<br>- Repeat - repeat menu greeting, for Star and Hash only;<br>- ReturnToRoot - return to root IVR menu, for Star and Hash only;<br>- ReturnToPrevious - return to previous IVR menu, for Star and Hash only;<br>- Connect - connect to specific extension, for NoInput and "0" (zero) only;<br>- Disconnect - end call, for NoInput only.<br>, defaults to None
    :type action: SiteIvrActionsUpdateAction, optional
    :param extension: Extension information, defaults to None
    :type extension: SiteIvrActionsExtensionInfoUpdate, optional
    """

    def __init__(
        self,
        input: SiteIvrActionsUpdateInput = None,
        action: SiteIvrActionsUpdateAction = None,
        extension: SiteIvrActionsExtensionInfoUpdate = None,
    ):
        if input is not None:
            self.input = self._enum_matching(
                input, SiteIvrActionsUpdateInput.list(), "input"
            )
        if action is not None:
            self.action = self._enum_matching(
                action, SiteIvrActionsUpdateAction.list(), "action"
            )
        if extension is not None:
            self.extension = self._define_object(
                extension, SiteIvrActionsExtensionInfoUpdate
            )
