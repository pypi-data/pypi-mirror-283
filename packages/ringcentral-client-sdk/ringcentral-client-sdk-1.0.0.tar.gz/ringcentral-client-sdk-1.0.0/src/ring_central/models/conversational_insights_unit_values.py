# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"group_id": "groupId", "speaker_id": "speakerId"})
class ConversationalInsightsUnitValues(BaseModel):
    """ConversationalInsightsUnitValues

    :param confidence: confidence, defaults to None
    :type confidence: float, optional
    :param value: value
    :type value: str
    :param start: start
    :type start: float
    :param end: end
    :type end: float
    :param group_id: Paragraph index of the long summary., defaults to None
    :type group_id: str, optional
    :param speaker_id: speaker_id, defaults to None
    :type speaker_id: str, optional
    :param assignee: assignee, defaults to None
    :type assignee: str, optional
    :param category: category, defaults to None
    :type category: str, optional
    :param text: text, defaults to None
    :type text: str, optional
    :param question: question, defaults to None
    :type question: str, optional
    :param answer: answer, defaults to None
    :type answer: str, optional
    """

    def __init__(
        self,
        value: str,
        start: float,
        end: float,
        confidence: float = None,
        group_id: str = None,
        speaker_id: str = None,
        assignee: str = None,
        category: str = None,
        text: str = None,
        question: str = None,
        answer: str = None,
    ):
        if confidence is not None:
            self.confidence = confidence
        self.value = value
        self.start = start
        self.end = end
        if group_id is not None:
            self.group_id = group_id
        if speaker_id is not None:
            self.speaker_id = speaker_id
        if assignee is not None:
            self.assignee = assignee
        if category is not None:
            self.category = category
        if text is not None:
            self.text = text
        if question is not None:
            self.question = question
        if answer is not None:
            self.answer = answer
