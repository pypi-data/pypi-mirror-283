# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .data_export_task import DataExportTask
from .glip_data_export_navigation_info import GlipDataExportNavigationInfo
from .glip_data_export_paging_info import GlipDataExportPagingInfo


@JsonMap({})
class DataExportTaskList(BaseModel):
    """DataExportTaskList

    :param tasks: tasks, defaults to None
    :type tasks: List[DataExportTask], optional
    :param navigation: navigation, defaults to None
    :type navigation: GlipDataExportNavigationInfo, optional
    :param paging: paging, defaults to None
    :type paging: GlipDataExportPagingInfo, optional
    """

    def __init__(
        self,
        tasks: List[DataExportTask] = None,
        navigation: GlipDataExportNavigationInfo = None,
        paging: GlipDataExportPagingInfo = None,
    ):
        if tasks is not None:
            self.tasks = self._define_list(tasks, DataExportTask)
        if navigation is not None:
            self.navigation = self._define_object(
                navigation, GlipDataExportNavigationInfo
            )
        if paging is not None:
            self.paging = self._define_object(paging, GlipDataExportPagingInfo)
