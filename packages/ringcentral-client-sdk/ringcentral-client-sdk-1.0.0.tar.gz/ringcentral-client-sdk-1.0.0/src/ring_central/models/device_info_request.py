# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {"id_": "id", "app_external_id": "appExternalId", "computer_name": "computerName"}
)
class DeviceInfoRequest(BaseModel):
    """Device information

    :param id_: Device unique identifier, retrieved at previous session (if any), defaults to None
    :type id_: str, optional
    :param app_external_id: Supported for iOS devices only. Certificate name (used by iOS<br>applications for APNS subscription)<br>, defaults to None
    :type app_external_id: str, optional
    :param computer_name: Computer name (for devices of `SoftPhone` type only), defaults to None
    :type computer_name: str, optional
    :param serial: Endpoint/device instance identifier for Softphone and mobile applications<br>, defaults to None
    :type serial: str, optional
    """

    def __init__(
        self,
        id_: str = None,
        app_external_id: str = None,
        computer_name: str = None,
        serial: str = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if app_external_id is not None:
            self.app_external_id = app_external_id
        if computer_name is not None:
            self.computer_name = computer_name
        if serial is not None:
            self.serial = serial
