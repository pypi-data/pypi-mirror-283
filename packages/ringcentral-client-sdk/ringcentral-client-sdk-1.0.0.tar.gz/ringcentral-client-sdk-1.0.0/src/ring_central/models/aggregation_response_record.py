# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .key_info import KeyInfo
from .calls_timers import CallsTimers
from .calls_counters import CallsCounters


@JsonMap({})
class AggregationResponseRecord(BaseModel):
    """AggregationResponseRecord

    :param key: Grouping key
    :type key: str
    :param info: Additional info about the key, defaults to None
    :type info: KeyInfo, optional
    :param timers: Call length data for the specified grouping, defaults to None
    :type timers: CallsTimers, optional
    :param counters: Call volume data for the specified grouping, defaults to None
    :type counters: CallsCounters, optional
    """

    def __init__(
        self,
        key: str,
        info: KeyInfo = None,
        timers: CallsTimers = None,
        counters: CallsCounters = None,
    ):
        self.key = key
        if info is not None:
            self.info = self._define_object(info, KeyInfo)
        if timers is not None:
            self.timers = self._define_object(timers, CallsTimers)
        if counters is not None:
            self.counters = self._define_object(counters, CallsCounters)
