# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .grouping_options import GroupingOptions


@JsonMap({"group_by": "groupBy"})
class DirectGrouping(BaseModel):
    """This grouping allows to specify the `groupBy` option by which the data in the response will be grouped

    :param group_by: The selected grouping option
    :type group_by: GroupingOptions
    :param keys: This field can be used to specify unique identifiers of entities selected in `groupBy` field. The response data will be limited to these entities only, defaults to None
    :type keys: List[str], optional
    """

    def __init__(self, group_by: GroupingOptions, keys: List[str] = None):
        self.group_by = self._enum_matching(
            group_by, GroupingOptions.list(), "group_by"
        )
        if keys is not None:
            self.keys = keys
