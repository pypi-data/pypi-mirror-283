# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "id_": "id",
        "auto_assigned": "autoAssigned",
        "display_name": "displayName",
        "site_compatible": "siteCompatible",
        "site_restricted": "siteRestricted",
    }
)
class AssignedRoleResource(BaseModel):
    """AssignedRoleResource

    :param uri: Link to an assigned role resource, defaults to None
    :type uri: str, optional
    :param id_: Internal identifier of a role, defaults to None
    :type id_: str, optional
    :param auto_assigned: Specifies if a role can be auto assigned, defaults to None
    :type auto_assigned: bool, optional
    :param display_name: Name of a default role, defaults to None
    :type display_name: str, optional
    :param site_compatible: Site compatibility flag, defaults to None
    :type site_compatible: bool, optional
    :param site_restricted: Site restricted flag, defaults to None
    :type site_restricted: bool, optional
    """

    def __init__(
        self,
        uri: str = None,
        id_: str = None,
        auto_assigned: bool = None,
        display_name: str = None,
        site_compatible: bool = None,
        site_restricted: bool = None,
    ):
        if uri is not None:
            self.uri = uri
        if id_ is not None:
            self.id_ = id_
        if auto_assigned is not None:
            self.auto_assigned = auto_assigned
        if display_name is not None:
            self.display_name = display_name
        if site_compatible is not None:
            self.site_compatible = site_compatible
        if site_restricted is not None:
            self.site_restricted = site_restricted
