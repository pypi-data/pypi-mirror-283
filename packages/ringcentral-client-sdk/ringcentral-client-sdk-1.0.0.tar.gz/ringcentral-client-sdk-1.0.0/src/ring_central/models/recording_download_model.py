# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class DownloadContentType(Enum):
    """An enumeration representing different categories.

    :cvar VIDEO_MP4: "video/mp4"
    :vartype VIDEO_MP4: str
    :cvar AUDIO_M4A: "audio/m4a"
    :vartype AUDIO_M4A: str
    """

    VIDEO_MP4 = "video/mp4"
    AUDIO_M4A = "audio/m4a"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, DownloadContentType._member_map_.values()))


@JsonMap(
    {
        "download_uri": "downloadUri",
        "download_content_type": "downloadContentType",
        "download_size": "downloadSize",
    }
)
class RecordingDownloadModel(BaseModel):
    """RecordingDownloadModel

    :param download_uri: Download URI (available only for webinar host or admin)
    :type download_uri: str
    :param download_content_type: MIME type of the file to download.
    :type download_content_type: DownloadContentType
    :param download_size: Download file size in bytes
    :type download_size: int
    """

    def __init__(
        self,
        download_uri: str,
        download_content_type: DownloadContentType,
        download_size: int,
    ):
        self.download_uri = download_uri
        self.download_content_type = self._enum_matching(
            download_content_type, DownloadContentType.list(), "download_content_type"
        )
        self.download_size = download_size
