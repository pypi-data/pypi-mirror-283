# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .assigned_role_resource import AssignedRoleResource


@JsonMap({"extension_id": "extensionId"})
class ExtensionWithRolesResource(BaseModel):
    """ExtensionWithRolesResource

    :param uri: uri, defaults to None
    :type uri: str, optional
    :param extension_id: extension_id, defaults to None
    :type extension_id: str, optional
    :param roles: roles, defaults to None
    :type roles: List[AssignedRoleResource], optional
    """

    def __init__(
        self,
        uri: str = None,
        extension_id: str = None,
        roles: List[AssignedRoleResource] = None,
    ):
        if uri is not None:
            self.uri = uri
        if extension_id is not None:
            self.extension_id = extension_id
        if roles is not None:
            self.roles = self._define_list(roles, AssignedRoleResource)
