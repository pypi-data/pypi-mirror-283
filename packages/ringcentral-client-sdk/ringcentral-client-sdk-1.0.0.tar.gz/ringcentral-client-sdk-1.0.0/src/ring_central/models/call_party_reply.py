# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .reply_with_pattern import ReplyWithPattern


@JsonMap({"reply_with_text": "replyWithText", "reply_with_pattern": "replyWithPattern"})
class CallPartyReply(BaseModel):
    """CallPartyReply

    :param reply_with_text: Text to reply, defaults to None
    :type reply_with_text: str, optional
    :param reply_with_pattern: reply_with_pattern, defaults to None
    :type reply_with_pattern: ReplyWithPattern, optional
    """

    def __init__(
        self, reply_with_text: str = None, reply_with_pattern: ReplyWithPattern = None
    ):
        if reply_with_text is not None:
            self.reply_with_text = reply_with_text
        if reply_with_pattern is not None:
            self.reply_with_pattern = self._define_object(
                reply_with_pattern, ReplyWithPattern
            )
