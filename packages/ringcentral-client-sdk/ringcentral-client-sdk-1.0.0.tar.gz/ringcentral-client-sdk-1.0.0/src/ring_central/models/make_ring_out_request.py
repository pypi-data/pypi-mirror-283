# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .make_ring_out_caller_info_request_from import MakeRingOutCallerInfoRequestFrom
from .make_ring_out_caller_info_request_to import MakeRingOutCallerInfoRequestTo
from .make_ring_out_caller_id_info import MakeRingOutCallerIdInfo
from .make_ring_out_country_info import MakeRingOutCountryInfo


@JsonMap({"from_": "from", "caller_id": "callerId", "play_prompt": "playPrompt"})
class MakeRingOutRequest(BaseModel):
    """MakeRingOutRequest

    :param from_: Phone number of a caller. This number corresponds to the 1st<br>leg of a RingOut call. This number can be one of the user's configured forwarding<br>numbers or an arbitrary number<br>
    :type from_: MakeRingOutCallerInfoRequestFrom
    :param to: Phone number of a called party. This number corresponds to the<br>2nd leg of a RingOut call<br>
    :type to: MakeRingOutCallerInfoRequestTo
    :param caller_id: Phone number which will be displayed to the called party, defaults to None
    :type caller_id: MakeRingOutCallerIdInfo, optional
    :param play_prompt: Audio prompt that a calling party hears when a call<br>is connected<br>, defaults to None
    :type play_prompt: bool, optional
    :param country: Optional. Dialing plan country data. If not specified, then an extension<br>home country is applied by default<br>, defaults to None
    :type country: MakeRingOutCountryInfo, optional
    """

    def __init__(
        self,
        from_: MakeRingOutCallerInfoRequestFrom,
        to: MakeRingOutCallerInfoRequestTo,
        caller_id: MakeRingOutCallerIdInfo = None,
        play_prompt: bool = None,
        country: MakeRingOutCountryInfo = None,
    ):
        self.from_ = self._define_object(from_, MakeRingOutCallerInfoRequestFrom)
        self.to = self._define_object(to, MakeRingOutCallerInfoRequestTo)
        if caller_id is not None:
            self.caller_id = self._define_object(caller_id, MakeRingOutCallerIdInfo)
        if play_prompt is not None:
            self.play_prompt = play_prompt
        if country is not None:
            self.country = self._define_object(country, MakeRingOutCountryInfo)
