# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class SipInfoRequestTransport(Enum):
    """An enumeration representing different categories.

    :cvar UDP: "UDP"
    :vartype UDP: str
    :cvar TCP: "TCP"
    :vartype TCP: str
    :cvar TLS: "TLS"
    :vartype TLS: str
    :cvar WSS: "WSS"
    :vartype WSS: str
    """

    UDP = "UDP"
    TCP = "TCP"
    TLS = "TLS"
    WSS = "WSS"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, SipInfoRequestTransport._member_map_.values())
        )


@JsonMap({})
class SipInfoRequest(BaseModel):
    """SipInfoRequest

    :param transport: Supported transport. SIP info will be returned for this transport if supported, defaults to None
    :type transport: SipInfoRequestTransport, optional
    """

    def __init__(self, transport: SipInfoRequestTransport = None):
        if transport is not None:
            self.transport = self._enum_matching(
                transport, SipInfoRequestTransport.list(), "transport"
            )
