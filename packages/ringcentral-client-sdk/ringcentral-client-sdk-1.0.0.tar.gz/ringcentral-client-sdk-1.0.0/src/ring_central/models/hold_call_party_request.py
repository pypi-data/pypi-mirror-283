# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class Proto(Enum):
    """An enumeration representing different categories.

    :cvar AUTO: "Auto"
    :vartype AUTO: str
    :cvar RC: "RC"
    :vartype RC: str
    :cvar BROADWORKS: "BroadWorks"
    :vartype BROADWORKS: str
    :cvar DISCONNECTHOLDER: "DisconnectHolder"
    :vartype DISCONNECTHOLDER: str
    """

    AUTO = "Auto"
    RC = "RC"
    BROADWORKS = "BroadWorks"
    DISCONNECTHOLDER = "DisconnectHolder"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, Proto._member_map_.values()))


@JsonMap({})
class HoldCallPartyRequest(BaseModel):
    """HoldCallPartyRequest

    :param proto: Protocol for hold mode initiation, defaults to None
    :type proto: Proto, optional
    """

    def __init__(self, proto: Proto = None):
        if proto is not None:
            self.proto = self._enum_matching(proto, Proto.list(), "proto")
