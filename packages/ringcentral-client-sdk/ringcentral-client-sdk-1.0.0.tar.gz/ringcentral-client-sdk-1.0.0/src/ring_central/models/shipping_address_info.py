# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "customer_name": "customerName",
        "additional_customer_name": "additionalCustomerName",
        "customer_email": "customerEmail",
        "additional_customer_email": "additionalCustomerEmail",
        "customer_phone": "customerPhone",
        "additional_customer_phone": "additionalCustomerPhone",
        "state_id": "stateId",
        "state_iso_code": "stateIsoCode",
        "state_name": "stateName",
        "country_id": "countryId",
        "country_iso_code": "countryIsoCode",
        "country_name": "countryName",
        "tax_id": "taxId",
    }
)
class ShippingAddressInfo(BaseModel):
    """Shipping address for the order. If it coincides with the Emergency
    Service Address, then can be omitted. By default, the same value as the
    emergencyServiceAddress. Multiple addresses can be specified; in case
    an order contains several devices, they can be delivered to different addresses


    :param customer_name: Name of a primary contact person (receiver), defaults to None
    :type customer_name: str, optional
    :param additional_customer_name: Name of an additional contact person. Should be specified for<br>countries except the US, Canada, the UK and Australia.<br>, defaults to None
    :type additional_customer_name: str, optional
    :param customer_email: Email of a primary contact person (receiver). Should be specified<br>for countries except the US, Canada, the UK and Australia.<br>, defaults to None
    :type customer_email: str, optional
    :param additional_customer_email: Email of an additional contact person. Should be specified<br>for countries except the US, Canada, the UK and Australia.<br>, defaults to None
    :type additional_customer_email: str, optional
    :param customer_phone: Phone number of a primary contact person (receiver). Should<br>be specified for countries except the US, Canada, the UK and Australia<br>, defaults to None
    :type customer_phone: str, optional
    :param additional_customer_phone: Phone number of an additional contact person. Should be specified<br>for countries except the US, Canada, the UK & Australia.<br>, defaults to None
    :type additional_customer_phone: str, optional
    :param street: Street address, line 1 - street address, P.O. box, company<br>name, c/o<br>, defaults to None
    :type street: str, optional
    :param street2: Street address, line 2 - apartment, suite, unit, building,<br>floor, etc.<br>, defaults to None
    :type street2: str, optional
    :param city: City name, defaults to None
    :type city: str, optional
    :param state: State/province name, defaults to None
    :type state: str, optional
    :param state_id: Internal identifier of a state, defaults to None
    :type state_id: str, optional
    :param state_iso_code: ISO code of a state, defaults to None
    :type state_iso_code: str, optional
    :param state_name: Full name of a state, defaults to None
    :type state_name: str, optional
    :param country_id: Internal identifier of a country, defaults to None
    :type country_id: str, optional
    :param country_iso_code: ISO code of a country, defaults to None
    :type country_iso_code: str, optional
    :param country: Country name, defaults to None
    :type country: str, optional
    :param country_name: Full name of a country, defaults to None
    :type country_name: str, optional
    :param zip: Zip code, defaults to None
    :type zip: str, optional
    :param tax_id: National taxpayer identification number. Should be specified<br>for Brazil (CNPJ/CPF number) and Argentina (CUIT number).<br>, defaults to None
    :type tax_id: str, optional
    """

    def __init__(
        self,
        customer_name: str = None,
        additional_customer_name: str = None,
        customer_email: str = None,
        additional_customer_email: str = None,
        customer_phone: str = None,
        additional_customer_phone: str = None,
        street: str = None,
        street2: str = None,
        city: str = None,
        state: str = None,
        state_id: str = None,
        state_iso_code: str = None,
        state_name: str = None,
        country_id: str = None,
        country_iso_code: str = None,
        country: str = None,
        country_name: str = None,
        zip: str = None,
        tax_id: str = None,
    ):
        if customer_name is not None:
            self.customer_name = customer_name
        if additional_customer_name is not None:
            self.additional_customer_name = additional_customer_name
        if customer_email is not None:
            self.customer_email = customer_email
        if additional_customer_email is not None:
            self.additional_customer_email = additional_customer_email
        if customer_phone is not None:
            self.customer_phone = customer_phone
        if additional_customer_phone is not None:
            self.additional_customer_phone = additional_customer_phone
        if street is not None:
            self.street = street
        if street2 is not None:
            self.street2 = street2
        if city is not None:
            self.city = city
        if state is not None:
            self.state = state
        if state_id is not None:
            self.state_id = state_id
        if state_iso_code is not None:
            self.state_iso_code = state_iso_code
        if state_name is not None:
            self.state_name = state_name
        if country_id is not None:
            self.country_id = country_id
        if country_iso_code is not None:
            self.country_iso_code = country_iso_code
        if country is not None:
            self.country = country
        if country_name is not None:
            self.country_name = country_name
        if zip is not None:
            self.zip = zip
        if tax_id is not None:
            self.tax_id = tax_id
