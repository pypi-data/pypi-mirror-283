# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .day_of_week import DayOfWeek
from .hours_interval import HoursInterval


@JsonMap({"include_days": "includeDays", "include_hours": "includeHours"})
class AdvancedTimeSettings(BaseModel):
    """Allows more granular control over time included in the report

    :param include_days: Days of the week for which the report is calculated, defaults to None
    :type include_days: List[DayOfWeek], optional
    :param include_hours: Hours of the day for which the report is calculated, defaults to None
    :type include_hours: List[HoursInterval], optional
    """

    def __init__(
        self,
        include_days: List[DayOfWeek] = None,
        include_hours: List[HoursInterval] = None,
    ):
        if include_days is not None:
            self.include_days = self._define_list(include_days, DayOfWeek)
        if include_hours is not None:
            self.include_hours = self._define_list(include_hours, HoursInterval)
