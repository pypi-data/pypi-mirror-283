# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .address_book_bulk_contact_address_info import AddressBookBulkContactAddressInfo


@JsonMap(
    {
        "first_name": "firstName",
        "last_name": "lastName",
        "job_title": "jobTitle",
        "web_page": "webPage",
        "middle_name": "middleName",
        "nick_name": "nickName",
        "home_phone": "homePhone",
        "home_phone2": "homePhone2",
        "business_phone": "businessPhone",
        "business_phone2": "businessPhone2",
        "mobile_phone": "mobilePhone",
        "business_fax": "businessFax",
        "company_phone": "companyPhone",
        "assistant_phone": "assistantPhone",
        "car_phone": "carPhone",
        "other_phone": "otherPhone",
        "other_fax": "otherFax",
        "callback_phone": "callbackPhone",
        "business_address": "businessAddress",
        "home_address": "homeAddress",
        "other_address": "otherAddress",
    }
)
class AddressBookBulkContactResource(BaseModel):
    """AddressBookBulkContactResource

    :param email: Email of a contact, defaults to None
    :type email: str, optional
    :param notes: Notes for a contact, defaults to None
    :type notes: str, optional
    :param company: Company name of a contact, defaults to None
    :type company: str, optional
    :param first_name: First name of a contact, defaults to None
    :type first_name: str, optional
    :param last_name: Last name of a contact, defaults to None
    :type last_name: str, optional
    :param job_title: Job title of a contact, defaults to None
    :type job_title: str, optional
    :param birthday: Date of birth of a contact, defaults to None
    :type birthday: str, optional
    :param web_page: Link to a contact home page, defaults to None
    :type web_page: str, optional
    :param middle_name: Middle name of a contact, defaults to None
    :type middle_name: str, optional
    :param nick_name: Nick name of a contact, defaults to None
    :type nick_name: str, optional
    :param email2: Second email of a contact, defaults to None
    :type email2: str, optional
    :param email3: Third email of the contact, defaults to None
    :type email3: str, optional
    :param home_phone: Home phone number of a contact in e.164 (with "+") format, defaults to None
    :type home_phone: str, optional
    :param home_phone2: Second home phone number of a contact in e.164 (with "+") format, defaults to None
    :type home_phone2: str, optional
    :param business_phone: Business phone of a contact in e.164 (with "+") format, defaults to None
    :type business_phone: str, optional
    :param business_phone2: Second business phone of a contact in e.164 (with "+") format, defaults to None
    :type business_phone2: str, optional
    :param mobile_phone: Mobile phone of the contact in e.164 (with "+") format, defaults to None
    :type mobile_phone: str, optional
    :param business_fax: Business fax number of a contact in e.164 (with "+") format, defaults to None
    :type business_fax: str, optional
    :param company_phone: Company number of a contact in e.164 (with "+") format, defaults to None
    :type company_phone: str, optional
    :param assistant_phone: Phone number of a contact assistant in e.164 (with "+") format, defaults to None
    :type assistant_phone: str, optional
    :param car_phone: Car phone number of a contact in e.164 (with "+") format, defaults to None
    :type car_phone: str, optional
    :param other_phone: Other phone number of a contact in e.164 (with "+") format, defaults to None
    :type other_phone: str, optional
    :param other_fax: Other fax number of a contact in e.164 (with "+") format, defaults to None
    :type other_fax: str, optional
    :param callback_phone: Callback phone number of a contact in e.164 (with "+") format, defaults to None
    :type callback_phone: str, optional
    :param business_address: business_address, defaults to None
    :type business_address: AddressBookBulkContactAddressInfo, optional
    :param home_address: home_address, defaults to None
    :type home_address: AddressBookBulkContactAddressInfo, optional
    :param other_address: other_address, defaults to None
    :type other_address: AddressBookBulkContactAddressInfo, optional
    """

    def __init__(
        self,
        email: str = None,
        notes: str = None,
        company: str = None,
        first_name: str = None,
        last_name: str = None,
        job_title: str = None,
        birthday: str = None,
        web_page: str = None,
        middle_name: str = None,
        nick_name: str = None,
        email2: str = None,
        email3: str = None,
        home_phone: str = None,
        home_phone2: str = None,
        business_phone: str = None,
        business_phone2: str = None,
        mobile_phone: str = None,
        business_fax: str = None,
        company_phone: str = None,
        assistant_phone: str = None,
        car_phone: str = None,
        other_phone: str = None,
        other_fax: str = None,
        callback_phone: str = None,
        business_address: AddressBookBulkContactAddressInfo = None,
        home_address: AddressBookBulkContactAddressInfo = None,
        other_address: AddressBookBulkContactAddressInfo = None,
    ):
        if email is not None:
            self.email = email
        if notes is not None:
            self.notes = notes
        if company is not None:
            self.company = company
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if job_title is not None:
            self.job_title = job_title
        if birthday is not None:
            self.birthday = birthday
        if web_page is not None:
            self.web_page = web_page
        if middle_name is not None:
            self.middle_name = middle_name
        if nick_name is not None:
            self.nick_name = nick_name
        if email2 is not None:
            self.email2 = email2
        if email3 is not None:
            self.email3 = email3
        if home_phone is not None:
            self.home_phone = home_phone
        if home_phone2 is not None:
            self.home_phone2 = home_phone2
        if business_phone is not None:
            self.business_phone = business_phone
        if business_phone2 is not None:
            self.business_phone2 = business_phone2
        if mobile_phone is not None:
            self.mobile_phone = mobile_phone
        if business_fax is not None:
            self.business_fax = business_fax
        if company_phone is not None:
            self.company_phone = company_phone
        if assistant_phone is not None:
            self.assistant_phone = assistant_phone
        if car_phone is not None:
            self.car_phone = car_phone
        if other_phone is not None:
            self.other_phone = other_phone
        if other_fax is not None:
            self.other_fax = other_fax
        if callback_phone is not None:
            self.callback_phone = callback_phone
        if business_address is not None:
            self.business_address = self._define_object(
                business_address, AddressBookBulkContactAddressInfo
            )
        if home_address is not None:
            self.home_address = self._define_object(
                home_address, AddressBookBulkContactAddressInfo
            )
        if other_address is not None:
            self.other_address = self._define_object(
                other_address, AddressBookBulkContactAddressInfo
            )
