# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class DurationUnit(Enum):
    """An enumeration representing different categories.

    :cvar DAY: "Day"
    :vartype DAY: str
    :cvar MONTH: "Month"
    :vartype MONTH: str
    :cvar YEAR: "Year"
    :vartype YEAR: str
    """

    DAY = "Day"
    MONTH = "Month"
    YEAR = "Year"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, DurationUnit._member_map_.values()))


class BillingPlanInfoType(Enum):
    """An enumeration representing different categories.

    :cvar INITIAL: "Initial"
    :vartype INITIAL: str
    :cvar REGULAR: "Regular"
    :vartype REGULAR: str
    :cvar SUSPENDED: "Suspended"
    :vartype SUSPENDED: str
    :cvar TRIAL: "Trial"
    :vartype TRIAL: str
    :cvar TRIALNOCC: "TrialNoCC"
    :vartype TRIALNOCC: str
    :cvar FREE: "Free"
    :vartype FREE: str
    """

    INITIAL = "Initial"
    REGULAR = "Regular"
    SUSPENDED = "Suspended"
    TRIAL = "Trial"
    TRIALNOCC = "TrialNoCC"
    FREE = "Free"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, BillingPlanInfoType._member_map_.values()))


@JsonMap(
    {
        "id_": "id",
        "duration_unit": "durationUnit",
        "type_": "type",
        "included_phone_lines": "includedPhoneLines",
    }
)
class BillingPlanInfo(BaseModel):
    """Information on account billing plan

    :param id_: Internal identifier of a billing plan, defaults to None
    :type id_: str, optional
    :param name: Billing plan name, defaults to None
    :type name: str, optional
    :param duration_unit: Duration period, defaults to None
    :type duration_unit: DurationUnit, optional
    :param duration: Number of duration units, defaults to None
    :type duration: int, optional
    :param type_: Billing plan type, defaults to None
    :type type_: BillingPlanInfoType, optional
    :param included_phone_lines: Included digital lines count, defaults to None
    :type included_phone_lines: int, optional
    """

    def __init__(
        self,
        id_: str = None,
        name: str = None,
        duration_unit: DurationUnit = None,
        duration: int = None,
        type_: BillingPlanInfoType = None,
        included_phone_lines: int = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if name is not None:
            self.name = name
        if duration_unit is not None:
            self.duration_unit = self._enum_matching(
                duration_unit, DurationUnit.list(), "duration_unit"
            )
        if duration is not None:
            self.duration = duration
        if type_ is not None:
            self.type_ = self._enum_matching(type_, BillingPlanInfoType.list(), "type_")
        if included_phone_lines is not None:
            self.included_phone_lines = included_phone_lines
