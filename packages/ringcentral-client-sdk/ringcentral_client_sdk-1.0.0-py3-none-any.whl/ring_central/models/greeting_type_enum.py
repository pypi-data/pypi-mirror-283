# This file was generated by liblab | https://liblab.com/

from enum import Enum


class GreetingTypeEnum(Enum):
    """An enumeration representing different categories.

    :cvar INTRODUCTORY: "Introductory"
    :vartype INTRODUCTORY: str
    :cvar ANNOUNCEMENT: "Announcement"
    :vartype ANNOUNCEMENT: str
    :cvar AUTOMATICRECORDING: "AutomaticRecording"
    :vartype AUTOMATICRECORDING: str
    :cvar BLOCKEDCALLERSALL: "BlockedCallersAll"
    :vartype BLOCKEDCALLERSALL: str
    :cvar BLOCKEDCALLERSSPECIFIC: "BlockedCallersSpecific"
    :vartype BLOCKEDCALLERSSPECIFIC: str
    :cvar BLOCKEDNOCALLERID: "BlockedNoCallerId"
    :vartype BLOCKEDNOCALLERID: str
    :cvar BLOCKEDPAYPHONES: "BlockedPayPhones"
    :vartype BLOCKEDPAYPHONES: str
    :cvar CONNECTINGMESSAGE: "ConnectingMessage"
    :vartype CONNECTINGMESSAGE: str
    :cvar CONNECTINGAUDIO: "ConnectingAudio"
    :vartype CONNECTINGAUDIO: str
    :cvar STARTRECORDING: "StartRecording"
    :vartype STARTRECORDING: str
    :cvar STOPRECORDING: "StopRecording"
    :vartype STOPRECORDING: str
    :cvar VOICEMAIL: "Voicemail"
    :vartype VOICEMAIL: str
    :cvar UNAVAILABLE: "Unavailable"
    :vartype UNAVAILABLE: str
    :cvar INTERRUPTPROMPT: "InterruptPrompt"
    :vartype INTERRUPTPROMPT: str
    :cvar HOLDMUSIC: "HoldMusic"
    :vartype HOLDMUSIC: str
    :cvar COMPANY: "Company"
    :vartype COMPANY: str
    """

    INTRODUCTORY = "Introductory"
    ANNOUNCEMENT = "Announcement"
    AUTOMATICRECORDING = "AutomaticRecording"
    BLOCKEDCALLERSALL = "BlockedCallersAll"
    BLOCKEDCALLERSSPECIFIC = "BlockedCallersSpecific"
    BLOCKEDNOCALLERID = "BlockedNoCallerId"
    BLOCKEDPAYPHONES = "BlockedPayPhones"
    CONNECTINGMESSAGE = "ConnectingMessage"
    CONNECTINGAUDIO = "ConnectingAudio"
    STARTRECORDING = "StartRecording"
    STOPRECORDING = "StopRecording"
    VOICEMAIL = "Voicemail"
    UNAVAILABLE = "Unavailable"
    INTERRUPTPROMPT = "InterruptPrompt"
    HOLDMUSIC = "HoldMusic"
    COMPANY = "Company"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, GreetingTypeEnum._member_map_.values()))
