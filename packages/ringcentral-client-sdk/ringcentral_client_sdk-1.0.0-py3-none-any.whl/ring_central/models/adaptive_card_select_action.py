# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class AdaptiveCardSelectActionType(Enum):
    """An enumeration representing different categories.

    :cvar ACTION_SUBMIT: "Action.Submit"
    :vartype ACTION_SUBMIT: str
    :cvar ACTION_OPENURL: "Action.OpenUrl"
    :vartype ACTION_OPENURL: str
    :cvar ACTION_TOGGLEVISIBILITY: "Action.ToggleVisibility"
    :vartype ACTION_TOGGLEVISIBILITY: str
    """

    ACTION_SUBMIT = "Action.Submit"
    ACTION_OPENURL = "Action.OpenUrl"
    ACTION_TOGGLEVISIBILITY = "Action.ToggleVisibility"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, AdaptiveCardSelectActionType._member_map_.values())
        )


@JsonMap({"type_": "type"})
class AdaptiveCardSelectAction(BaseModel):
    """An action that will be invoked when the card is tapped or selected. `Action.ShowCard` is not supported

    :param type_: type_
    :type type_: AdaptiveCardSelectActionType
    """

    def __init__(self, type_: AdaptiveCardSelectActionType):
        self.type_ = self._enum_matching(
            type_, AdaptiveCardSelectActionType.list(), "type_"
        )
