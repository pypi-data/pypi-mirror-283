# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"id_": "id"})
class TmCreateTeamRequestMembers(BaseModel):
    """TmCreateTeamRequestMembers

    :param id_: Internal identifier of a person, defaults to None
    :type id_: str, optional
    :param email: Email of a person, defaults to None
    :type email: str, optional
    """

    def __init__(self, id_: str = None, email: str = None):
        if id_ is not None:
            self.id_ = id_
        if email is not None:
            self.email = email


@JsonMap({})
class TmCreateTeamRequest(BaseModel):
    """TmCreateTeamRequest

    :param public: Team access level., defaults to None
    :type public: bool, optional
    :param name: Team name.
    :type name: str
    :param description: Team description., defaults to None
    :type description: str, optional
    :param members: Identifier(s) of team members., defaults to None
    :type members: List[TmCreateTeamRequestMembers], optional
    """

    def __init__(
        self,
        name: str,
        public: bool = None,
        description: str = None,
        members: List[TmCreateTeamRequestMembers] = None,
    ):
        if public is not None:
            self.public = public
        self.name = name
        if description is not None:
            self.description = description
        if members is not None:
            self.members = self._define_list(members, TmCreateTeamRequestMembers)
