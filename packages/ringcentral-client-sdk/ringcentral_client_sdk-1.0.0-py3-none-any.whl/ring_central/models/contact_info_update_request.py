# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .contact_business_address_info import ContactBusinessAddressInfo
from .pronounced_name_info import PronouncedNameInfo


@JsonMap(
    {
        "first_name": "firstName",
        "last_name": "lastName",
        "job_title": "jobTitle",
        "business_phone": "businessPhone",
        "mobile_phone": "mobilePhone",
        "business_address": "businessAddress",
        "email_as_login_name": "emailAsLoginName",
        "pronounced_name": "pronouncedName",
    }
)
class ContactInfoUpdateRequest(BaseModel):
    """ContactInfoUpdateRequest

    :param first_name: For User extension type only. Extension user first name<br>, defaults to None
    :type first_name: str, optional
    :param last_name: For User extension type only. Extension user last name<br>, defaults to None
    :type last_name: str, optional
    :param company: Extension user company name, defaults to None
    :type company: str, optional
    :param job_title: job_title, defaults to None
    :type job_title: str, optional
    :param email: Email of extension user, defaults to None
    :type email: str, optional
    :param business_phone: Extension user contact phone number in<br>[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)<br>format<br>, defaults to None
    :type business_phone: str, optional
    :param mobile_phone: Extension user mobile (**non** Toll Free) phone number in<br>[E.164](https://www.itu.int/rec/T-REC-E.164-201011-I)<br>(with '+' sign) format<br>, defaults to None
    :type mobile_phone: str, optional
    :param business_address: User's business address. The default is<br>Company (Auto-Receptionist) settings<br>, defaults to None
    :type business_address: ContactBusinessAddressInfo, optional
    :param email_as_login_name: If `true` then contact email is enabled as login name for<br>this user. Please note that email should be unique in this case.<br>The default value is `false`<br>, defaults to None
    :type email_as_login_name: bool, optional
    :param pronounced_name: pronounced_name, defaults to None
    :type pronounced_name: PronouncedNameInfo, optional
    :param department: Extension user department, if any, defaults to None
    :type department: str, optional
    """

    def __init__(
        self,
        first_name: str = None,
        last_name: str = None,
        company: str = None,
        job_title: str = None,
        email: str = None,
        business_phone: str = None,
        mobile_phone: str = None,
        business_address: ContactBusinessAddressInfo = None,
        email_as_login_name: bool = None,
        pronounced_name: PronouncedNameInfo = None,
        department: str = None,
    ):
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if company is not None:
            self.company = company
        if job_title is not None:
            self.job_title = job_title
        if email is not None:
            self.email = email
        if business_phone is not None:
            self.business_phone = business_phone
        if mobile_phone is not None:
            self.mobile_phone = mobile_phone
        if business_address is not None:
            self.business_address = self._define_object(
                business_address, ContactBusinessAddressInfo
            )
        if email_as_login_name is not None:
            self.email_as_login_name = email_as_login_name
        if pronounced_name is not None:
            self.pronounced_name = self._define_object(
                pronounced_name, PronouncedNameInfo
            )
        if department is not None:
            self.department = department
