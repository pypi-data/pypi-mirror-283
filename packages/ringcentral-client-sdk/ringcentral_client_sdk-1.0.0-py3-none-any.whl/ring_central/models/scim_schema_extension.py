# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class ScimSchemaExtensionSchema(Enum):
    """An enumeration representing different categories.

    :cvar URN_IETF_PARAMS_SCIM_SCHEMAS_EXTENSION_ENTERPRISE_2_0_USER: "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
    :vartype URN_IETF_PARAMS_SCIM_SCHEMAS_EXTENSION_ENTERPRISE_2_0_USER: str
    """

    URN_IETF_PARAMS_SCIM_SCHEMAS_EXTENSION_ENTERPRISE_2_0_USER = (
        "urn:ietf:params:scim:schemas:extension:enterprise:2.0:User"
    )

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, ScimSchemaExtensionSchema._member_map_.values())
        )


@JsonMap({})
class ScimSchemaExtension(BaseModel):
    """ScimSchemaExtension

    :param schema: schema
    :type schema: ScimSchemaExtensionSchema
    :param required: required
    :type required: bool
    """

    def __init__(self, schema: ScimSchemaExtensionSchema, required: bool):
        self.schema = self._enum_matching(
            schema, ScimSchemaExtensionSchema.list(), "schema"
        )
        self.required = required
