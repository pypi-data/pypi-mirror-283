# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class ExtensionInfoGrantsType(Enum):
    """An enumeration representing different categories.

    :cvar USER: "User"
    :vartype USER: str
    :cvar FAX_USER: "Fax User"
    :vartype FAX_USER: str
    :cvar VIRTUALUSER: "VirtualUser"
    :vartype VIRTUALUSER: str
    :cvar DIGITALUSER: "DigitalUser"
    :vartype DIGITALUSER: str
    :cvar DEPARTMENT: "Department"
    :vartype DEPARTMENT: str
    :cvar ANNOUNCEMENT: "Announcement"
    :vartype ANNOUNCEMENT: str
    :cvar VOICEMAIL: "Voicemail"
    :vartype VOICEMAIL: str
    :cvar SHAREDLINESGROUP: "SharedLinesGroup"
    :vartype SHAREDLINESGROUP: str
    :cvar PAGINGONLY: "PagingOnly"
    :vartype PAGINGONLY: str
    :cvar IVRMENU: "IvrMenu"
    :vartype IVRMENU: str
    :cvar APPLICATIONEXTENSION: "ApplicationExtension"
    :vartype APPLICATIONEXTENSION: str
    :cvar PARKLOCATION: "ParkLocation"
    :vartype PARKLOCATION: str
    :cvar DELEGATEDLINESGROUP: "DelegatedLinesGroup"
    :vartype DELEGATEDLINESGROUP: str
    """

    USER = "User"
    FAX_USER = "Fax User"
    VIRTUALUSER = "VirtualUser"
    DIGITALUSER = "DigitalUser"
    DEPARTMENT = "Department"
    ANNOUNCEMENT = "Announcement"
    VOICEMAIL = "Voicemail"
    SHAREDLINESGROUP = "SharedLinesGroup"
    PAGINGONLY = "PagingOnly"
    IVRMENU = "IvrMenu"
    APPLICATIONEXTENSION = "ApplicationExtension"
    PARKLOCATION = "ParkLocation"
    DELEGATEDLINESGROUP = "DelegatedLinesGroup"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, ExtensionInfoGrantsType._member_map_.values())
        )


@JsonMap({"id_": "id", "extension_number": "extensionNumber", "type_": "type"})
class ExtensionInfoGrants(BaseModel):
    """Extension information

    :param id_: Internal identifier of an extension, defaults to None
    :type id_: str, optional
    :param uri: Canonical URI of an extension, defaults to None
    :type uri: str, optional
    :param extension_number: Extension short number (usually 3 or 4 digits), defaults to None
    :type extension_number: str, optional
    :param name: Name of extension, defaults to None
    :type name: str, optional
    :param type_: Extension type. Please note that legacy 'Department'<br>extension type corresponds to 'Call Queue' extensions in modern RingCentral<br>product terminology<br>, defaults to None
    :type type_: ExtensionInfoGrantsType, optional
    """

    def __init__(
        self,
        id_: str = None,
        uri: str = None,
        extension_number: str = None,
        name: str = None,
        type_: ExtensionInfoGrantsType = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if uri is not None:
            self.uri = uri
        if extension_number is not None:
            self.extension_number = extension_number
        if name is not None:
            self.name = name
        if type_ is not None:
            self.type_ = self._enum_matching(
                type_, ExtensionInfoGrantsType.list(), "type_"
            )
