# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .fax_resolution_enum import FaxResolutionEnum
from .fax_request_to import FaxRequestTo


@JsonMap(
    {
        "fax_resolution": "faxResolution",
        "send_time": "sendTime",
        "iso_code": "isoCode",
        "cover_index": "coverIndex",
        "cover_page_text": "coverPageText",
    }
)
class CreateFaxMessageRequest(BaseModel):
    """CreateFaxMessageRequest

    :param attachment: File to upload
    :type attachment: any
    :param fax_resolution: Fax only. Resolution of a fax message. 'High' for black and<br>white image scanned at 200 dpi, 'Low' for black and white image scanned<br>at 100 dpi<br>, defaults to None
    :type fax_resolution: FaxResolutionEnum, optional
    :param to: Recipient's phone number(s)
    :type to: List[FaxRequestTo]
    :param send_time: Timestamp to send a fax at. If not specified, current or the past<br>a fax message is sent immediately<br>, defaults to None
    :type send_time: str, optional
    :param iso_code: Alpha-2 ISO Code of a country, defaults to None
    :type iso_code: str, optional
    :param cover_index: Cover page identifier. If `coverIndex` is set to '0' (zero) a cover page<br>is not attached. For a list of available cover page identifiers (1-13)<br>please call the Fax Cover Pages method. If not specified, the default cover<br>page is attached (which is configured in 'Outbound Fax Settings')<br>, defaults to None
    :type cover_index: int, optional
    :param cover_page_text: Cover page text, entered by a fax sender and printed<br>on a cover page. Maximum length is limited to 1024 symbols<br>, defaults to None
    :type cover_page_text: str, optional
    """

    def __init__(
        self,
        attachment: any,
        to: List[FaxRequestTo],
        fax_resolution: FaxResolutionEnum = None,
        send_time: str = None,
        iso_code: str = None,
        cover_index: int = None,
        cover_page_text: str = None,
    ):
        self.attachment = attachment
        if fax_resolution is not None:
            self.fax_resolution = self._enum_matching(
                fax_resolution, FaxResolutionEnum.list(), "fax_resolution"
            )
        self.to = self._define_list(to, FaxRequestTo)
        if send_time is not None:
            self.send_time = send_time
        if iso_code is not None:
            self.iso_code = iso_code
        if cover_index is not None:
            self.cover_index = cover_index
        if cover_page_text is not None:
            self.cover_page_text = cover_page_text
