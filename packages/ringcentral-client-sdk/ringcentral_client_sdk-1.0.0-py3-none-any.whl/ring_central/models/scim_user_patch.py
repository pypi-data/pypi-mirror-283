# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .scim_patch_operation import ScimPatchOperation


class ScimUserPatchSchemas(Enum):
    """An enumeration representing different categories.

    :cvar URN_IETF_PARAMS_SCIM_API_MESSAGES_2_0_PATCHOP: "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    :vartype URN_IETF_PARAMS_SCIM_API_MESSAGES_2_0_PATCHOP: str
    """

    URN_IETF_PARAMS_SCIM_API_MESSAGES_2_0_PATCHOP = (
        "urn:ietf:params:scim:api:messages:2.0:PatchOp"
    )

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, ScimUserPatchSchemas._member_map_.values()))


@JsonMap({"operations": "Operations"})
class ScimUserPatch(BaseModel):
    """ScimUserPatch

    :param operations: Patch operations list
    :type operations: List[ScimPatchOperation]
    :param schemas: schemas
    :type schemas: List[ScimUserPatchSchemas]
    """

    def __init__(
        self, operations: List[ScimPatchOperation], schemas: List[ScimUserPatchSchemas]
    ):
        self.operations = self._define_list(operations, ScimPatchOperation)
        self.schemas = self._define_list(schemas, ScimUserPatchSchemas)
