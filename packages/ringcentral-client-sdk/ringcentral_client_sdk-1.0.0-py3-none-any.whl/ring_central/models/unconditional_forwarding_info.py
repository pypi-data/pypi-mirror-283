# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class UnconditionalForwardingInfoAction(Enum):
    """An enumeration representing different categories.

    :cvar HOLDTIMEEXPIRATION: "HoldTimeExpiration"
    :vartype HOLDTIMEEXPIRATION: str
    :cvar MAXCALLERS: "MaxCallers"
    :vartype MAXCALLERS: str
    :cvar NOANSWER: "NoAnswer"
    :vartype NOANSWER: str
    """

    HOLDTIMEEXPIRATION = "HoldTimeExpiration"
    MAXCALLERS = "MaxCallers"
    NOANSWER = "NoAnswer"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                UnconditionalForwardingInfoAction._member_map_.values(),
            )
        )


@JsonMap({"phone_number": "phoneNumber"})
class UnconditionalForwardingInfo(BaseModel):
    """Unconditional forwarding parameters.
    Returned if 'UnconditionalForwarding' value is specified for the `callHandlingAction` parameter


    :param phone_number: Phone number to which the call is forwarded. In addition to<br>common e.164 format, the following number patterns are supported: 11xxxxxxxxxxx,<br>444xxxxxxxxxxx, 616xxxxxxxxxxx, 1700yyyy; where xxxxxxxxxxx is a phone number in<br>e.164 format (without '+' sign) and yyyy is an external short extension number.<br>Max number of digits is 15<br>, defaults to None
    :type phone_number: str, optional
    :param action: Event that initiates forwarding to the specified phone number, defaults to None
    :type action: UnconditionalForwardingInfoAction, optional
    """

    def __init__(
        self, phone_number: str = None, action: UnconditionalForwardingInfoAction = None
    ):
        if phone_number is not None:
            self.phone_number = phone_number
        if action is not None:
            self.action = self._enum_matching(
                action, UnconditionalForwardingInfoAction.list(), "action"
            )
