# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .answering_rule_info import AnsweringRuleInfo
from .enumerated_paging_model import EnumeratedPagingModel
from .page_navigation_model import PageNavigationModel


@JsonMap({})
class UserAnsweringRuleList(BaseModel):
    """UserAnsweringRuleList

    :param uri: Canonical URI of an answering rule list resource, defaults to None
    :type uri: str, optional
    :param records: List of answering rules, defaults to None
    :type records: List[AnsweringRuleInfo], optional
    :param paging: paging, defaults to None
    :type paging: EnumeratedPagingModel, optional
    :param navigation: Links to other pages of the current result set, defaults to None
    :type navigation: PageNavigationModel, optional
    """

    def __init__(
        self,
        uri: str = None,
        records: List[AnsweringRuleInfo] = None,
        paging: EnumeratedPagingModel = None,
        navigation: PageNavigationModel = None,
    ):
        if uri is not None:
            self.uri = uri
        if records is not None:
            self.records = self._define_list(records, AnsweringRuleInfo)
        if paging is not None:
            self.paging = self._define_object(paging, EnumeratedPagingModel)
        if navigation is not None:
            self.navigation = self._define_object(navigation, PageNavigationModel)
