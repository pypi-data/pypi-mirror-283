# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .personal_contact_resource import PersonalContactResource
from .sync_info import SyncInfo


@JsonMap(
    {
        "sync_info": "syncInfo",
        "next_page_id": "nextPageId",
        "next_page_uri": "nextPageUri",
    }
)
class AddressBookSync(BaseModel):
    """AddressBookSync

    :param uri: uri, defaults to None
    :type uri: str, optional
    :param records: records, defaults to None
    :type records: List[PersonalContactResource], optional
    :param sync_info: sync_info, defaults to None
    :type sync_info: SyncInfo, optional
    :param next_page_id: next_page_id, defaults to None
    :type next_page_id: int, optional
    :param next_page_uri: next_page_uri, defaults to None
    :type next_page_uri: str, optional
    """

    def __init__(
        self,
        uri: str = None,
        records: List[PersonalContactResource] = None,
        sync_info: SyncInfo = None,
        next_page_id: int = None,
        next_page_uri: str = None,
    ):
        if uri is not None:
            self.uri = uri
        if records is not None:
            self.records = self._define_list(records, PersonalContactResource)
        if sync_info is not None:
            self.sync_info = self._define_object(sync_info, SyncInfo)
        if next_page_id is not None:
            self.next_page_id = next_page_id
        if next_page_uri is not None:
            self.next_page_uri = next_page_uri
