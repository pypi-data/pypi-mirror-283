# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .profile_image_info_uri import ProfileImageInfoUri


@JsonMap({"last_modified": "lastModified", "content_type": "contentType"})
class ProfileImageInfo(BaseModel):
    """Information on profile image

    :param uri: Link to a profile image. If an image is not uploaded for an<br>extension, only `uri` is returned<br>
    :type uri: str
    :param etag: Identifier of an image, defaults to None
    :type etag: str, optional
    :param last_modified: Date/time when an image was last updated, in ISO 8601 format,<br>for example 2016-03-10T18:07:52.534Z<br>, defaults to None
    :type last_modified: str, optional
    :param content_type: The type of image, defaults to None
    :type content_type: str, optional
    :param scales: List of URIs to profile images in different dimensions<br>, defaults to None
    :type scales: List[ProfileImageInfoUri], optional
    """

    def __init__(
        self,
        uri: str,
        etag: str = None,
        last_modified: str = None,
        content_type: str = None,
        scales: List[ProfileImageInfoUri] = None,
    ):
        self.uri = uri
        if etag is not None:
            self.etag = etag
        if last_modified is not None:
            self.last_modified = last_modified
        if content_type is not None:
            self.content_type = content_type
        if scales is not None:
            self.scales = self._define_list(scales, ProfileImageInfoUri)
