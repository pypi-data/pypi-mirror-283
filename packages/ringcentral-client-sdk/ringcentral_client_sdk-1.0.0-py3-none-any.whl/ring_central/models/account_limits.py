# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "free_soft_phone_lines_per_extension": "freeSoftPhoneLinesPerExtension",
        "meeting_size": "meetingSize",
        "cloud_recording_storage": "cloudRecordingStorage",
        "max_monitored_extensions_per_user": "maxMonitoredExtensionsPerUser",
        "max_extension_number_length": "maxExtensionNumberLength",
        "site_code_length": "siteCodeLength",
        "short_extension_number_length": "shortExtensionNumberLength",
    }
)
class AccountLimits(BaseModel):
    """Limits which are effective for the account

    :param free_soft_phone_lines_per_extension: Max number of free softphone phone lines per user extension<br>, defaults to None
    :type free_soft_phone_lines_per_extension: int, optional
    :param meeting_size: Max number of participants in RingCentral meeting hosted by<br>this account's user<br>, defaults to None
    :type meeting_size: int, optional
    :param cloud_recording_storage: Meetings recording cloud storage limitation in Gb<br>, defaults to None
    :type cloud_recording_storage: int, optional
    :param max_monitored_extensions_per_user: Max number of extensions which can be included in the list<br>of users monitored for Presence<br>, defaults to None
    :type max_monitored_extensions_per_user: int, optional
    :param max_extension_number_length: Max length of extension numbers of an account; the supported<br>value is up to 8 symbols, depends on account type<br>, defaults to None
    :type max_extension_number_length: int, optional
    :param site_code_length: Length of a site code, defaults to None
    :type site_code_length: int, optional
    :param short_extension_number_length: Length of a short extension number, defaults to None
    :type short_extension_number_length: int, optional
    """

    def __init__(
        self,
        free_soft_phone_lines_per_extension: int = None,
        meeting_size: int = None,
        cloud_recording_storage: int = None,
        max_monitored_extensions_per_user: int = None,
        max_extension_number_length: int = None,
        site_code_length: int = None,
        short_extension_number_length: int = None,
    ):
        if free_soft_phone_lines_per_extension is not None:
            self.free_soft_phone_lines_per_extension = (
                free_soft_phone_lines_per_extension
            )
        if meeting_size is not None:
            self.meeting_size = meeting_size
        if cloud_recording_storage is not None:
            self.cloud_recording_storage = cloud_recording_storage
        if max_monitored_extensions_per_user is not None:
            self.max_monitored_extensions_per_user = max_monitored_extensions_per_user
        if max_extension_number_length is not None:
            self.max_extension_number_length = max_extension_number_length
        if site_code_length is not None:
            self.site_code_length = site_code_length
        if short_extension_number_length is not None:
            self.short_extension_number_length = short_extension_number_length
