# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .caller_id_by_device import CallerIdByDevice
from .caller_id_by_feature import CallerIdByFeature


@JsonMap(
    {
        "by_device": "byDevice",
        "by_feature": "byFeature",
        "extension_name_for_outbound_calls": "extensionNameForOutboundCalls",
        "extension_number_for_internal_calls": "extensionNumberForInternalCalls",
    }
)
class ExtensionCallerIdInfo(BaseModel):
    """ExtensionCallerIdInfo

    :param uri: Canonical URL of a caller ID resource, defaults to None
    :type uri: str, optional
    :param by_device: by_device, defaults to None
    :type by_device: List[CallerIdByDevice], optional
    :param by_feature: by_feature, defaults to None
    :type by_feature: List[CallerIdByFeature], optional
    :param extension_name_for_outbound_calls: If `true`, then user first name and last name will be used<br>as caller ID when making outbound calls from extension<br>, defaults to None
    :type extension_name_for_outbound_calls: bool, optional
    :param extension_number_for_internal_calls: If `true`, then extension number will be used as caller ID<br>when making internal calls<br>, defaults to None
    :type extension_number_for_internal_calls: bool, optional
    """

    def __init__(
        self,
        uri: str = None,
        by_device: List[CallerIdByDevice] = None,
        by_feature: List[CallerIdByFeature] = None,
        extension_name_for_outbound_calls: bool = None,
        extension_number_for_internal_calls: bool = None,
    ):
        if uri is not None:
            self.uri = uri
        if by_device is not None:
            self.by_device = self._define_list(by_device, CallerIdByDevice)
        if by_feature is not None:
            self.by_feature = self._define_list(by_feature, CallerIdByFeature)
        if extension_name_for_outbound_calls is not None:
            self.extension_name_for_outbound_calls = extension_name_for_outbound_calls
        if extension_number_for_internal_calls is not None:
            self.extension_number_for_internal_calls = (
                extension_number_for_internal_calls
            )
