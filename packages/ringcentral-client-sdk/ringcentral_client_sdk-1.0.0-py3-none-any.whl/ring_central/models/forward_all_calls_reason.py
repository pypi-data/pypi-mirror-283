# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class ForwardAllCallsReasonCode(Enum):
    """An enumeration representing different categories.

    :cvar EXTENSIONLIMITATION: "ExtensionLimitation"
    :vartype EXTENSIONLIMITATION: str
    :cvar FEATURELIMITATION: "FeatureLimitation"
    :vartype FEATURELIMITATION: str
    """

    EXTENSIONLIMITATION = "ExtensionLimitation"
    FEATURELIMITATION = "FeatureLimitation"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, ForwardAllCallsReasonCode._member_map_.values())
        )


@JsonMap({})
class ForwardAllCallsReason(BaseModel):
    """ForwardAllCallsReason

    :param code: Specifies the type of limitation. `ExtensionLimitation` means that the feature is turned off for this particular extension.<br>`FeatureLimitation` means that the user may enable this feature and setup the rule via the Service Web UI<br>, defaults to None
    :type code: ForwardAllCallsReasonCode, optional
    :param message: Error message depending on the type of limitation, defaults to None
    :type message: str, optional
    """

    def __init__(self, code: ForwardAllCallsReasonCode = None, message: str = None):
        if code is not None:
            self.code = self._enum_matching(
                code, ForwardAllCallsReasonCode.list(), "code"
            )
        if message is not None:
            self.message = message
