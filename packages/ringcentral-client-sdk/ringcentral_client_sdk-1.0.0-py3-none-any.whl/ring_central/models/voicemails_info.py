# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "notify_by_email": "notifyByEmail",
        "notify_by_sms": "notifyBySms",
        "advanced_email_addresses": "advancedEmailAddresses",
        "advanced_sms_email_addresses": "advancedSmsEmailAddresses",
        "include_attachment": "includeAttachment",
        "include_transcription": "includeTranscription",
        "mark_as_read": "markAsRead",
    }
)
class VoicemailsInfo(BaseModel):
    """VoicemailsInfo

    :param notify_by_email: Email notification flag, defaults to None
    :type notify_by_email: bool, optional
    :param notify_by_sms: SMS notification flag, defaults to None
    :type notify_by_sms: bool, optional
    :param advanced_email_addresses: List of recipient email addresses for voicemail notifications.<br>Returned if specified, in both modes (advanced/basic). Applied in advanced<br>mode only<br>, defaults to None
    :type advanced_email_addresses: List[str], optional
    :param advanced_sms_email_addresses: List of recipient phone numbers for voicemail notifications.<br>Returned if specified, in both modes (advanced/basic). Applied in advanced<br>mode only<br>, defaults to None
    :type advanced_sms_email_addresses: List[str], optional
    :param include_attachment: Indicates whether voicemail should be attached to email<br>, defaults to None
    :type include_attachment: bool, optional
    :param include_transcription: Specifies whether to add voicemail transcription or not<br>, defaults to None
    :type include_transcription: bool, optional
    :param mark_as_read: Indicates whether a voicemail should be automatically marked<br>as read<br>, defaults to None
    :type mark_as_read: bool, optional
    """

    def __init__(
        self,
        notify_by_email: bool = None,
        notify_by_sms: bool = None,
        advanced_email_addresses: List[str] = None,
        advanced_sms_email_addresses: List[str] = None,
        include_attachment: bool = None,
        include_transcription: bool = None,
        mark_as_read: bool = None,
    ):
        if notify_by_email is not None:
            self.notify_by_email = notify_by_email
        if notify_by_sms is not None:
            self.notify_by_sms = notify_by_sms
        if advanced_email_addresses is not None:
            self.advanced_email_addresses = advanced_email_addresses
        if advanced_sms_email_addresses is not None:
            self.advanced_sms_email_addresses = advanced_sms_email_addresses
        if include_attachment is not None:
            self.include_attachment = include_attachment
        if include_transcription is not None:
            self.include_transcription = include_transcription
        if mark_as_read is not None:
            self.mark_as_read = mark_as_read
