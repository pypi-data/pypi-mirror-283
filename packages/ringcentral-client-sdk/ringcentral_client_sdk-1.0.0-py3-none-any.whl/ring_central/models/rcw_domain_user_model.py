# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class Domain(Enum):
    """An enumeration representing different categories.

    :cvar PBX: "pbx"
    :vartype PBX: str
    :cvar ILM: "ilm"
    :vartype ILM: str
    """

    PBX = "pbx"
    ILM = "ilm"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, Domain._member_map_.values()))


@JsonMap({"user_id": "userId", "account_id": "accountId"})
class RcwDomainUserModel(BaseModel):
    """RcwDomainUserModel

    :param user_id: User ID
    :type user_id: str
    :param account_id: Account ID
    :type account_id: str
    :param domain: Identity domain
    :type domain: Domain
    """

    def __init__(self, user_id: str, account_id: str, domain: Domain):
        self.user_id = user_id
        self.account_id = account_id
        self.domain = self._enum_matching(domain, Domain.list(), "domain")
