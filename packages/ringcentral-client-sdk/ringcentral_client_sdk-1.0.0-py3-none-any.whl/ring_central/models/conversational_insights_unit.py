# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .conversational_insights_unit_values import ConversationalInsightsUnitValues


class ConversationalInsightsUnitName(Enum):
    """An enumeration representing different categories.

    :cvar EXTRACTIVESUMMARY: "ExtractiveSummary"
    :vartype EXTRACTIVESUMMARY: str
    :cvar ABSTRACTIVESUMMARYLONG: "AbstractiveSummaryLong"
    :vartype ABSTRACTIVESUMMARYLONG: str
    :cvar ABSTRACTIVESUMMARYSHORT: "AbstractiveSummaryShort"
    :vartype ABSTRACTIVESUMMARYSHORT: str
    :cvar KEYPHRASES: "KeyPhrases"
    :vartype KEYPHRASES: str
    :cvar QUESTIONSASKED: "QuestionsAsked"
    :vartype QUESTIONSASKED: str
    :cvar OVERALLSENTIMENT: "OverallSentiment"
    :vartype OVERALLSENTIMENT: str
    :cvar TOPICS: "Topics"
    :vartype TOPICS: str
    """

    EXTRACTIVESUMMARY = "ExtractiveSummary"
    ABSTRACTIVESUMMARYLONG = "AbstractiveSummaryLong"
    ABSTRACTIVESUMMARYSHORT = "AbstractiveSummaryShort"
    KEYPHRASES = "KeyPhrases"
    QUESTIONSASKED = "QuestionsAsked"
    OVERALLSENTIMENT = "OverallSentiment"
    TOPICS = "Topics"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, ConversationalInsightsUnitName._member_map_.values())
        )


@JsonMap({})
class ConversationalInsightsUnit(BaseModel):
    """ConversationalInsightsUnit

    :param name: name
    :type name: ConversationalInsightsUnitName
    :param values: values
    :type values: List[ConversationalInsightsUnitValues]
    """

    def __init__(
        self,
        name: ConversationalInsightsUnitName,
        values: List[ConversationalInsightsUnitValues],
    ):
        self.name = self._enum_matching(
            name, ConversationalInsightsUnitName.list(), "name"
        )
        self.values = self._define_list(values, ConversationalInsightsUnitValues)
