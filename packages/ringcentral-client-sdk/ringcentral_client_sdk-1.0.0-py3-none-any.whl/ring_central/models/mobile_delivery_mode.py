# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class MobileDeliveryModeTransportType(Enum):
    """An enumeration representing different categories.

    :cvar RC_APNS: "RC/APNS"
    :vartype RC_APNS: str
    :cvar RC_GCM: "RC/GCM"
    :vartype RC_GCM: str
    """

    RC_APNS = "RC/APNS"
    RC_GCM = "RC/GCM"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value, MobileDeliveryModeTransportType._member_map_.values()
            )
        )


class MobileDeliveryModeEncryption(Enum):
    """An enumeration representing different categories.

    :cvar FALSE: "false"
    :vartype FALSE: str
    """

    FALSE = "false"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, MobileDeliveryModeEncryption._member_map_.values())
        )


@JsonMap(
    {
        "transport_type": "transportType",
        "certificate_name": "certificateName",
        "registration_id": "registrationId",
    }
)
class MobileDeliveryMode(BaseModel):
    """MobileDeliveryMode

    :param transport_type: The transport type for this subscription, or the channel by which an app should be notified of an event
    :type transport_type: MobileDeliveryModeTransportType
    :param certificate_name: Certificate name for mobile notification transports
    :type certificate_name: str
    :param registration_id: Device instance ID for mobile notification transports
    :type registration_id: str
    :param encryption: Specifies if notification messages will be encrypted or not.
    :type encryption: MobileDeliveryModeEncryption
    """

    def __init__(
        self,
        transport_type: MobileDeliveryModeTransportType,
        certificate_name: str,
        registration_id: str,
        encryption: MobileDeliveryModeEncryption,
    ):
        self.transport_type = self._enum_matching(
            transport_type, MobileDeliveryModeTransportType.list(), "transport_type"
        )
        self.certificate_name = certificate_name
        self.registration_id = registration_id
        self.encryption = self._enum_matching(
            encryption, MobileDeliveryModeEncryption.list(), "encryption"
        )
