# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .company_answering_rule_time_interval_request import (
    CompanyAnsweringRuleTimeIntervalRequest,
)


@JsonMap({})
class CompanyAnsweringRuleWeeklyScheduleInfoRequest(BaseModel):
    """Weekly schedule. If specified, ranges cannot be specified

    :param monday: Time interval for a particular day, defaults to None
    :type monday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    :param tuesday: Time interval for a particular day, defaults to None
    :type tuesday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    :param wednesday: Time interval for a particular day, defaults to None
    :type wednesday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    :param thursday: Time interval for a particular day, defaults to None
    :type thursday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    :param friday: Time interval for a particular day, defaults to None
    :type friday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    :param saturday: Time interval for a particular day, defaults to None
    :type saturday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    :param sunday: Time interval for a particular day, defaults to None
    :type sunday: List[CompanyAnsweringRuleTimeIntervalRequest], optional
    """

    def __init__(
        self,
        monday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
        tuesday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
        wednesday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
        thursday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
        friday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
        saturday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
        sunday: List[CompanyAnsweringRuleTimeIntervalRequest] = None,
    ):
        if monday is not None:
            self.monday = self._define_list(
                monday, CompanyAnsweringRuleTimeIntervalRequest
            )
        if tuesday is not None:
            self.tuesday = self._define_list(
                tuesday, CompanyAnsweringRuleTimeIntervalRequest
            )
        if wednesday is not None:
            self.wednesday = self._define_list(
                wednesday, CompanyAnsweringRuleTimeIntervalRequest
            )
        if thursday is not None:
            self.thursday = self._define_list(
                thursday, CompanyAnsweringRuleTimeIntervalRequest
            )
        if friday is not None:
            self.friday = self._define_list(
                friday, CompanyAnsweringRuleTimeIntervalRequest
            )
        if saturday is not None:
            self.saturday = self._define_list(
                saturday, CompanyAnsweringRuleTimeIntervalRequest
            )
        if sunday is not None:
            self.sunday = self._define_list(
                sunday, CompanyAnsweringRuleTimeIntervalRequest
            )
