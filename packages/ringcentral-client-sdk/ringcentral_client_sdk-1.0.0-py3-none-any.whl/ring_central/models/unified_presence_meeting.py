# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class UnifiedPresenceMeetingStatus(Enum):
    """An enumeration representing different categories.

    :cvar NOMEETING: "NoMeeting"
    :vartype NOMEETING: str
    :cvar INMEETING: "InMeeting"
    :vartype INMEETING: str
    """

    NOMEETING = "NoMeeting"
    INMEETING = "InMeeting"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, UnifiedPresenceMeetingStatus._member_map_.values())
        )


@JsonMap({})
class UnifiedPresenceMeeting(BaseModel):
    """Returned if *Meetings* feature is switched on

    :param status: Meeting status calculated from all user`s meetings, defaults to None
    :type status: UnifiedPresenceMeetingStatus, optional
    """

    def __init__(self, status: UnifiedPresenceMeetingStatus = None):
        if status is not None:
            self.status = self._enum_matching(
                status, UnifiedPresenceMeetingStatus.list(), "status"
            )
