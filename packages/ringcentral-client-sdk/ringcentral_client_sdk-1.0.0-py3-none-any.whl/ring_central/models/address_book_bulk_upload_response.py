# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel
from .address_book_bulk_upload_task_result import AddressBookBulkUploadTaskResult


class AddressBookBulkUploadResponseStatus(Enum):
    """An enumeration representing different categories.

    :cvar ACCEPTED: "Accepted"
    :vartype ACCEPTED: str
    :cvar INPROGRESS: "InProgress"
    :vartype INPROGRESS: str
    :cvar COMPLETED: "Completed"
    :vartype COMPLETED: str
    :cvar FAILED: "Failed"
    :vartype FAILED: str
    """

    ACCEPTED = "Accepted"
    INPROGRESS = "InProgress"
    COMPLETED = "Completed"
    FAILED = "Failed"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                AddressBookBulkUploadResponseStatus._member_map_.values(),
            )
        )


@JsonMap(
    {
        "id_": "id",
        "creation_time": "creationTime",
        "last_modified_time": "lastModifiedTime",
    }
)
class AddressBookBulkUploadResponse(BaseModel):
    """Information on a task for adding multiple contacts to multiple extensions


    :param id_: Internal identifier of a task
    :type id_: str
    :param uri: Link for the task status retrieval
    :type uri: str
    :param status: Task status
    :type status: AddressBookBulkUploadResponseStatus
    :param creation_time: Date/time of a task creation
    :type creation_time: str
    :param last_modified_time: Date/time of a task latest update
    :type last_modified_time: str
    :param results: results, defaults to None
    :type results: AddressBookBulkUploadTaskResult, optional
    """

    def __init__(
        self,
        id_: str,
        uri: str,
        status: AddressBookBulkUploadResponseStatus,
        creation_time: str,
        last_modified_time: str,
        results: AddressBookBulkUploadTaskResult = None,
    ):
        self.id_ = id_
        self.uri = uri
        self.status = self._enum_matching(
            status, AddressBookBulkUploadResponseStatus.list(), "status"
        )
        self.creation_time = creation_time
        self.last_modified_time = last_modified_time
        if results is not None:
            self.results = self._define_object(results, AddressBookBulkUploadTaskResult)
