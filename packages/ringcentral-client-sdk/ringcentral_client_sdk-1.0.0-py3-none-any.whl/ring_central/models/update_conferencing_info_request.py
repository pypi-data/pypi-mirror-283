# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .conference_phone_number_info import ConferencePhoneNumberInfo


@JsonMap(
    {"phone_numbers": "phoneNumbers", "allow_join_before_host": "allowJoinBeforeHost"}
)
class UpdateConferencingInfoRequest(BaseModel):
    """UpdateConferencingInfoRequest

    :param phone_numbers: Multiple dial-in phone numbers to connect to audio conference<br>service, relevant for user's brand. Each number is given with the country<br>and location information, in order to let the user choose the less expensive<br>way to connect to a conference. The first number in the list is the primary<br>conference number, that is default and domestic<br>, defaults to None
    :type phone_numbers: List[ConferencePhoneNumberInfo], optional
    :param allow_join_before_host: Determines if host user allows conference participants to join before the host, defaults to None
    :type allow_join_before_host: bool, optional
    """

    def __init__(
        self,
        phone_numbers: List[ConferencePhoneNumberInfo] = None,
        allow_join_before_host: bool = None,
    ):
        if phone_numbers is not None:
            self.phone_numbers = self._define_list(
                phone_numbers, ConferencePhoneNumberInfo
            )
        if allow_join_before_host is not None:
            self.allow_join_before_host = allow_join_before_host
