# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .message_create_request import MessageCreateRequest


@JsonMap({"from_": "from"})
class MessageBatchCreateRequest(BaseModel):
    """Batch of A2P SMS messages. This object provides specification to
    send message(s) to many recipients. It contains top-level attributes, such
    as `text` which apply to all `messages`. In addition to that, it is possible
    to override this attribute for each message. This way a single API call may
    be used to send individual messages to many recipients.


    :param from_: Sender's phone number in [E.164](https://www.itu.int/rec/T-REC-E.164-201011-I) format.
    :type from_: str
    :param text: Text to send to `messages.to` phone numbers. Can be overridden on a per-message basis, defaults to None
    :type text: str, optional
    :param messages: Individual messages
    :type messages: List[MessageCreateRequest]
    """

    def __init__(
        self, from_: str, messages: List[MessageCreateRequest], text: str = None
    ):
        self.from_ = from_
        if text is not None:
            self.text = text
        self.messages = self._define_list(messages, MessageCreateRequest)
