# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "type_": "type",
        "id_": "id",
        "account_id": "accountId",
        "extension_id": "extensionId",
        "display_name": "displayName",
        "caller_id": "callerId",
        "correlation_id": "correlationId",
    }
)
class Participant(BaseModel):
    """Participant information

    :param type_: Participant type
    :type type_: str
    :param id_: id
    :type id_: str
    :param account_id: Account id, defaults to None
    :type account_id: str, optional
    :param extension_id: Extension id, defaults to None
    :type extension_id: str, optional
    :param display_name: Display name, defaults to None
    :type display_name: str, optional
    :param caller_id: Caller id, defaults to None
    :type caller_id: str, optional
    :param correlation_id: Pass-thru parameter in join url, defaults to None
    :type correlation_id: str, optional
    """

    def __init__(
        self,
        type_: str,
        id_: str,
        account_id: str = None,
        extension_id: str = None,
        display_name: str = None,
        caller_id: str = None,
        correlation_id: str = None,
    ):
        self.type_ = type_
        self.id_ = id_
        if account_id is not None:
            self.account_id = account_id
        if extension_id is not None:
            self.extension_id = extension_id
        if display_name is not None:
            self.display_name = display_name
        if caller_id is not None:
            self.caller_id = caller_id
        if correlation_id is not None:
            self.correlation_id = correlation_id
