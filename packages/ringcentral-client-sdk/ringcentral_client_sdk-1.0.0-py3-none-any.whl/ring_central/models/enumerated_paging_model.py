# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "per_page": "perPage",
        "page_start": "pageStart",
        "page_end": "pageEnd",
        "total_pages": "totalPages",
        "total_elements": "totalElements",
    }
)
class EnumeratedPagingModel(BaseModel):
    """EnumeratedPagingModel

    :param per_page: Current page size, describes how many items are in each page.<br>Matches "perPage" parameter from the request.<br>
    :type per_page: int
    :param page: The current page number. 1-indexed, so the first page is 1<br>by default. May be omitted if result is empty (because non-existent page<br>was specified or perPage=0 was requested)<br>, defaults to None
    :type page: int, optional
    :param page_start: The zero-based number of the first element on the current page.<br>Omitted if the page is omitted or result is empty<br>, defaults to None
    :type page_start: int, optional
    :param page_end: The zero-based index of the last element on the current page.<br>Omitted if the page is omitted or result is empty<br>, defaults to None
    :type page_end: int, optional
    :param total_pages: The total number of pages in a dataset. May be omitted for<br>some resources due to performance reasons<br>, defaults to None
    :type total_pages: int, optional
    :param total_elements: The total number of elements in a dataset. May be omitted for<br>some resource due to performance reasons<br>, defaults to None
    :type total_elements: int, optional
    """

    def __init__(
        self,
        per_page: int,
        page: int = None,
        page_start: int = None,
        page_end: int = None,
        total_pages: int = None,
        total_elements: int = None,
    ):
        self.per_page = per_page
        if page is not None:
            self.page = page
        if page_start is not None:
            self.page_start = page_start
        if page_end is not None:
            self.page_end = page_end
        if total_pages is not None:
            self.total_pages = total_pages
        if total_elements is not None:
            self.total_elements = total_elements
