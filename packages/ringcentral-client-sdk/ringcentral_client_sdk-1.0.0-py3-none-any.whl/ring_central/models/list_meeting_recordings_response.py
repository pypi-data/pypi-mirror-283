# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .meeting_recordings import MeetingRecordings
from .meeting_recordings_paging_info import MeetingRecordingsPagingInfo
from .meeting_recordings_navigation_info import MeetingRecordingsNavigationInfo


@JsonMap({})
class ListMeetingRecordingsResponse(BaseModel):
    """ListMeetingRecordingsResponse

    :param records: records, defaults to None
    :type records: List[MeetingRecordings], optional
    :param paging: paging, defaults to None
    :type paging: MeetingRecordingsPagingInfo, optional
    :param navigation: navigation, defaults to None
    :type navigation: MeetingRecordingsNavigationInfo, optional
    """

    def __init__(
        self,
        records: List[MeetingRecordings] = None,
        paging: MeetingRecordingsPagingInfo = None,
        navigation: MeetingRecordingsNavigationInfo = None,
    ):
        if records is not None:
            self.records = self._define_list(records, MeetingRecordings)
        if paging is not None:
            self.paging = self._define_object(paging, MeetingRecordingsPagingInfo)
        if navigation is not None:
            self.navigation = self._define_object(
                navigation, MeetingRecordingsNavigationInfo
            )
