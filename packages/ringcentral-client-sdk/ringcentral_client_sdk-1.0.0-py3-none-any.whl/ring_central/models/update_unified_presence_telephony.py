# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class UpdateUnifiedPresenceTelephonyAvailability(Enum):
    """An enumeration representing different categories.

    :cvar TAKEALLCALLS: "TakeAllCalls"
    :vartype TAKEALLCALLS: str
    :cvar DONOTACCEPTANYCALLS: "DoNotAcceptAnyCalls"
    :vartype DONOTACCEPTANYCALLS: str
    :cvar DONOTACCEPTQUEUECALLS: "DoNotAcceptQueueCalls"
    :vartype DONOTACCEPTQUEUECALLS: str
    """

    TAKEALLCALLS = "TakeAllCalls"
    DONOTACCEPTANYCALLS = "DoNotAcceptAnyCalls"
    DONOTACCEPTQUEUECALLS = "DoNotAcceptQueueCalls"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                UpdateUnifiedPresenceTelephonyAvailability._member_map_.values(),
            )
        )


@JsonMap({})
class UpdateUnifiedPresenceTelephony(BaseModel):
    """UpdateUnifiedPresenceTelephony

    :param availability: Telephony DND status, defaults to None
    :type availability: UpdateUnifiedPresenceTelephonyAvailability, optional
    """

    def __init__(self, availability: UpdateUnifiedPresenceTelephonyAvailability = None):
        if availability is not None:
            self.availability = self._enum_matching(
                availability,
                UpdateUnifiedPresenceTelephonyAvailability.list(),
                "availability",
            )
