# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"per_page": "perPage", "total_found": "totalFound"})
class AccountHistoryPaging(BaseModel):
    """AccountHistoryPaging

    :param page: The current page number. 1-indexed, so the first page is 1 by default. May be omitted if result is empty <br>(because non-existent page was specified or perPage=0 was requested)<br>, defaults to None
    :type page: int, optional
    :param per_page: Current page size, describes how many items are in each page. Matches "perPage" parameter from the request, defaults to None
    :type per_page: int, optional
    :param total: Total number of pages in a dataset. May be omitted for some resources due to performance reasons, defaults to None
    :type total: int, optional
    :param total_found: Total number of elements in a dataset. May be omitted for some resources due to performance reasons, defaults to None
    :type total_found: int, optional
    """

    def __init__(
        self,
        page: int = None,
        per_page: int = None,
        total: int = None,
        total_found: int = None,
    ):
        if page is not None:
            self.page = page
        if per_page is not None:
            self.per_page = per_page
        if total is not None:
            self.total = total
        if total_found is not None:
            self.total_found = total_found
