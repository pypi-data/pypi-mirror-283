# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel
from .call_queue_service_level_settings import CallQueueServiceLevelSettings


class CallQueueDetailsStatus(Enum):
    """An enumeration representing different categories.

    :cvar ENABLED: "Enabled"
    :vartype ENABLED: str
    :cvar DISABLED: "Disabled"
    :vartype DISABLED: str
    :cvar NOTACTIVATED: "NotActivated"
    :vartype NOTACTIVATED: str
    """

    ENABLED = "Enabled"
    DISABLED = "Disabled"
    NOTACTIVATED = "NotActivated"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, CallQueueDetailsStatus._member_map_.values())
        )


class CallQueueDetailsSubType(Enum):
    """An enumeration representing different categories.

    :cvar EMERGENCY: "Emergency"
    :vartype EMERGENCY: str
    """

    EMERGENCY = "Emergency"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, CallQueueDetailsSubType._member_map_.values())
        )


class AlertTimer(Enum):
    """An enumeration representing different categories.

    :cvar _5: 5
    :vartype _5: str
    :cvar _10: 10
    :vartype _10: str
    :cvar _15: 15
    :vartype _15: str
    :cvar _20: 20
    :vartype _20: str
    :cvar _30: 30
    :vartype _30: str
    :cvar _45: 45
    :vartype _45: str
    :cvar _60: 60
    :vartype _60: str
    :cvar _120: 120
    :vartype _120: str
    :cvar _180: 180
    :vartype _180: str
    :cvar _240: 240
    :vartype _240: str
    :cvar _300: 300
    :vartype _300: str
    :cvar _360: 360
    :vartype _360: str
    :cvar _420: 420
    :vartype _420: str
    :cvar _480: 480
    :vartype _480: str
    :cvar _540: 540
    :vartype _540: str
    :cvar _600: 600
    :vartype _600: str
    """

    _5 = 5
    _10 = 10
    _15 = 15
    _20 = 20
    _30 = 30
    _45 = 45
    _60 = 60
    _120 = 120
    _180 = 180
    _240 = 240
    _300 = 300
    _360 = 360
    _420 = 420
    _480 = 480
    _540 = 540
    _600 = 600

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, AlertTimer._member_map_.values()))


@JsonMap(
    {
        "id_": "id",
        "extension_number": "extensionNumber",
        "sub_type": "subType",
        "service_level_settings": "serviceLevelSettings",
        "editable_member_status": "editableMemberStatus",
        "alert_timer": "alertTimer",
    }
)
class CallQueueDetails(BaseModel):
    """CallQueueDetails

    :param uri: Link to a call queue, defaults to None
    :type uri: str, optional
    :param id_: Internal identifier of a call queue, defaults to None
    :type id_: str, optional
    :param extension_number: Extension number of a call queue, defaults to None
    :type extension_number: str, optional
    :param name: Name of a call queue, defaults to None
    :type name: str, optional
    :param status: Call queue status, defaults to None
    :type status: CallQueueDetailsStatus, optional
    :param sub_type: Indicates whether it is an emergency call queue extension or not, defaults to None
    :type sub_type: CallQueueDetailsSubType, optional
    :param service_level_settings: Call queue service level settings, defaults to None
    :type service_level_settings: CallQueueServiceLevelSettings, optional
    :param editable_member_status: Allows members to change their queue status, defaults to None
    :type editable_member_status: bool, optional
    :param alert_timer: Alert timer or pickup setting. Delay time in seconds before call queue group members are notified when calls are queued<br>, defaults to None
    :type alert_timer: AlertTimer, optional
    """

    def __init__(
        self,
        uri: str = None,
        id_: str = None,
        extension_number: str = None,
        name: str = None,
        status: CallQueueDetailsStatus = None,
        sub_type: CallQueueDetailsSubType = None,
        service_level_settings: CallQueueServiceLevelSettings = None,
        editable_member_status: bool = None,
        alert_timer: AlertTimer = None,
    ):
        if uri is not None:
            self.uri = uri
        if id_ is not None:
            self.id_ = id_
        if extension_number is not None:
            self.extension_number = extension_number
        if name is not None:
            self.name = name
        if status is not None:
            self.status = self._enum_matching(
                status, CallQueueDetailsStatus.list(), "status"
            )
        if sub_type is not None:
            self.sub_type = self._enum_matching(
                sub_type, CallQueueDetailsSubType.list(), "sub_type"
            )
        if service_level_settings is not None:
            self.service_level_settings = self._define_object(
                service_level_settings, CallQueueServiceLevelSettings
            )
        if editable_member_status is not None:
            self.editable_member_status = editable_member_status
        if alert_timer is not None:
            self.alert_timer = self._enum_matching(
                alert_timer, AlertTimer.list(), "alert_timer"
            )
