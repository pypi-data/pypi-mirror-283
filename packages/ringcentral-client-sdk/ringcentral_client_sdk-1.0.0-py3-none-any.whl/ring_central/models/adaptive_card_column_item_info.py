# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"type_": "type", "is_subtle": "isSubtle"})
class AdaptiveCardColumnItemInfo(BaseModel):
    """AdaptiveCardColumnItemInfo

    :param type_: type_, defaults to None
    :type type_: str, optional
    :param url: url, defaults to None
    :type url: str, optional
    :param size: size, defaults to None
    :type size: str, optional
    :param style: style, defaults to None
    :type style: str, optional
    :param wrap: wrap, defaults to None
    :type wrap: bool, optional
    :param spacing: spacing, defaults to None
    :type spacing: str, optional
    :param text: text, defaults to None
    :type text: str, optional
    :param is_subtle: is_subtle, defaults to None
    :type is_subtle: bool, optional
    """

    def __init__(
        self,
        type_: str = None,
        url: str = None,
        size: str = None,
        style: str = None,
        wrap: bool = None,
        spacing: str = None,
        text: str = None,
        is_subtle: bool = None,
    ):
        if type_ is not None:
            self.type_ = type_
        if url is not None:
            self.url = url
        if size is not None:
            self.size = size
        if style is not None:
            self.style = style
        if wrap is not None:
            self.wrap = wrap
        if spacing is not None:
            self.spacing = spacing
        if text is not None:
            self.text = text
        if is_subtle is not None:
            self.is_subtle = is_subtle
