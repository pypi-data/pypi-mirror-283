# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .bulk_operation_extension_reference import BulkOperationExtensionReference


@JsonMap({"id_": "id", "phone_number": "phoneNumber"})
class BulkAddDevicesSuccessItem(BaseModel):
    """BulkAddDevicesSuccessItem

    :param successful: Indicates if the provisioning operation was successful for this item, always `true` in this model
    :type successful: bool
    :param id_: Internal identifier of the created device
    :type id_: str
    :param extension: Information about an extension this device is assigned to
    :type extension: BulkOperationExtensionReference
    :param phone_number: Phone number in e.164 format (with '+' prefix)
    :type phone_number: str
    """

    def __init__(
        self,
        successful: bool,
        id_: str,
        extension: BulkOperationExtensionReference,
        phone_number: str,
    ):
        self.successful = successful
        self.id_ = id_
        self.extension = self._define_object(extension, BulkOperationExtensionReference)
        self.phone_number = self._pattern_matching(
            phone_number, "^\+[1-9]\d{1,14}$", "phone_number"
        )
