# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "bulk_item_successful": "bulkItemSuccessful",
        "device_id": "deviceId",
        "bulk_item_errors": "bulkItemErrors",
    }
)
class DeleteDeviceFromInventoryResponseRecords(BaseModel):
    """DeleteDeviceFromInventoryResponseRecords

    :param bulk_item_successful: Specifies if a device is successfully deleted, defaults to None
    :type bulk_item_successful: bool, optional
    :param device_id: Internal identifier of a device, defaults to None
    :type device_id: str, optional
    :param bulk_item_errors: The list of errors occurred during processing of particular item of bulk operation.<br>Returned only if `bulkItemSuccessful` is false<br>, defaults to None
    :type bulk_item_errors: List[dict], optional
    """

    def __init__(
        self,
        bulk_item_successful: bool = None,
        device_id: str = None,
        bulk_item_errors: List[dict] = None,
    ):
        if bulk_item_successful is not None:
            self.bulk_item_successful = bulk_item_successful
        if device_id is not None:
            self.device_id = device_id
        if bulk_item_errors is not None:
            self.bulk_item_errors = bulk_item_errors


@JsonMap({})
class DeleteDeviceFromInventoryResponse(BaseModel):
    """DeleteDeviceFromInventoryResponse

    :param records: records
    :type records: List[DeleteDeviceFromInventoryResponseRecords]
    """

    def __init__(self, records: List[DeleteDeviceFromInventoryResponseRecords]):
        self.records = self._define_list(
            records, DeleteDeviceFromInventoryResponseRecords
        )
