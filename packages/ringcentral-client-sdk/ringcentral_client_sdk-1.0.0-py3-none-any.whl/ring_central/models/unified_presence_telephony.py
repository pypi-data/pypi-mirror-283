# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class UnifiedPresenceTelephonyStatus(Enum):
    """An enumeration representing different categories.

    :cvar NOCALL: "NoCall"
    :vartype NOCALL: str
    :cvar RINGING: "Ringing"
    :vartype RINGING: str
    :cvar CALLCONNECTED: "CallConnected"
    :vartype CALLCONNECTED: str
    :cvar ONHOLD: "OnHold"
    :vartype ONHOLD: str
    :cvar PARKEDCALL: "ParkedCall"
    :vartype PARKEDCALL: str
    """

    NOCALL = "NoCall"
    RINGING = "Ringing"
    CALLCONNECTED = "CallConnected"
    ONHOLD = "OnHold"
    PARKEDCALL = "ParkedCall"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, UnifiedPresenceTelephonyStatus._member_map_.values())
        )


class UnifiedPresenceTelephonyVisibility(Enum):
    """An enumeration representing different categories.

    :cvar VISIBLE: "Visible"
    :vartype VISIBLE: str
    :cvar INVISIBLE: "Invisible"
    :vartype INVISIBLE: str
    """

    VISIBLE = "Visible"
    INVISIBLE = "Invisible"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                UnifiedPresenceTelephonyVisibility._member_map_.values(),
            )
        )


class UnifiedPresenceTelephonyAvailability(Enum):
    """An enumeration representing different categories.

    :cvar TAKEALLCALLS: "TakeAllCalls"
    :vartype TAKEALLCALLS: str
    :cvar DONOTACCEPTANYCALLS: "DoNotAcceptAnyCalls"
    :vartype DONOTACCEPTANYCALLS: str
    :cvar DONOTACCEPTQUEUECALLS: "DoNotAcceptQueueCalls"
    :vartype DONOTACCEPTQUEUECALLS: str
    """

    TAKEALLCALLS = "TakeAllCalls"
    DONOTACCEPTANYCALLS = "DoNotAcceptAnyCalls"
    DONOTACCEPTQUEUECALLS = "DoNotAcceptQueueCalls"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                UnifiedPresenceTelephonyAvailability._member_map_.values(),
            )
        )


@JsonMap({})
class UnifiedPresenceTelephony(BaseModel):
    """Returned if *BLF* feature is switched on

    :param status: Telephony status calculated from all user's phone numbers. Returned always for the requester's extension; returned for another users if their telephony visibility is set to 'Visible', defaults to None
    :type status: UnifiedPresenceTelephonyStatus, optional
    :param visibility: Specifies if the user's phone presence status is visible to other users; returned only for requester's extension, defaults to None
    :type visibility: UnifiedPresenceTelephonyVisibility, optional
    :param availability: Telephony DND status. Returned if *DND* feature is switched on, defaults to None
    :type availability: UnifiedPresenceTelephonyAvailability, optional
    """

    def __init__(
        self,
        status: UnifiedPresenceTelephonyStatus = None,
        visibility: UnifiedPresenceTelephonyVisibility = None,
        availability: UnifiedPresenceTelephonyAvailability = None,
    ):
        if status is not None:
            self.status = self._enum_matching(
                status, UnifiedPresenceTelephonyStatus.list(), "status"
            )
        if visibility is not None:
            self.visibility = self._enum_matching(
                visibility, UnifiedPresenceTelephonyVisibility.list(), "visibility"
            )
        if availability is not None:
            self.availability = self._enum_matching(
                availability,
                UnifiedPresenceTelephonyAvailability.list(),
                "availability",
            )
