# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .country_info_minimal_model import CountryInfoMinimalModel


@JsonMap({"id_": "id", "iso_code": "isoCode"})
class GetStateInfoResponse(BaseModel):
    """GetStateInfoResponse

    :param id_: Internal identifier of a state, defaults to None
    :type id_: str, optional
    :param uri: Canonical URI of a state, defaults to None
    :type uri: str, optional
    :param country: country, defaults to None
    :type country: CountryInfoMinimalModel, optional
    :param iso_code: Short code for a state (2-letter usually), defaults to None
    :type iso_code: str, optional
    :param name: Official name of a state, defaults to None
    :type name: str, optional
    """

    def __init__(
        self,
        id_: str = None,
        uri: str = None,
        country: CountryInfoMinimalModel = None,
        iso_code: str = None,
        name: str = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if uri is not None:
            self.uri = uri
        if country is not None:
            self.country = self._define_object(country, CountryInfoMinimalModel)
        if iso_code is not None:
            self.iso_code = iso_code
        if name is not None:
            self.name = name
