# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "first_name": "firstName",
        "last_name": "lastName",
        "contact_phone": "contactPhone",
        "id_": "id",
        "extension_number": "extensionNumber",
    }
)
class SystemUserContactInfo(BaseModel):
    """SystemUserContactInfo

    :param first_name: Given name
    :type first_name: str
    :param last_name: Family name
    :type last_name: str
    :param email: Contact email
    :type email: str
    :param contact_phone: Phone number in e.164 format (with '+' prefix)
    :type contact_phone: str
    :param id_: Internal identifier of System user extension
    :type id_: str
    :param extension_number: Short number of an extension.<br>Actual max length depends on system length limit for extension.<br>
    :type extension_number: str
    """

    def __init__(
        self,
        first_name: str,
        last_name: str,
        email: str,
        contact_phone: str,
        id_: str,
        extension_number: str,
    ):
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.contact_phone = self._pattern_matching(
            contact_phone, "^\+[1-9]\d{1,14}$", "contact_phone"
        )
        self.id_ = id_
        self.extension_number = self._pattern_matching(
            extension_number, "^\d{3,8}$", "extension_number"
        )
