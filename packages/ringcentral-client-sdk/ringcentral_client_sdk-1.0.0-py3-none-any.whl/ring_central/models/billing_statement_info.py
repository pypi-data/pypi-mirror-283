# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .billing_statement_charges import BillingStatementCharges
from .billing_statement_fees import BillingStatementFees


@JsonMap(
    {
        "total_charged": "totalCharged",
        "total_charges": "totalCharges",
        "total_fees": "totalFees",
        "total_free_service_credit": "totalFreeServiceCredit",
    }
)
class BillingStatementInfo(BaseModel):
    """Billing information. Returned for device update request if `prestatement`
    query parameter is set to 'true'


    :param currency: Currency code complying with [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217)<br>standard<br>, defaults to None
    :type currency: str, optional
    :param charges: charges, defaults to None
    :type charges: List[BillingStatementCharges], optional
    :param fees: fees, defaults to None
    :type fees: List[BillingStatementFees], optional
    :param total_charged: total_charged, defaults to None
    :type total_charged: float, optional
    :param total_charges: total_charges, defaults to None
    :type total_charges: float, optional
    :param total_fees: total_fees, defaults to None
    :type total_fees: float, optional
    :param subtotal: subtotal, defaults to None
    :type subtotal: float, optional
    :param total_free_service_credit: total_free_service_credit, defaults to None
    :type total_free_service_credit: float, optional
    """

    def __init__(
        self,
        currency: str = None,
        charges: List[BillingStatementCharges] = None,
        fees: List[BillingStatementFees] = None,
        total_charged: float = None,
        total_charges: float = None,
        total_fees: float = None,
        subtotal: float = None,
        total_free_service_credit: float = None,
    ):
        if currency is not None:
            self.currency = currency
        if charges is not None:
            self.charges = self._define_list(charges, BillingStatementCharges)
        if fees is not None:
            self.fees = self._define_list(fees, BillingStatementFees)
        if total_charged is not None:
            self.total_charged = total_charged
        if total_charges is not None:
            self.total_charges = total_charges
        if total_fees is not None:
            self.total_fees = total_fees
        if subtotal is not None:
            self.subtotal = subtotal
        if total_free_service_credit is not None:
            self.total_free_service_credit = total_free_service_credit
