# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .ivr_menu_site_info import IvrMenuSiteInfo
from .ivr_menu_prompt_info import IvrMenuPromptInfo
from .ivr_menu_actions_info import IvrMenuActionsInfo


@JsonMap({"id_": "id", "extension_number": "extensionNumber"})
class IvrMenuInfo(BaseModel):
    """IvrMenuInfo

    :param id_: Internal identifier of an IVR Menu extension, defaults to None
    :type id_: str, optional
    :param uri: Link to an IVR Menu extension resource, defaults to None
    :type uri: str, optional
    :param name: First name of an IVR Menu user, defaults to None
    :type name: str, optional
    :param extension_number: Number of an IVR Menu extension, defaults to None
    :type extension_number: str, optional
    :param site: Site data, defaults to None
    :type site: IvrMenuSiteInfo, optional
    :param prompt: Prompt metadata, defaults to None
    :type prompt: IvrMenuPromptInfo, optional
    :param actions: Keys handling settings, defaults to None
    :type actions: List[IvrMenuActionsInfo], optional
    """

    def __init__(
        self,
        id_: str = None,
        uri: str = None,
        name: str = None,
        extension_number: str = None,
        site: IvrMenuSiteInfo = None,
        prompt: IvrMenuPromptInfo = None,
        actions: List[IvrMenuActionsInfo] = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if uri is not None:
            self.uri = uri
        if name is not None:
            self.name = name
        if extension_number is not None:
            self.extension_number = extension_number
        if site is not None:
            self.site = self._define_object(site, IvrMenuSiteInfo)
        if prompt is not None:
            self.prompt = self._define_object(prompt, IvrMenuPromptInfo)
        if actions is not None:
            self.actions = self._define_list(actions, IvrMenuActionsInfo)
