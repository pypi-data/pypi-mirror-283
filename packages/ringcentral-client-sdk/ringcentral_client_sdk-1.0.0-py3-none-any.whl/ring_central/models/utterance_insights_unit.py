# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class UtteranceInsightsUnitName(Enum):
    """An enumeration representing different categories.

    :cvar EMOTION: "Emotion"
    :vartype EMOTION: str
    """

    EMOTION = "Emotion"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, UtteranceInsightsUnitName._member_map_.values())
        )


@JsonMap({})
class UtteranceInsightsUnit(BaseModel):
    """UtteranceInsightsUnit

    :param name: name
    :type name: UtteranceInsightsUnitName
    :param value: value
    :type value: str
    :param confidence: confidence, defaults to None
    :type confidence: float, optional
    """

    def __init__(
        self, name: UtteranceInsightsUnitName, value: str, confidence: float = None
    ):
        self.name = self._enum_matching(name, UtteranceInsightsUnitName.list(), "name")
        self.value = value
        if confidence is not None:
            self.confidence = confidence
