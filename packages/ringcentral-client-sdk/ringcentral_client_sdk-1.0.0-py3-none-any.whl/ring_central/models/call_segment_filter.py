# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .call_segment_options import CallSegmentOptions
from .call_segment_length_filter import CallSegmentLengthFilter


@JsonMap({})
class CallSegmentFilter(BaseModel):
    """CallSegmentFilter

    :param segment: Call segment for filtering
    :type segment: CallSegmentOptions
    :param length: Duration bounds for the segment, defaults to None
    :type length: CallSegmentLengthFilter, optional
    """

    def __init__(
        self, segment: CallSegmentOptions, length: CallSegmentLengthFilter = None
    ):
        self.segment = self._enum_matching(
            segment, CallSegmentOptions.list(), "segment"
        )
        if length is not None:
            self.length = self._define_object(length, CallSegmentLengthFilter)
