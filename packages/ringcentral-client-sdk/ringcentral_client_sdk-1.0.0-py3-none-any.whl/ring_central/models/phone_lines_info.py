# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .phone_line_type_enum import PhoneLineTypeEnum
from .phone_number_info_int_id import PhoneNumberInfoIntId
from .emergency_address import EmergencyAddress


@JsonMap(
    {
        "id_": "id",
        "line_type": "lineType",
        "phone_info": "phoneInfo",
        "emergency_address": "emergencyAddress",
    }
)
class PhoneLinesInfo(BaseModel):
    """PhoneLinesInfo

    :param id_: Internal identifier of a phone line, defaults to None
    :type id_: str, optional
    :param line_type: The type of phone line, defaults to None
    :type line_type: PhoneLineTypeEnum, optional
    :param phone_info: Phone number information, defaults to None
    :type phone_info: PhoneNumberInfoIntId, optional
    :param emergency_address: emergency_address, defaults to None
    :type emergency_address: EmergencyAddress, optional
    """

    def __init__(
        self,
        id_: str = None,
        line_type: PhoneLineTypeEnum = None,
        phone_info: PhoneNumberInfoIntId = None,
        emergency_address: EmergencyAddress = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if line_type is not None:
            self.line_type = self._enum_matching(
                line_type, PhoneLineTypeEnum.list(), "line_type"
            )
        if phone_info is not None:
            self.phone_info = self._define_object(phone_info, PhoneNumberInfoIntId)
        if emergency_address is not None:
            self.emergency_address = self._define_object(
                emergency_address, EmergencyAddress
            )
