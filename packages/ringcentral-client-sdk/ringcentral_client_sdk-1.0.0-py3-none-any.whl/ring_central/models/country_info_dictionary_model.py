# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "id_": "id",
        "iso_code": "isoCode",
        "calling_code": "callingCode",
        "emergency_calling": "emergencyCalling",
        "number_selling": "numberSelling",
        "login_allowed": "loginAllowed",
        "signup_allowed": "signupAllowed",
        "free_softphone_line": "freeSoftphoneLine",
        "local_dialing": "localDialing",
    }
)
class CountryInfoDictionaryModel(BaseModel):
    """CountryInfoDictionaryModel

    :param id_: Internal identifier of a country, defaults to None
    :type id_: str, optional
    :param uri: Canonical URI of a country resource, defaults to None
    :type uri: str, optional
    :param name: The official name of a country, defaults to None
    :type name: str, optional
    :param iso_code: Country code according to the ISO standard, see<br>[ISO 3166](https://www.iso.org/iso-3166-country-codes.html)<br>, defaults to None
    :type iso_code: str, optional
    :param calling_code: Country calling code defined by [ITU-T](http://en.wikipedia.org/wiki/ITU-T)<br>recommendations [E.123](http://en.wikipedia.org/wiki/E.123) and<br>[E.164](http://en.wikipedia.org/wiki/E.164),<br>see [Calling Codes](http://en.wikipedia.org/wiki/List_of_country_calling_codes)<br>, defaults to None
    :type calling_code: str, optional
    :param emergency_calling: Emergency calling feature availability/emergency address requirement indicator<br>, defaults to None
    :type emergency_calling: bool, optional
    :param number_selling: Indicates that phone numbers are available for this country, defaults to None
    :type number_selling: bool, optional
    :param login_allowed: Indicates that login with the phone number of this country is allowed, defaults to None
    :type login_allowed: bool, optional
    :param signup_allowed: Indicates that signup/billing is allowed for this country, defaults to None
    :type signup_allowed: bool, optional
    :param free_softphone_line: Indicates that free phone line for softphone is available for this country, defaults to None
    :type free_softphone_line: bool, optional
    :param local_dialing: Indicates that the local dialing is supported in this country and default area code can be set, defaults to None
    :type local_dialing: bool, optional
    """

    def __init__(
        self,
        id_: str = None,
        uri: str = None,
        name: str = None,
        iso_code: str = None,
        calling_code: str = None,
        emergency_calling: bool = None,
        number_selling: bool = None,
        login_allowed: bool = None,
        signup_allowed: bool = None,
        free_softphone_line: bool = None,
        local_dialing: bool = None,
    ):
        if id_ is not None:
            self.id_ = id_
        if uri is not None:
            self.uri = uri
        if name is not None:
            self.name = name
        if iso_code is not None:
            self.iso_code = iso_code
        if calling_code is not None:
            self.calling_code = calling_code
        if emergency_calling is not None:
            self.emergency_calling = emergency_calling
        if number_selling is not None:
            self.number_selling = number_selling
        if login_allowed is not None:
            self.login_allowed = login_allowed
        if signup_allowed is not None:
            self.signup_allowed = signup_allowed
        if free_softphone_line is not None:
            self.free_softphone_line = free_softphone_line
        if local_dialing is not None:
            self.local_dialing = local_dialing
