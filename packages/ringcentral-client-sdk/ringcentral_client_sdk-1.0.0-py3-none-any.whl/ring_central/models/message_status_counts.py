# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"error_code_counts": "errorCodeCounts"})
class MessageStatusCounts(BaseModel):
    """Message status parameters

    :param cost: Total cost of all messages with this status code, defaults to None
    :type cost: float, optional
    :param count: Count of messages with this status code, defaults to None
    :type count: int, optional
    :param error_code_counts: Message sending/delivery errors. Returned in `deliveryFailed` and `sendingFailed` resources, defaults to None
    :type error_code_counts: dict, optional
    """

    def __init__(
        self, cost: float = None, count: int = None, error_code_counts: dict = None
    ):
        if cost is not None:
            self.cost = cost
        if count is not None:
            self.count = count
        if error_code_counts is not None:
            self.error_code_counts = error_code_counts
