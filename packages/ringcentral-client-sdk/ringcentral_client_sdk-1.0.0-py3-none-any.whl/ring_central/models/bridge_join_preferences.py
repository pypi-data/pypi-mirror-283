# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel
from .bridge_join_pstn_preferences import BridgeJoinPstnPreferences


class WaitingRoomRequired(Enum):
    """An enumeration representing different categories.

    :cvar NOBODY: "Nobody"
    :vartype NOBODY: str
    :cvar EVERYBODY: "Everybody"
    :vartype EVERYBODY: str
    :cvar GUESTSONLY: "GuestsOnly"
    :vartype GUESTSONLY: str
    :cvar OTHERACCOUNT: "OtherAccount"
    :vartype OTHERACCOUNT: str
    """

    NOBODY = "Nobody"
    EVERYBODY = "Everybody"
    GUESTSONLY = "GuestsOnly"
    OTHERACCOUNT = "OtherAccount"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, WaitingRoomRequired._member_map_.values()))


@JsonMap(
    {
        "audio_muted": "audioMuted",
        "video_muted": "videoMuted",
        "waiting_room_required": "waitingRoomRequired",
    }
)
class BridgeJoinPreferences(BaseModel):
    """BridgeJoinPreferences

    :param audio_muted: Specifies if audio is muted for meeting participants (in the preset after joining), defaults to None
    :type audio_muted: bool, optional
    :param video_muted: Specifies if video is muted for meeting participants (in the preset after joining), defaults to None
    :type video_muted: bool, optional
    :param waiting_room_required: Specifies rules for the waiting room before the host starts the meeting.<br>1) Nobody - No waiting room. Participants are not waiting for meeting start.<br>2) Everybody - All participants are waiting for meeting start.<br>3) GuestsOnly - Only unauthenticated participants (guests) are waiting for meeting start.<br>4) OtherAccount - Only participants who have other account are waiting for meeting start.<br><br>Default value depends on the bridge type:<br>- PMI -> OtherAccount<br>- Instant, Scheduled -> Nobody<br>, defaults to None
    :type waiting_room_required: WaitingRoomRequired, optional
    :param pstn: pstn, defaults to None
    :type pstn: BridgeJoinPstnPreferences, optional
    """

    def __init__(
        self,
        audio_muted: bool = None,
        video_muted: bool = None,
        waiting_room_required: WaitingRoomRequired = None,
        pstn: BridgeJoinPstnPreferences = None,
    ):
        if audio_muted is not None:
            self.audio_muted = audio_muted
        if video_muted is not None:
            self.video_muted = video_muted
        if waiting_room_required is not None:
            self.waiting_room_required = self._enum_matching(
                waiting_room_required,
                WaitingRoomRequired.list(),
                "waiting_room_required",
            )
        if pstn is not None:
            self.pstn = self._define_object(pstn, BridgeJoinPstnPreferences)
