# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .invitee_resource import InviteeResource
from .rcw_resource_id_model import RcwResourceIdModel


@JsonMap(
    {
        "added_invitees": "addedInvitees",
        "updated_invitees": "updatedInvitees",
        "deleted_invitees": "deletedInvitees",
    }
)
class BulkUpdateInviteesResponse(BaseModel):
    """BulkUpdateInviteesResponse

    :param added_invitees: added_invitees, defaults to None
    :type added_invitees: List[InviteeResource], optional
    :param updated_invitees: updated_invitees, defaults to None
    :type updated_invitees: List[InviteeResource], optional
    :param deleted_invitees: deleted_invitees, defaults to None
    :type deleted_invitees: List[RcwResourceIdModel], optional
    """

    def __init__(
        self,
        added_invitees: List[InviteeResource] = None,
        updated_invitees: List[InviteeResource] = None,
        deleted_invitees: List[RcwResourceIdModel] = None,
    ):
        if added_invitees is not None:
            self.added_invitees = self._define_list(added_invitees, InviteeResource)
        if updated_invitees is not None:
            self.updated_invitees = self._define_list(updated_invitees, InviteeResource)
        if deleted_invitees is not None:
            self.deleted_invitees = self._define_list(
                deleted_invitees, RcwResourceIdModel
            )
