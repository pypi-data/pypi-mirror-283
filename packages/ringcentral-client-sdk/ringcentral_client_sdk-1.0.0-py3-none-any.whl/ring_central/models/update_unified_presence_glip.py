# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class UpdateUnifiedPresenceGlipVisibility(Enum):
    """An enumeration representing different categories.

    :cvar VISIBLE: "Visible"
    :vartype VISIBLE: str
    :cvar INVISIBLE: "Invisible"
    :vartype INVISIBLE: str
    """

    VISIBLE = "Visible"
    INVISIBLE = "Invisible"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                UpdateUnifiedPresenceGlipVisibility._member_map_.values(),
            )
        )


class UpdateUnifiedPresenceGlipAvailability(Enum):
    """An enumeration representing different categories.

    :cvar AVAILABLE: "Available"
    :vartype AVAILABLE: str
    :cvar DND: "DND"
    :vartype DND: str
    """

    AVAILABLE = "Available"
    DND = "DND"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                UpdateUnifiedPresenceGlipAvailability._member_map_.values(),
            )
        )


@JsonMap({})
class UpdateUnifiedPresenceGlip(BaseModel):
    """UpdateUnifiedPresenceGlip

    :param visibility: Visibility setting allowing other users to see Glip presence status, defaults to None
    :type visibility: UpdateUnifiedPresenceGlipVisibility, optional
    :param availability: Availability setting specifying whether to receive Glip notifications or not, defaults to None
    :type availability: UpdateUnifiedPresenceGlipAvailability, optional
    """

    def __init__(
        self,
        visibility: UpdateUnifiedPresenceGlipVisibility = None,
        availability: UpdateUnifiedPresenceGlipAvailability = None,
    ):
        if visibility is not None:
            self.visibility = self._enum_matching(
                visibility, UpdateUnifiedPresenceGlipVisibility.list(), "visibility"
            )
        if availability is not None:
            self.availability = self._enum_matching(
                availability,
                UpdateUnifiedPresenceGlipAvailability.list(),
                "availability",
            )
