# This file was generated by liblab | https://liblab.com/

from enum import Enum
from .utils.json_map import JsonMap
from .base import BaseModel


class RevokeTokenRequestClientAssertionType(Enum):
    """An enumeration representing different categories.

    :cvar URN_IETF_PARAMS_OAUTH_CLIENT_ASSERTION_TYPE_JWT_BEARER: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
    :vartype URN_IETF_PARAMS_OAUTH_CLIENT_ASSERTION_TYPE_JWT_BEARER: str
    """

    URN_IETF_PARAMS_OAUTH_CLIENT_ASSERTION_TYPE_JWT_BEARER = (
        "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
    )

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(
                lambda x: x.value,
                RevokeTokenRequestClientAssertionType._member_map_.values(),
            )
        )


@JsonMap({})
class RevokeTokenRequest(BaseModel):
    """RevokeTokenRequest

    :param token: Access or refresh token to be revoked (along with the entire OAuth session)
    :type token: str
    :param client_assertion_type: Client assertion type for the `client_secret_jwt` or `private_key_jwt` client authentication types,<br>as defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).<br>This parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types<br>, defaults to None
    :type client_assertion_type: RevokeTokenRequestClientAssertionType, optional
    :param client_assertion: Client assertion (JWT) for the `client_secret_jwt` or `private_key_jwt` client authentication types,<br>as defined by [RFC-7523](https://datatracker.ietf.org/doc/html/rfc7523#section-2.2).<br>This parameter is mandatory if the client authentication is required and a client decided to use one of these authentication types<br>, defaults to None
    :type client_assertion: str, optional
    """

    def __init__(
        self,
        token: str,
        client_assertion_type: RevokeTokenRequestClientAssertionType = None,
        client_assertion: str = None,
    ):
        self.token = token
        if client_assertion_type is not None:
            self.client_assertion_type = self._enum_matching(
                client_assertion_type,
                RevokeTokenRequestClientAssertionType.list(),
                "client_assertion_type",
            )
        if client_assertion is not None:
            self.client_assertion = client_assertion
