# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .bridge_pins_without_pstn import BridgePinsWithoutPstn
from .bridge_request_security import BridgeRequestSecurity
from .bridge_preferences import BridgePreferences


@JsonMap({})
class UpdateBridgeRequest(BaseModel):
    """UpdateBridgeRequest

    :param name: Custom name of a bridge, defaults to None
    :type name: str, optional
    :param pins: pins, defaults to None
    :type pins: BridgePinsWithoutPstn, optional
    :param security: security, defaults to None
    :type security: BridgeRequestSecurity, optional
    :param preferences: preferences, defaults to None
    :type preferences: BridgePreferences, optional
    """

    def __init__(
        self,
        name: str = None,
        pins: BridgePinsWithoutPstn = None,
        security: BridgeRequestSecurity = None,
        preferences: BridgePreferences = None,
    ):
        if name is not None:
            self.name = name
        if pins is not None:
            self.pins = self._define_object(pins, BridgePinsWithoutPstn)
        if security is not None:
            self.security = self._define_object(security, BridgeRequestSecurity)
        if preferences is not None:
            self.preferences = self._define_object(preferences, BridgePreferences)
