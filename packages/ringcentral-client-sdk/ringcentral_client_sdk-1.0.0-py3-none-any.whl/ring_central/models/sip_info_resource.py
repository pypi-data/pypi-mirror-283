# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .outbound_proxy_info import OutboundProxyInfo


@JsonMap(
    {
        "outbound_proxies": "outboundProxies",
        "user_name": "userName",
        "authorization_id": "authorizationId",
    }
)
class SipInfoResource(BaseModel):
    """SipInfoResource

    :param domain: SIP domain, defaults to None
    :type domain: str, optional
    :param outbound_proxies: List of outbound proxies, defaults to None
    :type outbound_proxies: List[OutboundProxyInfo], optional
    :param user_name: User credentials, defaults to None
    :type user_name: str, optional
    :param password: User password, defaults to None
    :type password: str, optional
    :param authorization_id: Internal identifier for SIP authorization, defaults to None
    :type authorization_id: str, optional
    """

    def __init__(
        self,
        domain: str = None,
        outbound_proxies: List[OutboundProxyInfo] = None,
        user_name: str = None,
        password: str = None,
        authorization_id: str = None,
    ):
        if domain is not None:
            self.domain = domain
        if outbound_proxies is not None:
            self.outbound_proxies = self._define_list(
                outbound_proxies, OutboundProxyInfo
            )
        if user_name is not None:
            self.user_name = user_name
        if password is not None:
            self.password = password
        if authorization_id is not None:
            self.authorization_id = authorization_id
