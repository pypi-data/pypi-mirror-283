# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .ranges_info import RangesInfo
from .ivr_call_handling_action_enum import IvrCallHandlingActionEnum
from .extension_short_info_resource import ExtensionShortInfoResource
from .forward_all_calls_reason import ForwardAllCallsReason


@JsonMap({"call_handling_action": "callHandlingAction"})
class ForwardAllCompanyCallsInfo(BaseModel):
    """ForwardAllCompanyCallsInfo

    :param enabled: Indicates whether the *Forward All Company Calls* feature is enabled or disabled for an account, defaults to None
    :type enabled: bool, optional
    :param ranges: Specific data ranges. If specified, weeklyRanges cannot be specified, defaults to None
    :type ranges: List[RangesInfo], optional
    :param call_handling_action: Specifies how incoming calls are forwarded. The default value<br>is 'Operator' 'Operator' - play company greeting and forward to operator<br>extension 'Disconnect' - play company greeting and disconnect 'Bypass'<br>- bypass greeting to go to selected extension = ['Operator', 'Disconnect',<br>'Bypass']<br>, defaults to None
    :type call_handling_action: IvrCallHandlingActionEnum, optional
    :param extension: extension, defaults to None
    :type extension: ExtensionShortInfoResource, optional
    :param reason: reason, defaults to None
    :type reason: ForwardAllCallsReason, optional
    """

    def __init__(
        self,
        enabled: bool = None,
        ranges: List[RangesInfo] = None,
        call_handling_action: IvrCallHandlingActionEnum = None,
        extension: ExtensionShortInfoResource = None,
        reason: ForwardAllCallsReason = None,
    ):
        if enabled is not None:
            self.enabled = enabled
        if ranges is not None:
            self.ranges = self._define_list(ranges, RangesInfo)
        if call_handling_action is not None:
            self.call_handling_action = self._enum_matching(
                call_handling_action,
                IvrCallHandlingActionEnum.list(),
                "call_handling_action",
            )
        if extension is not None:
            self.extension = self._define_object(extension, ExtensionShortInfoResource)
        if reason is not None:
            self.reason = self._define_object(reason, ForwardAllCallsReason)
