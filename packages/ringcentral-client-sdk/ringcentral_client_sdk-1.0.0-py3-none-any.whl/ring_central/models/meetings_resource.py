# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .meeting_response_resource import MeetingResponseResource
from .meetings_paging_info import MeetingsPagingInfo
from .meetings_navigation_info import MeetingsNavigationInfo


@JsonMap({})
class MeetingsResource(BaseModel):
    """MeetingsResource

    :param uri: uri, defaults to None
    :type uri: str, optional
    :param records: records, defaults to None
    :type records: List[MeetingResponseResource], optional
    :param paging: paging, defaults to None
    :type paging: MeetingsPagingInfo, optional
    :param navigation: navigation, defaults to None
    :type navigation: MeetingsNavigationInfo, optional
    """

    def __init__(
        self,
        uri: str = None,
        records: List[MeetingResponseResource] = None,
        paging: MeetingsPagingInfo = None,
        navigation: MeetingsNavigationInfo = None,
    ):
        if uri is not None:
            self.uri = uri
        if records is not None:
            self.records = self._define_list(records, MeetingResponseResource)
        if paging is not None:
            self.paging = self._define_object(paging, MeetingsPagingInfo)
        if navigation is not None:
            self.navigation = self._define_object(navigation, MeetingsNavigationInfo)
