# This file was generated by liblab | https://liblab.com/

from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..models.utils.cast_models import cast_models


class CarHireService(BaseService):

    @cast_models
    def car_home(self, media_partner_id: str = None):
        """Car Home

        :param media_partner_id: Your Impact partner ID as found at Impact.com., defaults to None
        :type media_partner_id: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        """

        Validator(str).is_optional().validate(media_partner_id)

        serialized_request = (
            Serializer(
                f"{self.base_url}/g/referrals/v1/cars/home/", self.get_default_headers()
            )
            .add_query("mediaPartnerId", media_partner_id)
            .serialize()
            .set_method("GET")
        )

        response = self.send_request(serialized_request)

        return response

    @cast_models
    def car_hire_day_view(
        self,
        media_partner_id: str = None,
        pickup_place: str = None,
        dropoff_place: str = None,
        pickup_time: str = None,
        dropoff_time: str = None,
        driver_age: str = None,
        utm_term: str = None,
    ):
        """Car Hire Day View

        :param media_partner_id: Your Impact partner ID as found at Impact.com., defaults to None
        :type media_partner_id: str, optional
        :param pickup_place: IATA code or Entity ID for the pick-up place., defaults to None
        :type pickup_place: str, optional
        :param dropoff_place: IATA code or Entity ID for the drop-off place., defaults to None
        :type dropoff_place: str, optional
        :param pickup_time: Pick-up datetime in ISO 8601 standard.
        e.g. YYYY-MM-DDTHH:MM., defaults to None
        :type pickup_time: str, optional
        :param dropoff_time: Drop-off datetime in ISO 8601 standard.
        e.g. YYYY-MM-DDTHH:MM., defaults to None
        :type dropoff_time: str, optional
        :param driver_age: Driver age between 21 and 99. Default age is 30., defaults to None
        :type driver_age: str, optional
        :param utm_term: Additional alphanumeric tracking parameter you can add to your text links for additional tracking. This will be reported on Impact as Sub Id 2., defaults to None
        :type utm_term: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        """

        Validator(str).is_optional().validate(media_partner_id)
        Validator(str).is_optional().validate(pickup_place)
        Validator(str).is_optional().validate(dropoff_place)
        Validator(str).is_optional().validate(pickup_time)
        Validator(str).is_optional().validate(dropoff_time)
        Validator(str).is_optional().validate(driver_age)
        Validator(str).is_optional().validate(utm_term)

        serialized_request = (
            Serializer(
                f"{self.base_url}/g/referrals/v1/cars/day-view/",
                self.get_default_headers(),
            )
            .add_query("mediaPartnerId", media_partner_id)
            .add_query("pickupPlace", pickup_place)
            .add_query("dropoffPlace", dropoff_place)
            .add_query("pickupTime", pickup_time)
            .add_query("dropoffTime", dropoff_time)
            .add_query("driverAge", driver_age)
            .add_query("utmTerm", utm_term)
            .serialize()
            .set_method("GET")
        )

        response = self.send_request(serialized_request)

        return response
