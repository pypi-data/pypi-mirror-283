# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/mnt/Daten/Projekte/MTGProxyPrinter/mtg_proxy_printer/resources/ui/about_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AboutDialog(object):
    def setupUi(self, AboutDialog):
        AboutDialog.setObjectName("AboutDialog")
        AboutDialog.resize(800, 600)
        AboutDialog.setModal(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(AboutDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tab_widget = QtWidgets.QTabWidget(AboutDialog)
        self.tab_widget.setObjectName("tab_widget")
        self.tab_about = QtWidgets.QWidget()
        self.tab_about.setObjectName("tab_about")
        self.tab_about_layout = QtWidgets.QGridLayout(self.tab_about)
        self.tab_about_layout.setObjectName("tab_about_layout")
        self.python_version_label = QtWidgets.QLabel(self.tab_about)
        self.python_version_label.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.python_version_label.setObjectName("python_version_label")
        self.tab_about_layout.addWidget(self.python_version_label, 3, 1, 1, 2)
        self.mtg_proxy_printer_name = QtWidgets.QLabel(self.tab_about)
        self.mtg_proxy_printer_name.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.mtg_proxy_printer_name.setObjectName("mtg_proxy_printer_name")
        self.tab_about_layout.addWidget(self.mtg_proxy_printer_name, 0, 1, 1, 1)
        self.mtg_proxy_printer_icon = QtWidgets.QLabel(self.tab_about)
        self.mtg_proxy_printer_icon.setText("")
        self.mtg_proxy_printer_icon.setObjectName("mtg_proxy_printer_icon")
        self.tab_about_layout.addWidget(self.mtg_proxy_printer_icon, 0, 0, 1, 1)
        self.mtg_proxy_printer_version_header_label = QtWidgets.QLabel(self.tab_about)
        self.mtg_proxy_printer_version_header_label.setTextInteractionFlags(QtCore.Qt.NoTextInteraction)
        self.mtg_proxy_printer_version_header_label.setObjectName("mtg_proxy_printer_version_header_label")
        self.tab_about_layout.addWidget(self.mtg_proxy_printer_version_header_label, 2, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.tab_about_layout.addItem(spacerItem, 0, 2, 1, 1)
        self.python_version_header_label = QtWidgets.QLabel(self.tab_about)
        self.python_version_header_label.setObjectName("python_version_header_label")
        self.tab_about_layout.addWidget(self.python_version_header_label, 3, 0, 1, 1)
        self.about_text = QtWidgets.QTextBrowser(self.tab_about)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.about_text.sizePolicy().hasHeightForWidth())
        self.about_text.setSizePolicy(sizePolicy)
        self.about_text.setOpenExternalLinks(True)
        self.about_text.setObjectName("about_text")
        self.tab_about_layout.addWidget(self.about_text, 1, 0, 1, 3)
        self.mtg_proxy_printer_version_label = QtWidgets.QLabel(self.tab_about)
        self.mtg_proxy_printer_version_label.setText("")
        self.mtg_proxy_printer_version_label.setTextFormat(QtCore.Qt.PlainText)
        self.mtg_proxy_printer_version_label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.mtg_proxy_printer_version_label.setTextInteractionFlags(QtCore.Qt.TextSelectableByMouse)
        self.mtg_proxy_printer_version_label.setObjectName("mtg_proxy_printer_version_label")
        self.tab_about_layout.addWidget(self.mtg_proxy_printer_version_label, 2, 1, 1, 2)
        self.tab_widget.addTab(self.tab_about, "")
        self.changelog_text_browser = QtWidgets.QTextBrowser()
        self.changelog_text_browser.setInputMethodHints(QtCore.Qt.ImhNone)
        self.changelog_text_browser.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.changelog_text_browser.setOpenExternalLinks(True)
        self.changelog_text_browser.setObjectName("changelog_text_browser")
        self.tab_widget.addTab(self.changelog_text_browser, "")
        self.license_text_browser = QtWidgets.QTextBrowser()
        self.license_text_browser.setInputMethodHints(QtCore.Qt.ImhNone)
        self.license_text_browser.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.license_text_browser.setOpenExternalLinks(True)
        self.license_text_browser.setObjectName("license_text_browser")
        self.tab_widget.addTab(self.license_text_browser, "")
        self.third_party_license_text_browser = QtWidgets.QTextBrowser()
        self.third_party_license_text_browser.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.third_party_license_text_browser.setOpenExternalLinks(True)
        self.third_party_license_text_browser.setObjectName("third_party_license_text_browser")
        self.tab_widget.addTab(self.third_party_license_text_browser, "")
        self.verticalLayout.addWidget(self.tab_widget)
        self.buttonBox = QtWidgets.QDialogButtonBox(AboutDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Close)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(AboutDialog)
        self.tab_widget.setCurrentIndex(0)
        self.buttonBox.accepted.connect(AboutDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(AboutDialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(AboutDialog)

    def retranslateUi(self, AboutDialog):
        _translate = QtCore.QCoreApplication.translate
        AboutDialog.setWindowTitle(_translate("AboutDialog", "About MTGProxyPrinter"))
        self.mtg_proxy_printer_name.setText(_translate("AboutDialog", "<html><head/><body><p><span style=\" font-size:xx-large; font-weight:600;\">MTGProxyPrinter</span></p><p><br/></p></body></html>"))
        self.mtg_proxy_printer_version_header_label.setText(_translate("AboutDialog", "Version:"))
        self.python_version_header_label.setText(_translate("AboutDialog", "Python Version:"))
        self.about_text.setMarkdown(_translate("AboutDialog", "{application_name} allows printing \n"
"[Magic: The Gathering](https://magic.wizards.com/) cards for play-testing\n"
"purposes.\n"
"\n"
"{application_name} is unofficial Fan Content permitted under the \n"
"[Fan Content Policy](https://company.wizards.com/fancontentpolicy). Not\n"
"approved/endorsed by Wizards. Portions of the materials used are property of\n"
"Wizards of the Coast. Â©[Wizards of the Coast LLC](https://company.wizards.com/).\n"
"\n"
"Under the Fan Content Policy, you may neither sell the data downloaded using\n"
"this program, including the card database content and downloaded card images,\n"
"nor any documents created, both in digital and physical form.\n"
"\n"
"Project Website: \n"
"[{application_name} home page]({application_home_page})\n"
"\n"
""))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.tab_about), _translate("AboutDialog", "About"))
        self.changelog_text_browser.setDocumentTitle(_translate("AboutDialog", "Changelog"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.changelog_text_browser), _translate("AboutDialog", "Changelog"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.license_text_browser), _translate("AboutDialog", "License"))
        self.tab_widget.setTabText(self.tab_widget.indexOf(self.third_party_license_text_browser), _translate("AboutDialog", "Third party licenses"))
