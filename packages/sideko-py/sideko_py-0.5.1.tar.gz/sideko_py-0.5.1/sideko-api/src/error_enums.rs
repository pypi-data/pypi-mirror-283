/// Generated by Sideko (sideko.dev)
#[allow(unused)]
use crate::schemas::*;
/// Unifies the possible errors from list_api_projects
#[derive(Debug, Clone)]
pub enum ListApiProjectsErrors {
    ApiError(serde_json::Value),
    /// Expected response body for status code 401
    Status401(Error),
}
/// Unifies the possible errors from list_api_versions
#[derive(Debug, Clone)]
pub enum ListApiVersionsErrors {
    ApiError(serde_json::Value),
    /// Expected response body for status code 401
    Status401(Error),
}
/// Unifies the possible errors from exchange_code_for_key
#[derive(Debug, Clone)]
pub enum ExchangeCodeForKeyErrors {
    ApiError(serde_json::Value),
}
/// Unifies the possible errors from cli_check_updates
#[derive(Debug, Clone)]
pub enum CliCheckUpdatesErrors {
    ApiError(serde_json::Value),
}
/// Unifies the possible errors from create_api_project
#[derive(Debug, Clone)]
pub enum CreateApiProjectErrors {
    ApiError(serde_json::Value),
}
/// Unifies the possible errors from create_api_version
#[derive(Debug, Clone)]
pub enum CreateApiVersionErrors {
    ApiError(serde_json::Value),
    /// Expected response body for status code 401
    Status401(Error),
}
/// Unifies the possible errors from stateless_generate_sdk
#[derive(Debug, Clone)]
pub enum StatelessGenerateSdkErrors {
    ApiError(serde_json::Value),
    /// Expected response body for status code 400
    Status400(Error),
    /// Expected response body for status code 401
    Status401(Error),
}
