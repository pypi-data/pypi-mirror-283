[project]
name = "geodense"
description = "Python library and CLI tool to check density and densify (GeoJSON) geometries using the geodesic (ellipsoidal great-circle) calculation for accurate CRS transformations"
keywords = [
    "coordinate reference system",
    "CRS",
    "densify",
    "geodesic",
    "geojson",
    "great-circle",
    "NSGI",
]
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
]
readme = { file = "./README.md", content-type = "text/markdown" }
dependencies = [
    "geojson-pydantic ~= 1.0",
    "pyproj ~= 3.6.0",
    "rich-argparse ~= 1.3",
    "shapely ~= 2.0.2",
]
requires-python = ">=3.11"
dynamic = ["version"]

[project.urls]
repository = "https://github.com/GeodetischeInfrastructuur/geodense"

[project.optional-dependencies]
dev = [
    "black == 24.4.2",
    "build == 1.2.1",
    "cli-test-helpers == 4.0.0",
    "coverage == 7.5.4",
    "mypy == 1.10.1",
    "mypy-extensions == 1.0.0",
    "pytest == 8.2.2",
    "pytest-env == 1.1.3",
    "ruff == 0.5.1",
    "twine == 5.1.1",
]


[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project.scripts]
geodense = "geodense.main:main"
gden = "geodense.main:main"

[tool.setuptools_scm]

[tool.setuptools.packages.find]
where = ["src"] # list of folders that contain the packages (["."] by default)
include = [
    "geodense*",
] # package names should match these glob patterns (["*"] by default)
namespaces = false # to disable scanning PEP 420 namespaces (true by default)

[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    "__pypackages__",
    "_build",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git-rewrite",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120

target-version = "py311"

[tool.ruff.lint]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Avoid enforcing line-length violations (`E501`) - fixed by Black
ignore = ["E501"]

# see https://beta.ruff.rs/docs/rules/
select = [
    "E",
    "F",
    "B",
    "ISC",
    "PL",
    "RUF",
    "PT",
    "N",
    "I",
    "C90",
    "W",
    "UP",
    "S",
    "ARG",
    "SIM",
    "Q",
    "ANN",
]

unfixable = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "E",
    "F",
    "B",
    "ISC",
    "PL",
    "RUF",
    "PT",
    "N",
    "I",
    "C90",
    "W",
    "UP",
    "S",
    "ARG",
    "SIM",
    "Q",
]

# disable rules for tests
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed
    "ANN",  # no type annotation required
]
"util.py" = [
    "S101", # asserts allowed
    "ANN",  # no type annotation required
]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
