#!/usr/bin/env python


def print_poscar(st_dict):

    if "comment" in st_dict and st_dict["comment"] is not None:
        print(st_dict["comment"])
    else:
        print("Generated by pypolymlp")

    print("1.0")
    for n in st_dict["axis"].T:
        print(
            "  ",
            "{0:15.15f}".format(n[0]),
            "{0:15.15f}".format(n[1]),
            "{0:15.15f}".format(n[2]),
        )
    index = 0
    print(" ", end="")
    for n in st_dict["n_atoms"]:
        print(st_dict["elements"][index], " ", end="")
        index += n
    print()
    print(" ", end="")
    for n in st_dict["n_atoms"]:
        print(n, " ", end="")
    print()
    print("Direct")
    for n in st_dict["positions"].T:
        print(
            "  ",
            "{0:15.15f}".format(n[0]),
            "{0:15.15f}".format(n[1]),
            "{0:15.15f}".format(n[2]),
        )


def write_poscar_file(st_dict, filename="poscar_pypolymlp", header=None):

    f = open(filename, "w")

    if header is not None:
        print(header, file=f)
    else:
        if "comment" in st_dict and st_dict["comment"] is not None:
            print(st_dict["comment"], file=f)
        else:
            print("Generated by pypolymlp", file=f)

    print("1.0", file=f)
    for n in st_dict["axis"].T:
        print(
            "  ",
            "{0:15.15f}".format(n[0]),
            "{0:15.15f}".format(n[1]),
            "{0:15.15f}".format(n[2]),
            file=f,
        )
    index = 0
    print(" ", end="", file=f)
    for n in st_dict["n_atoms"]:
        if n > 0:
            print(st_dict["elements"][index], " ", end="", file=f)
            index += n
        else:
            print("Z  ", end="", file=f)
    print("", file=f)
    print(" ", end="", file=f)
    for n in st_dict["n_atoms"]:
        print(n, " ", end="", file=f)
    print("", file=f)
    print("Direct", file=f)
    for n in st_dict["positions"].T:
        print(
            "  ",
            "{0:15.15f}".format(float(n[0])),
            "{0:15.15f}".format(float(n[1])),
            "{0:15.15f}".format(float(n[2])),
            file=f,
        )

    f.close()
