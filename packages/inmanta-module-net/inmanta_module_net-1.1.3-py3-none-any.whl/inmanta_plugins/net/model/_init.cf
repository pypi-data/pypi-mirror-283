"""
    Copyright 2020 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""
import std

typedef mac_addr as string matching std::validate_type(
    "pydantic.constr", self, {"regex": "^([0-9a-fA-F]{2})(:[0-9a-fA-F]{2}){5}|$", "strict": true}
)
"""
    A string that only matches valid macaddresses that are colon separated.
"""

typedef vlan_id as int matching std::validate_type("pydantic.conint", self, {"ge": 0, "lt": 4096})
"""
    A constrained integer that represents a vlan identifier
"""

entity Interface:
    """
        This interface models an ethernet network interface.
    """
    mac_addr mac=""
    string name
    number mtu=1500
    bool vlan=false
end


std::Host.ifaces [0:] -- Interface.host [1]
"""
    Host ethernet interface are always placed inside a host
"""

implement Interface using std::none