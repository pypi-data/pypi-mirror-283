"use strict";(self.webpackChunkjupyterlab_copy_to_recent=self.webpackChunkjupyterlab_copy_to_recent||[]).push([[890],{509:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var s,c,i,o,a=n(635),r=n(966),l=n(811),h=n(828),d=n(602),p=n(256);!function(e){e.copyPasteFile="jupyterlab-copy-to-recent:copypaste"}(s||(s={})),function(e){e.recents="jupyterlab-recents"}(c||(c={})),function(e){e.recents=`${c}:recents`}(i||(i={})),function(e){e.openRecent=`${c.recents}:open-recent`,e.clearRecents=`${c.recents}:clear-recents`}(s||(s={})),function(e){e.mergePaths=function(e,t){return e.endsWith("/")&&(e=e.slice(0,-1)),t.endsWith("/")&&(t=t.slice(1)),`${e}/${t}`}}(o||(o={}));class u{constructor(e,t,n){this.recentsChanged=new d.Signal(this),this.awaitingSaveCompletion=!1,this.serverRoot=a.PageConfig.getOption("serverRoot"),this.stateDB=t,this.contentsManager=n,this.recentsMenu=new p.Menu({commands:e}),this.recentsMenu.title.label="Copy to Recent",this.recentsChanged.connect((e=>{this.syncRecentsMenu()})),this._recents=[]}get recents(){return(this._recents||[]).filter((e=>e.root===this.serverRoot))}set recents(e){const t=this._recents.filter((e=>e.root!==this.serverRoot)),n=e.filter((e=>e.root===this.serverRoot)).concat(t);this._recents=n,this.saveRecents(),this.recentsChanged.emit(this.recents)}async init(){return await this.loadRecents(),this.validateRecents()}addRecent(e,t){const n={root:this.serverRoot,path:e,contentType:t},s=this.recents;if("directory"!==n.contentType)return;const c=s.findIndex((t=>t.path===e));c>=0&&s.splice(c,1),s.unshift(n),s.length>10&&s.pop(),this.recents=s}removeRecents(e){const t=this.recents;this.recents=t.filter((t=>-1===e.indexOf(t.path)))}async validateRecents(){clearTimeout(this.validator),this.validator=setTimeout(this.validateRecents.bind(this),12e3);const e=this.recents,t=(await Promise.all(e.map((async e=>{var t;try{return await this.contentsManager.get(e.path,{content:!1}),null}catch(n){if(404===(null===(t=n.response)||void 0===t?void 0:t.status))return e.path}})))).filter((e=>void 0!==e));t.length>0&&this.removeRecents(t)}syncRecentsMenu(){this.recentsMenu.clearItems(),[this.recents.filter((e=>"directory"===e.contentType))].forEach((e=>{e.length>0&&(e.forEach((e=>{this.recentsMenu.addItem({command:s.copyPasteFile,args:{recent:e}})})),this.recentsMenu.addItem({type:"separator"}))}))}async loadRecents(){const e=await this.stateDB.fetch(i.recents);this._recents=e||[],this.recentsChanged.emit(this.recents)}saveRecents(){clearTimeout(this.saveRoutine),this.saveRoutine=setTimeout((async()=>{if(this.awaitingSaveCompletion)this.saveRecents();else{this.awaitingSaveCompletion=!0;try{await this.stateDB.save(i.recents,this._recents),this.awaitingSaveCompletion=!1}catch(e){this.awaitingSaveCompletion=!1,console.log("Saving recents failed"),this.saveRecents()}}}),500)}}const y={id:"jupyterlab-copy-to-recent:plugin",description:"Copy files to the most recently open folders",autoStart:!0,requires:[l.IFileBrowserFactory,l.IDefaultFileBrowser,h.IStateDB,r.IDocumentManager],activate:(e,t,n,c,i)=>{const{commands:a,serviceManager:r}=e,{tracker:l}=t,h=new u(a,c,r.contents);n.model.fileChanged.connect((async(t,n)=>{if(null===n.newValue||null===n.newValue.path||void 0===n.newValue.path)return;const s=n.newValue.path;if("new"===n.type||"rename"===n.type||"save"===n.type){const t=await i.services.contents.get(s,{content:!1}),n=e.docRegistry.getFileTypeForModel(t).contentType;if("directory"===n&&h.addRecent(s,"directory"),"directory"!==n){const e=s.lastIndexOf("/")>0?s.slice(0,s.lastIndexOf("/")):"";h.addRecent(e,"directory")}}else if("delete"===n.type){const e=s.lastIndexOf("/")>0?s.slice(0,s.lastIndexOf("/")):"";h.addRecent(e,"directory")}})),a.addCommand(s.copyPasteFile,{execute:async e=>{var t;const n=l.currentWidget;if(n){const s=Array.from(n.selectedItems());for(const n of s){const s=e.recent,c=o.mergePaths(s.path,n.name);try{await r.contents.delete(c)}catch(e){404===(null===(t=e.response)||void 0===t?void 0:t.status)&&console.log("File does not yet exist")}console.log("copying",n.name,"from",n.path,"to",c),i.copy(n.path,c)}}},label:e=>e.recent.path}),e.contextMenu.addItem({type:"submenu",submenu:h.recentsMenu,selector:".jp-DirListing-content",rank:10}),h.init(),console.log("JupyterLab extension jupyterlab-copy-to-recent is activated!")}}}}]);