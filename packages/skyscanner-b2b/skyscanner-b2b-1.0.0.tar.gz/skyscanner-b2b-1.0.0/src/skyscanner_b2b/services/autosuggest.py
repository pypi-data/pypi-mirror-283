# This file was generated by liblab | https://liblab.com/

from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..models.utils.cast_models import cast_models
from ..models.autosuggest_hotels_request import AutosuggestHotelsRequest
from ..models.autosuggest_flights_request import AutosuggestFlightsRequest
from ..models.autosuggest_carhire_request import AutosuggestCarhireRequest


class AutosuggestService(BaseService):

    @cast_models
    def autosuggest_flights(
        self, request_body: AutosuggestFlightsRequest = None, x_api_key: str = None
    ):
        """/autosuggest/flights

        :param request_body: The request body., defaults to None
        :type request_body: AutosuggestFlightsRequest, optional
        :param x_api_key: x_api_key, defaults to None
        :type x_api_key: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        """

        Validator(AutosuggestFlightsRequest).is_optional().validate(request_body)
        Validator(str).is_optional().validate(x_api_key)

        serialized_request = (
            Serializer(
                f"{self.base_url}/apiservices/v3/autosuggest/flights",
                self.get_default_headers(),
            )
            .add_header("x-api-key", x_api_key)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response = self.send_request(serialized_request)

        return response

    @cast_models
    def autosuggest_carhire(
        self, request_body: AutosuggestCarhireRequest = None, x_api_key: str = None
    ):
        """/autosuggest/carhire

        :param request_body: The request body., defaults to None
        :type request_body: AutosuggestCarhireRequest, optional
        :param x_api_key: x_api_key, defaults to None
        :type x_api_key: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        """

        Validator(AutosuggestCarhireRequest).is_optional().validate(request_body)
        Validator(str).is_optional().validate(x_api_key)

        serialized_request = (
            Serializer(
                f"{self.base_url}/apiservices/v3/autosuggest/carhire",
                self.get_default_headers(),
            )
            .add_header("x-api-key", x_api_key)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response = self.send_request(serialized_request)

        return response

    @cast_models
    def autosuggest_hotels(
        self, request_body: AutosuggestHotelsRequest = None, x_api_key: str = None
    ):
        """/autosuggest/hotels

        :param request_body: The request body., defaults to None
        :type request_body: AutosuggestHotelsRequest, optional
        :param x_api_key: x_api_key, defaults to None
        :type x_api_key: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        """

        Validator(AutosuggestHotelsRequest).is_optional().validate(request_body)
        Validator(str).is_optional().validate(x_api_key)

        serialized_request = (
            Serializer(
                f"{self.base_url}/apiservices/v3/autosuggest/hotels",
                self.get_default_headers(),
            )
            .add_header("x-api-key", x_api_key)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response = self.send_request(serialized_request)

        return response
