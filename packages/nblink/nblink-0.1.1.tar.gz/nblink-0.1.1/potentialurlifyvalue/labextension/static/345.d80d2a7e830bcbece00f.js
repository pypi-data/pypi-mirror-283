"use strict";(self.webpackChunkpotentialnblinkvalue=self.webpackChunkpotentialnblinkvalue||[]).push([[345],{345:(t,e,o)=>{o.r(e),o.d(e,{default:()=>y});var n=o(751),l=o(811),s=o(902),i=o(110),a=o(858),c=o(256);class r extends c.Widget{constructor(t,e){super(),this.onSettingsChange=t,this.settings={...e},this.container=document.createElement("div"),this.node.appendChild(this.container),this.buildDialog()}buildDialog(){this.container.innerHTML="",this.container.style.padding="20px",this.container.style.maxWidth="400px",this.container.style.width="100%",this.container.style.boxSizing="border-box",this.container.style.fontFamily="Arial, sans-serif";const t=this.createSwitchControl("Copy notebook output",this.settings.copyOutput,(t=>this.updateSettings({copyOutput:t})));this.container.appendChild(t);const e=document.createElement("label");e.style.display="block",e.style.marginTop="20px",e.style.marginBottom="8px",e.style.fontWeight="bold",e.textContent="URL path:",this.container.appendChild(e);const o=document.createElement("select");o.style.width="100%",o.style.padding="8px",o.style.marginBottom="15px",o.style.borderRadius="4px",o.style.border="1px solid #ccc",[{label:"JupyterLite",value:"/jupyterlite/lab/index.html",openAsNotebook:!1},{label:"JupyterLite Notebook",value:"/jupyterlite/lab/index.html",openAsNotebook:!0},{label:"JupyterLab",value:"/lab/index.html",openAsNotebook:!1},{label:"Custom",value:"custom",openAsNotebook:!1}].forEach((t=>{const e=document.createElement("option");e.value=JSON.stringify(t),e.textContent=t.label,(t.value===this.settings.urlPath&&t.openAsNotebook===this.settings.openAsNotebook||"custom"===t.value&&null!==this.settings.customUrl)&&(e.selected=!0),o.appendChild(e)})),this.container.appendChild(o);const n=document.createElement("p");n.style.fontSize="0.9em",n.style.color="#666",n.style.marginTop="10px",n.style.marginBottom="15px",n.style.wordBreak="break-all",this.container.appendChild(n);const l=document.createElement("input");l.type="text",l.placeholder="Enter custom URL",l.style.width="100%",l.style.display=null!==this.settings.customUrl?"block":"none",l.value=this.settings.customUrl||"",this.container.appendChild(l);const s=document.createElement("p");s.style.fontSize="0.9em",s.style.color="#666",s.style.marginTop="8px",s.style.marginBottom="15px",s.style.wordBreak="break-all",s.style.display=null!==this.settings.customUrl?"block":"none",s.textContent="Custom urls should link to the /lab/index.html path for your jupyterlab/lite instance.",this.container.appendChild(s),o.addEventListener("change",(()=>{const t=JSON.parse(o.value);"custom"===t.value?(l.style.display="block",this.updateSettings({urlPath:"custom",openAsNotebook:!1,customUrl:l.value||null}),s.style.display="block"):(l.style.display="none",s.style.display="none",this.updateSettings({urlPath:t.value,openAsNotebook:t.openAsNotebook,customUrl:null})),this.updateUrlDisplay(n)})),l.addEventListener("input",(()=>{this.updateSettings({urlPath:"custom",openAsNotebook:!1,customUrl:l.value||null}),this.updateUrlDisplay(n)})),this.updateUrlDisplay(n)}updateUrlDisplay(t){let e=new URL(window.location.href).origin;"custom"===this.settings.urlPath&&this.settings.customUrl?t.textContent=`Links to: ${this.settings.customUrl}`:t.textContent=`Links to: ${e}${this.settings.urlPath}`}createSwitchControl(t,e,o){const n=document.createElement("label");n.style.display="flex",n.style.alignItems="center",n.style.marginBottom="15px",n.style.cursor="pointer";const l=document.createElement("div");l.style.width="40px",l.style.height="20px",l.style.backgroundColor=e?"#4CAF50":"#ccc",l.style.borderRadius="10px",l.style.position="relative",l.style.transition="background-color 0.3s",l.style.marginRight="10px";const s=document.createElement("div");return s.style.width="18px",s.style.height="18px",s.style.backgroundColor="white",s.style.borderRadius="50%",s.style.position="absolute",s.style.top="1px",s.style.left=e?"21px":"1px",s.style.transition="left 0.3s",l.appendChild(s),n.appendChild(l),n.appendChild(document.createTextNode(t)),n.addEventListener("click",(()=>{const t="1px"===s.style.left;s.style.left=t?"21px":"1px",l.style.backgroundColor=t?"#4CAF50":"#ccc",o(t)})),n}updateSettings(t){this.settings={...this.settings,...t},this.onSettingsChange(this.settings)}}var p=o(212);let u=null;let d={copyOutput:!1,openAsNotebook:!0,urlPath:"/jupyterlite/lab/index.html",customUrl:null};var m=o(262);const y={id:"potentialnblinkvalue",autoStart:!0,requires:[l.IFileBrowserFactory,n.IRouter,s.INotebookTracker],activate:async(t,e,o,n)=>{try{console.log("Activating potentialnblinkvalue extension: new"),o.register({command:"notebook:start-nav",pattern:/(tempNotebook=1)/,rank:20}),function(t,e){const o=new i.ToolbarButton({label:"Save to URL",onClick:()=>{const t=e.currentWidget;console.log("in press",t,d),t&&async function(t,e,o){let n=t.context.model.toJSON();if(e.copyOutput||(n.cells=n.cells.map((t=>("code"===t.cell_type&&(t.outputs=[],t.execution_count=null),t)))),JSON.stringify(n).length>1e4){const t=await(0,i.showDialog)({title:"Large Notebook",body:"The notebook content exceeds 10,000 characters. Do you want to continue with the full content or copy only inputs?",buttons:[i.Dialog.cancelButton(),i.Dialog.okButton({label:"Full Content"}),i.Dialog.okButton({label:"Inputs Only"})]});if("Inputs Only"===t.button.label)n.cells=n.cells.map((t=>("code"===t.cell_type&&(t.outputs=[],t.execution_count=null),t)));else if(!1===t.button.accept)return}const l=p.compressToEncodedURIComponent(JSON.stringify(n));let s;if("custom"===e.urlPath&&e.customUrl){let t=e.customUrl;t.startsWith("http")||(t=`http://${t}`),s=new URL(e.customUrl)}else{let t=new URL(window.location.href).origin;s=new URL(`${t}${e.urlPath}`)}s.hash=`notebook=${l}`,s.searchParams.set("tempNotebook","1"),s.searchParams.set("path","temp.ipynb"),e.openAsNotebook&&s.searchParams.set("openAsNotebook","1"),console.log("new url",s.toString());const a=s.toString();i.Clipboard.copyToSystem(a),function(t,e,o=2e3){const n=document.createElement("div");n.textContent=t,n.style.position="absolute",n.style.backgroundColor="rgba(0, 0, 0, 0.7)",n.style.color="white",n.style.padding="10px 20px",n.style.borderRadius="5px",n.style.zIndex="1000",n.style.fontSize="14px";const l=e.getBoundingClientRect();n.style.top=`${l.bottom+10}px`,n.style.left=`${l.left}px`,document.body.appendChild(n),setTimeout((()=>{n.style.opacity="0",n.style.transition="opacity 0.5s ease",setTimeout((()=>document.body.removeChild(n)),500)}),o)}("Copied to clipboard",o)}(t,d,o.node)},tooltip:"Save notebook content to URL and copy to clipboard"}),n=new i.ToolbarButton({icon:a.settingsIcon,onClick:()=>{const t=new r((t=>{d=t}),d);(0,i.showDialog)({title:"Save to URL Settings",body:t,buttons:[i.Dialog.okButton()]})},tooltip:"Save to URL Settings"});e.widgetAdded.connect(((t,e)=>{console.log("added",o,n,e.toolbar),e.toolbar.insertItem(10,"saveToUrl",o),e.toolbar.insertItem(11,"settingsButton",n)}))}(0,n),function(){const t=new URLSearchParams(window.location.hash.slice(1));u=t,console.log("Saved URL parameters:",u.toString())}(),await function(t,e,o){o&&(t.commands.addCommand("notebook:start-nav",{label:"Open Temp Notebook from URL",execute:async e=>{const{request:n}=e,l=new URL(`http://example.com${n}`).searchParams,s=l.get("tempNotebook"),i="1"===l.get("openAsNotebook"),a=async()=>{o.routed.disconnect(a),s&&"1"===s&&await t.commands.execute("notebook:open-temp",{openAsNotebook:i})};o.routed.connect(a)}}),t.commands.addCommand("notebook:open-temp",{label:"Open Temporary Notebook",execute:async o=>{var n,l;const s=null!==(n=null==e?void 0:e.tracker.currentWidget)&&void 0!==n?n:e.defaultBrowser,i=o.cwd||(null!==(l=null==s?void 0:s.model.path)&&void 0!==l?l:""),a=o.kernelId||"",c=o.kernelName||"",r=o.openAsNotebook;await(async(e,o,n,l)=>{const s=await t.commands.execute("docmanager:new-untitled",{path:e,type:"notebook"});if(void 0!==s){const e=await t.commands.execute("docmanager:open",{path:s.path,factory:"Notebook",kernel:{id:o,name:n}});e.isUntitled=!0;const i=`temp-notebook-${m.UUID.uuid4()}`;await e.context.rename(i+".ipynb");const a=function(){if(u){const t=u.get("notebook");if(t){const e=p.decompressFromEncodedURIComponent(t),o=JSON.parse(e);return console.log("decompressedContent",o),o}}return null}();return a&&(e.context.model.fromJSON(a),await e.context.save()),l&&function(t){const e=new URL(window.location.href);let o=e.origin;e.pathname.includes("/jupyterlite/")&&(o+="/jupyterlite");const n=`${o}/notebooks/index.html?path=${t}`;window.location.href=n}(e.context.path),e}})(i,a,c,r)}}))}(t,e,o),console.log("potentialnblinkvalue extension activated successfully")}catch(t){console.error("Error activating potentialnblinkvalue extension:",t)}}}}}]);