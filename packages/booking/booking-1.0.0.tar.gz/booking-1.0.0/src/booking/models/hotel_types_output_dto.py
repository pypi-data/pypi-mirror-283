# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .translation_dto import TranslationDto


@JsonMap({})
class HotelTypesOutputDto(BaseModel):
    """HotelTypesOutputDto

    :param translations: translations, defaults to None
    :type translations: List[TranslationDto], optional
    :param name: name, defaults to None
    :type name: str, optional
    :param hotel_type_id: hotel_type_id, defaults to None
    :type hotel_type_id: int, optional
    """

    def __init__(
        self,
        translations: List[TranslationDto] = None,
        name: str = None,
        hotel_type_id: int = None,
    ):
        if translations is not None:
            self.translations = self._define_list(translations, TranslationDto)
        if name is not None:
            self.name = name
        if hotel_type_id is not None:
            self.hotel_type_id = hotel_type_id
