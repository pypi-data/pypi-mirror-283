# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .directory_response import DirectoryResponse
from .directory_with_parents_and_children_response_files_item import DirectoryWithParentsAndChildrenResponseFilesItem


class DirectoryWithParentsAndChildrenResponse(UncheckedBaseModel):
    name: str = pydantic_v1.Field()
    """
    Name of the directory to create.
    """

    parent_id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    ID of the parent directory. Will be `None` if the directory is the root directory. Starts with `dir_`.
    """

    id: str = pydantic_v1.Field()
    """
    String ID of directory. Starts with `dir_`.
    """

    created_at: dt.datetime
    updated_at: dt.datetime
    subdirectories: typing.List[DirectoryResponse] = pydantic_v1.Field()
    """
    List of subdirectories in the directory.
    """

    files: typing.List[DirectoryWithParentsAndChildrenResponseFilesItem] = pydantic_v1.Field()
    """
    List of files in the directory.
    """

    parents: typing.List[DirectoryResponse] = pydantic_v1.Field()
    """
    List of parent directories of the directory.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
