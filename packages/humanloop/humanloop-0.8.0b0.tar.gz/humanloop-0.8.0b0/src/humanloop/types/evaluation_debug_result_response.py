# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .evaluation_debug_result_response_value import EvaluationDebugResultResponseValue
from .log_response import LogResponse


class EvaluationDebugResultResponse(UncheckedBaseModel):
    """
    This is similar to an `EvaluationResult` but is ephemeral as it is only for synchronous
    debug runs. It does not have an ID, or a reference to an evaluation run or even an evaluation
    function.
    """

    log_id: str
    log: LogResponse
    datapoint_id: typing.Optional[str] = None
    llm_evaluation_log: typing.Optional[LogResponse] = None
    value: typing.Optional[EvaluationDebugResultResponseValue] = None
    error: typing.Optional[str] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
