[tool.poetry]
name = "detail-sdk"
version = "0.0.1"
description = ""
authors = ["Detail <pypi@detail.dev>"]
packages = [{include = "detail/client"}]
include = ["detail/__init__.py"]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"  # <3.12 due to python-minifier
forbiddenfruit = "*"
opentelemetry-exporter-otlp = "*"
opentelemetry-exporter-otlp-proto-http = "*"
opentelemetry-instrumentation-django = "0.45b0"
opentelemetry-instrumentation-flask = "0.45b0"
opentelemetry-instrumentation-psycopg2 = "0.45b0"
opentelemetry-instrumentation-sqlite3 = "0.45b0"
opentelemetry-sdk = "*"
types-psycopg2 = "*"
wrapt = "*"
vcrpy = "*"
coverage = "^7.5.3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
arrow = "*"
django = "*"
django-stubs = "*"
flask = "*"
flask-sqlalchemy = "*"
mypy = "*"
pre-commit = "*"
psycopg2-binary ="*"
pytest = "*"
redis = "*"
ruff = "*"
python-minifier = "*"
requests = "*"
click = "*"
celery = "*"
sentry-sdk = "*"
werkzeug = "*"

[tool.poetry.group.server]
optional = true

[tool.poetry.group.server.dependencies]
psycopg2 = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = ["ignore:::.*opentelemetry.*"]

[tool.ruff]
src = ["detail", "examples"]
lint.extend-select = ["I"]
lint.isort.known-third-party = ["coverage"]
