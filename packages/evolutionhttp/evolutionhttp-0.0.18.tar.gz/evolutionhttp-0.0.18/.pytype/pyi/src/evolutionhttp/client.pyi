# (generated with --quick)

import aiohttp
import logging
import re
from typing import Any, Coroutine, Optional, Tuple

_LOGGER: logging.Logger

class BryantEvolutionClient:
    __doc__: str
    _base_url: str
    _system_id: Any
    _zone_id: Any
    def __init__(self, host, system_id = ..., zone_id = ...) -> None: ...
    def _api_request(self, command: str) -> Coroutine[Any, Any, Optional[str]]: ...
    def read_cooling_setpoint(self) -> Coroutine[Any, Any, Optional[int]]: ...
    def read_current_temperature(self) -> Coroutine[Any, Any, Optional[int]]: ...
    def read_fan_mode(self) -> Coroutine[Any, Any, Optional[str]]: ...
    def read_heating_setpoint(self) -> Coroutine[Any, Any, Optional[int]]: ...
    def read_hvac_mode(self) -> Coroutine[Any, Any, Optional[Tuple[str, bool]]]: ...
    def set_cooling_setpoint(self, temperature: int) -> Coroutine[Any, Any, bool]: ...
    def set_fan_mode(self, fan_mode: str) -> Coroutine[Any, Any, bool]: ...
    def set_heating_setpoint(self, temperature: int) -> Coroutine[Any, Any, bool]: ...
    def set_hvac_mode(self, hvac_mode: str) -> Coroutine[Any, Any, bool]: ...

def _parse_temperature(response: str) -> Optional[int]: ...
