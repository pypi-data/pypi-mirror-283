# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"currency_code": "CurrencyCode", "monetary_value": "MonetaryValue"})
class NegotiatedRateChargesTotalChargesWithTaxes(BaseModel):
    """TotalChargesWithTaxes container would be returned only if TaxInformationIndicator is present in request. TotalChargesWithTaxes contains total charges including total taxes applied to a shipment.

    :param currency_code: TotalChargesWithTaxes currency code type. The currency code used in the Shipment request is returned.
    :type currency_code: str
    :param monetary_value: TotalChargesWithTaxes monetary value amount.  Valid values are from 0 to 9999999999999999.99
    :type monetary_value: str
    """

    def __init__(self, currency_code: str, monetary_value: str):
        self.currency_code = currency_code
        self.monetary_value = monetary_value
