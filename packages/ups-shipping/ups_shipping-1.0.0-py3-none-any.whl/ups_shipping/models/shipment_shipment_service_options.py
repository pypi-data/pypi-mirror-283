# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .shipment_service_options_cod import ShipmentServiceOptionsCod
from .shipment_service_options_access_point_cod import (
    ShipmentServiceOptionsAccessPointCod,
)
from .shipment_service_options_notification import ShipmentServiceOptionsNotification
from .shipment_service_options_label_delivery import ShipmentServiceOptionsLabelDelivery
from .shipment_service_options_international_forms import (
    ShipmentServiceOptionsInternationalForms,
)
from .shipment_service_options_delivery_confirmation import (
    ShipmentServiceOptionsDeliveryConfirmation,
)
from .shipment_service_options_label_method import ShipmentServiceOptionsLabelMethod
from .shipment_service_options_pre_alert_notification import (
    ShipmentServiceOptionsPreAlertNotification,
)
from .shipment_service_options_restricted_articles import (
    ShipmentServiceOptionsRestrictedArticles,
)


@JsonMap(
    {
        "saturday_delivery_indicator": "SaturdayDeliveryIndicator",
        "saturday_pickup_indicator": "SaturdayPickupIndicator",
        "cod": "COD",
        "access_point_cod": "AccessPointCOD",
        "deliver_to_addressee_only_indicator": "DeliverToAddresseeOnlyIndicator",
        "direct_delivery_only_indicator": "DirectDeliveryOnlyIndicator",
        "notification": "Notification",
        "label_delivery": "LabelDelivery",
        "international_forms": "InternationalForms",
        "delivery_confirmation": "DeliveryConfirmation",
        "return_of_document_indicator": "ReturnOfDocumentIndicator",
        "import_control_indicator": "ImportControlIndicator",
        "label_method": "LabelMethod",
        "commercial_invoice_removal_indicator": "CommercialInvoiceRemovalIndicator",
        "up_scarbonneutral_indicator": "UPScarbonneutralIndicator",
        "pre_alert_notification": "PreAlertNotification",
        "exchange_forward_indicator": "ExchangeForwardIndicator",
        "hold_for_pickup_indicator": "HoldForPickupIndicator",
        "dropoff_at_ups_facility_indicator": "DropoffAtUPSFacilityIndicator",
        "lift_gate_for_pick_up_indicator": "LiftGateForPickUpIndicator",
        "lift_gate_for_delivery_indicator": "LiftGateForDeliveryIndicator",
        "sdl_shipment_indicator": "SDLShipmentIndicator",
        "epra_release_code": "EPRAReleaseCode",
        "restricted_articles": "RestrictedArticles",
        "inside_delivery": "InsideDelivery",
        "item_disposal": "ItemDisposal",
    }
)
class ShipmentShipmentServiceOptions(BaseModel):
    """Container for Shipment Service Options.

    :param saturday_delivery_indicator: Saturday delivery indicator. The presence indicates Saturday delivery is requested and the absence indicates Saturday delivery is not requested.  This is an empty tag, any value inside is ignored., defaults to None
    :type saturday_delivery_indicator: str, optional
    :param saturday_pickup_indicator: Saturday pickup indicator. The presence indicates Saturday pickup is requested and the absence indicates Saturday pickup is not requested.  This is an empty tag, any value inside is ignored., defaults to None
    :type saturday_pickup_indicator: str, optional
    :param cod: COD container  Indicates COD is requested. Shipment COD is only available for EU origin countries or territories and for shippers account type Daily Pickup and Drop Shipping. Not available to shipment with return service., defaults to None
    :type cod: ShipmentServiceOptionsCod, optional
    :param access_point_cod: Access Point COD indicates COD is requested for a shipment.  Valid only for "01 - Hold For Pickup At UPS Access Point" Shipment Indication type. Shipment Access Point COD is valid only for countries or territories within E.U.  Not valid with (Shipment) COD.  Not available to shipment with return service., defaults to None
    :type access_point_cod: ShipmentServiceOptionsAccessPointCod, optional
    :param deliver_to_addressee_only_indicator: Presence/Absence Indicator. Any value inside is ignored. DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the "Hold For PickUp at UPS Access Point" package. Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type "01 - Hold For PickUp at UPS Access Point"., defaults to None
    :type deliver_to_addressee_only_indicator: str, optional
    :param direct_delivery_only_indicator: Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the ship to address on the shipping label. This accessorial is not valid with Shipment Indication Type "01 - Hold For Pickup At UPS Access Point" and "02 - UPS Access Pointâ„¢ Delivery"., defaults to None
    :type direct_delivery_only_indicator: str, optional
    :param notification: notification, defaults to None
    :type notification: List[ShipmentServiceOptionsNotification], optional
    :param label_delivery: Container for the Label Delivery accessorial. Note - LabelDelivery is not applicable for GFP and Mail Innovations Forward shipment.  Required for shipments with either Electronic Return Label Return Service or ImportControl Electronic LabelMethod type. Optional for shipments with Print Return Label Return Service or ImportControl Print LabelMethod type or Forward movement.  If this container is present for shipments with either Electronic Return Label Return Service or ImportControl Electronic LabelMethod type, either of the LabelLinksIndicator or EMail container should be provided. For shipments with Print Return Label Return Service or ImportControl Print LabelMethod type or Forward movement, only LabelLinksIndicator is valid option for LabelDelivery container., defaults to None
    :type label_delivery: ShipmentServiceOptionsLabelDelivery, optional
    :param international_forms: International Forms information., defaults to None
    :type international_forms: ShipmentServiceOptionsInternationalForms, optional
    :param delivery_confirmation: Delivery Confirmation container.   Valid for forward shipments only. Refer to Delivery Confirmation Origin-Destination Pairs in the Appendix for a list of valid values., defaults to None
    :type delivery_confirmation: ShipmentServiceOptionsDeliveryConfirmation, optional
    :param return_of_document_indicator: The flag indicates the ReturnOfDocument accessorial has been requested.  Valid for Poland to Poland forward shipment only., defaults to None
    :type return_of_document_indicator: str, optional
    :param import_control_indicator: Indicates that the Shipment is an ImportControl shipment., defaults to None
    :type import_control_indicator: str, optional
    :param label_method: Type of ImportControl Label. This container is applicable only for ImportControl shipments.  This container is applicable only for ImportControl shipments., defaults to None
    :type label_method: ShipmentServiceOptionsLabelMethod, optional
    :param commercial_invoice_removal_indicator: CommercialInvoiceRemovalIndicator allows a shipper to dictate UPS to remove the Commercial Invoice from the user's shipment before the shipment is delivered to the ultimate consignee., defaults to None
    :type commercial_invoice_removal_indicator: str, optional
    :param up_scarbonneutral_indicator: UPS carbon neutral indicator presence at shipment level is required to create carbon neutral Shipments., defaults to None
    :type up_scarbonneutral_indicator: str, optional
    :param pre_alert_notification: pre_alert_notification, defaults to None
    :type pre_alert_notification: List[ShipmentServiceOptionsPreAlertNotification], optional
    :param exchange_forward_indicator: Exchange forward indicator presence at shipment level is required to create exchange forward Shipments.  In the label routing Instruction text will be defaulted to "EXCHANGE-LIKE ITEM ONLY"., defaults to None
    :type exchange_forward_indicator: str, optional
    :param hold_for_pickup_indicator: Hold For Pickup indicator. The empty tag means indicator is present.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment., defaults to None
    :type hold_for_pickup_indicator: str, optional
    :param dropoff_at_ups_facility_indicator: Drop off At UPS Facility indicator. The empty tag means indicator is present.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment., defaults to None
    :type dropoff_at_ups_facility_indicator: str, optional
    :param lift_gate_for_pick_up_indicator: Lift Gate For Pick Up indicator. The empty tag means indicator is present.  Lift Gate for Pickup is not allowed with Drop Off At UPS Facility for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.  When both Hold for Pickup and Drop Off At Facility are selected, neither of the Lift Gate accessorial (Pick Up or Delivery) are allowed for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment., defaults to None
    :type lift_gate_for_pick_up_indicator: str, optional
    :param lift_gate_for_delivery_indicator: Lift Gate For Delivery indicator. The empty tag means indicator is present.  Lift Gate for Delivery is not allowed with Hold For Pickup for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.  When both Hold for Pickup and Drop Off At UPS Facility are selected, neither of the Lift Gate accessorial (Pick Up or Delivery) are allowed for a UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipment.  This accessorial is only valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday Shipment., defaults to None
    :type lift_gate_for_delivery_indicator: str, optional
    :param sdl_shipment_indicator: The presence of the tag SDLShipmentIndicator indicates Shipment is SDL. SDLShipmentIndicator presence means EEI form/ EEI Filing option required., defaults to None
    :type sdl_shipment_indicator: str, optional
    :param epra_release_code: Package Release code allows the consignee or claimant to pick-up a package at a UPS Access Pointâ„¢. The shipper must provide the Package Release Code to the consignee so that they can provide the code to the UPS Access Point personnel as another item for authentication before the package is released to them. Package Release Code is only valid with ShipmentIndicationType 01 - Hold for Pickup at UPS Access Pointâ„¢.  The release code must be between length 4 and 6 and only contain numbers., defaults to None
    :type epra_release_code: str, optional
    :param restricted_articles: Restricted Articles container., defaults to None
    :type restricted_articles: ShipmentServiceOptionsRestrictedArticles, optional
    :param inside_delivery: Inside delivery accessory. Valid values: 01 - White Glove 02 - Room of Choice 03 - Installation Default is Room of Choice.  Shippers account needs to have a valid contract for Heavy Goods Service., defaults to None
    :type inside_delivery: str, optional
    :param item_disposal: Presence/Absence indicator. True if present; false otherwise. Any value is ignored. If present, indicates that the customer would like items disposed.  Shippers account needs to have a valid contract for Heavy Goods Service., defaults to None
    :type item_disposal: str, optional
    """

    def __init__(
        self,
        saturday_delivery_indicator: str = None,
        saturday_pickup_indicator: str = None,
        cod: ShipmentServiceOptionsCod = None,
        access_point_cod: ShipmentServiceOptionsAccessPointCod = None,
        deliver_to_addressee_only_indicator: str = None,
        direct_delivery_only_indicator: str = None,
        notification: List[ShipmentServiceOptionsNotification] = None,
        label_delivery: ShipmentServiceOptionsLabelDelivery = None,
        international_forms: ShipmentServiceOptionsInternationalForms = None,
        delivery_confirmation: ShipmentServiceOptionsDeliveryConfirmation = None,
        return_of_document_indicator: str = None,
        import_control_indicator: str = None,
        label_method: ShipmentServiceOptionsLabelMethod = None,
        commercial_invoice_removal_indicator: str = None,
        up_scarbonneutral_indicator: str = None,
        pre_alert_notification: List[ShipmentServiceOptionsPreAlertNotification] = None,
        exchange_forward_indicator: str = None,
        hold_for_pickup_indicator: str = None,
        dropoff_at_ups_facility_indicator: str = None,
        lift_gate_for_pick_up_indicator: str = None,
        lift_gate_for_delivery_indicator: str = None,
        sdl_shipment_indicator: str = None,
        epra_release_code: str = None,
        restricted_articles: ShipmentServiceOptionsRestrictedArticles = None,
        inside_delivery: str = None,
        item_disposal: str = None,
    ):
        if saturday_delivery_indicator is not None:
            self.saturday_delivery_indicator = saturday_delivery_indicator
        if saturday_pickup_indicator is not None:
            self.saturday_pickup_indicator = saturday_pickup_indicator
        if cod is not None:
            self.cod = self._define_object(cod, ShipmentServiceOptionsCod)
        if access_point_cod is not None:
            self.access_point_cod = self._define_object(
                access_point_cod, ShipmentServiceOptionsAccessPointCod
            )
        if deliver_to_addressee_only_indicator is not None:
            self.deliver_to_addressee_only_indicator = (
                deliver_to_addressee_only_indicator
            )
        if direct_delivery_only_indicator is not None:
            self.direct_delivery_only_indicator = direct_delivery_only_indicator
        if notification is not None:
            self.notification = self._define_list(
                notification, ShipmentServiceOptionsNotification
            )
        if label_delivery is not None:
            self.label_delivery = self._define_object(
                label_delivery, ShipmentServiceOptionsLabelDelivery
            )
        if international_forms is not None:
            self.international_forms = self._define_object(
                international_forms, ShipmentServiceOptionsInternationalForms
            )
        if delivery_confirmation is not None:
            self.delivery_confirmation = self._define_object(
                delivery_confirmation, ShipmentServiceOptionsDeliveryConfirmation
            )
        if return_of_document_indicator is not None:
            self.return_of_document_indicator = return_of_document_indicator
        if import_control_indicator is not None:
            self.import_control_indicator = import_control_indicator
        if label_method is not None:
            self.label_method = self._define_object(
                label_method, ShipmentServiceOptionsLabelMethod
            )
        if commercial_invoice_removal_indicator is not None:
            self.commercial_invoice_removal_indicator = (
                commercial_invoice_removal_indicator
            )
        if up_scarbonneutral_indicator is not None:
            self.up_scarbonneutral_indicator = up_scarbonneutral_indicator
        if pre_alert_notification is not None:
            self.pre_alert_notification = self._define_list(
                pre_alert_notification, ShipmentServiceOptionsPreAlertNotification
            )
        if exchange_forward_indicator is not None:
            self.exchange_forward_indicator = exchange_forward_indicator
        if hold_for_pickup_indicator is not None:
            self.hold_for_pickup_indicator = hold_for_pickup_indicator
        if dropoff_at_ups_facility_indicator is not None:
            self.dropoff_at_ups_facility_indicator = dropoff_at_ups_facility_indicator
        if lift_gate_for_pick_up_indicator is not None:
            self.lift_gate_for_pick_up_indicator = lift_gate_for_pick_up_indicator
        if lift_gate_for_delivery_indicator is not None:
            self.lift_gate_for_delivery_indicator = lift_gate_for_delivery_indicator
        if sdl_shipment_indicator is not None:
            self.sdl_shipment_indicator = sdl_shipment_indicator
        if epra_release_code is not None:
            self.epra_release_code = epra_release_code
        if restricted_articles is not None:
            self.restricted_articles = self._define_object(
                restricted_articles, ShipmentServiceOptionsRestrictedArticles
            )
        if inside_delivery is not None:
            self.inside_delivery = inside_delivery
        if item_disposal is not None:
            self.item_disposal = item_disposal
