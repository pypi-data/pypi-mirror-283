# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import Union
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .base import OneOfBaseModel
from .label_recovery_response_response import LabelRecoveryResponseResponse
from .label_recovery_response_cod_turn_in_page import LabelRecoveryResponseCodTurnInPage
from .label_recovery_response_form import LabelRecoveryResponseForm
from .label_recovery_response_high_value_report import (
    LabelRecoveryResponseHighValueReport,
)
from .label_recovery_response_label_results import LabelRecoveryResponseLabelResults
from .label_recovery_response_tracking_candidate import (
    LabelRecoveryResponseTrackingCandidate,
)


class LabelResultsGuard(OneOfBaseModel):
    class_list = {
        "List[LabelRecoveryResponseLabelResults]": List[
            LabelRecoveryResponseLabelResults
        ],
        "LabelRecoveryResponseLabelResults": LabelRecoveryResponseLabelResults,
    }


LabelResults = Union[
    List[LabelRecoveryResponseLabelResults], LabelRecoveryResponseLabelResults
]


class TrackingCandidateGuard(OneOfBaseModel):
    class_list = {
        "List[LabelRecoveryResponseTrackingCandidate]": List[
            LabelRecoveryResponseTrackingCandidate
        ],
        "LabelRecoveryResponseTrackingCandidate": LabelRecoveryResponseTrackingCandidate,
    }


TrackingCandidate = Union[
    List[LabelRecoveryResponseTrackingCandidate], LabelRecoveryResponseTrackingCandidate
]


@JsonMap(
    {
        "response": "Response",
        "shipment_identification_number": "ShipmentIdentificationNumber",
        "label_results": "LabelResults",
        "cod_turn_in_page": "CODTurnInPage",
        "form": "Form",
        "high_value_report": "HighValueReport",
        "tracking_candidate": "TrackingCandidate",
    }
)
class LabelRecoveryResponse(BaseModel):
    """Response for the Label recovery request  Validates the date range and label being present. Also if the shipment is return or not

    :param response: Response Container
    :type response: LabelRecoveryResponseResponse
    :param shipment_identification_number: Tracking number of the leading package in the shipment, defaults to None
    :type shipment_identification_number: str, optional
    :param label_results: label_results
    :type label_results: LabelResults
    :param cod_turn_in_page: Container for COD Turnin Page., defaults to None
    :type cod_turn_in_page: LabelRecoveryResponseCodTurnInPage, optional
    :param form: Container tag for the International Forms. Currently, represents Commercial Invoice for Electronic Returns Label and Electronic Import Control Label.  Applicable for Electronic Return Label and Electronic Import Control Label shipments only. Returned for request with SubVersion greater than or equal to 1707., defaults to None
    :type form: LabelRecoveryResponseForm, optional
    :param high_value_report: Container tag for the High Value Report for Electronic Returns Label and Electronic Import Control Label.  Applicable for Electronic Return Label and Electronic Import Control Label shipments only. Returned for request with SubVersion greater than or equal to 1707., defaults to None
    :type high_value_report: LabelRecoveryResponseHighValueReport, optional
    :param tracking_candidate: tracking_candidate, defaults to None
    :type tracking_candidate: TrackingCandidate, optional
    """

    def __init__(
        self,
        response: LabelRecoveryResponseResponse,
        label_results: LabelResults,
        shipment_identification_number: str = None,
        cod_turn_in_page: LabelRecoveryResponseCodTurnInPage = None,
        form: LabelRecoveryResponseForm = None,
        high_value_report: LabelRecoveryResponseHighValueReport = None,
        tracking_candidate: TrackingCandidate = None,
    ):
        self.response = self._define_object(response, LabelRecoveryResponseResponse)
        if shipment_identification_number is not None:
            self.shipment_identification_number = shipment_identification_number
        self.label_results = LabelResultsGuard.return_one_of(label_results)
        if cod_turn_in_page is not None:
            self.cod_turn_in_page = self._define_object(
                cod_turn_in_page, LabelRecoveryResponseCodTurnInPage
            )
        if form is not None:
            self.form = self._define_object(form, LabelRecoveryResponseForm)
        if high_value_report is not None:
            self.high_value_report = self._define_object(
                high_value_report, LabelRecoveryResponseHighValueReport
            )
        if tracking_candidate is not None:
            self.tracking_candidate = TrackingCandidateGuard.return_one_of(
                tracking_candidate
            )
