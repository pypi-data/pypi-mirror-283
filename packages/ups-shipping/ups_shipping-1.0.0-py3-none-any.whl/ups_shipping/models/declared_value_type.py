# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap({"code": "Code", "description": "Description"})
class DeclaredValueType(BaseModel):
    """Container for Declared Value Type.

    :param code: Declared value type. Valid values: - 01=EVS - 02=DVS Defaults to 01 i.e. EVS if declared value type is not provided.  The user cannot specify different type of declared value for the shipment. User can either have shipper declared value (DVS) or declared value (EVS) but not both at package level. Note: The Shipper Declared Value is applicable for forward shipments when the billing option is freight collect or third party.
    :type code: str
    :param description: Declared value Description., defaults to None
    :type description: str, optional
    """

    def __init__(self, code: str, description: str = None):
        self.code = code
        if description is not None:
            self.description = description
