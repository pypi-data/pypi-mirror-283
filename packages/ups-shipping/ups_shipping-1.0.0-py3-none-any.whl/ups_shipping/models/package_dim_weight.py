# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .dim_weight_unit_of_measurement import DimWeightUnitOfMeasurement


@JsonMap({"unit_of_measurement": "UnitOfMeasurement", "weight": "Weight"})
class PackageDimWeight(BaseModel):
    """Dimensional weight of shipment. Please visit ups.com for rules on calculating. There is one implied decimal place (e.g. 115 = 11.5).  If dimensions are provided, dimensional weight is ignored. For US/PR/CA shipments, dimensional weight is ignored

    :param unit_of_measurement: UnitOfMeasurement Container., defaults to None
    :type unit_of_measurement: DimWeightUnitOfMeasurement, optional
    :param weight: Actual package weight.  Weight accepted for letters/envelopes., defaults to None
    :type weight: str, optional
    """

    def __init__(
        self, unit_of_measurement: DimWeightUnitOfMeasurement = None, weight: str = None
    ):
        if unit_of_measurement is not None:
            self.unit_of_measurement = self._define_object(
                unit_of_measurement, DimWeightUnitOfMeasurement
            )
        if weight is not None:
            self.weight = weight
