# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "e_mail_address": "EMailAddress",
        "undeliverable_e_mail_address": "UndeliverableEMailAddress",
        "from_e_mail_address": "FromEMailAddress",
        "from_name": "FromName",
        "memo": "Memo",
    }
)
class NotificationEMail(BaseModel):
    """Container for Email Information.

    :param e_mail_address: Email address where the notification is sent.  Up to five email addresses are allowed for each type of Quantum View TM shipment notification. Up to two email address for return notification.
    :type e_mail_address: List[str]
    :param undeliverable_e_mail_address: The address where an undeliverable eMail message is sent if the eMail with the notification is undeliverable.  There can be only one UndeliverableEMailAddress for each shipment with Quantum View Shipment Notifications., defaults to None
    :type undeliverable_e_mail_address: str, optional
    :param from_e_mail_address: The e-mail address specifies the Reply To E-mail address. The "From" field of the message header contains pkginfo@ups.com.  Valid for Return Notification only., defaults to None
    :type from_e_mail_address: str, optional
    :param from_name: The name the email will appear to be from. Defaults to the Shipper Name.  The FromName must occur only once for each shipment with Quantum View Shipment Notifications., defaults to None
    :type from_name: str, optional
    :param memo: User defined text that will be included in the eMail.  The Memo must occur only once for each shipment with Quantum View Shipment Notifications., defaults to None
    :type memo: str, optional
    """

    def __init__(
        self,
        e_mail_address: List[str],
        undeliverable_e_mail_address: str = None,
        from_e_mail_address: str = None,
        from_name: str = None,
        memo: str = None,
    ):
        self.e_mail_address = e_mail_address
        if undeliverable_e_mail_address is not None:
            self.undeliverable_e_mail_address = undeliverable_e_mail_address
        if from_e_mail_address is not None:
            self.from_e_mail_address = from_e_mail_address
        if from_name is not None:
            self.from_name = from_name
        if memo is not None:
            self.memo = memo
