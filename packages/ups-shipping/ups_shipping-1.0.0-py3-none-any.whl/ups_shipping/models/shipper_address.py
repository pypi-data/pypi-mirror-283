# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "address_line": "AddressLine",
        "city": "City",
        "state_province_code": "StateProvinceCode",
        "postal_code": "PostalCode",
        "country_code": "CountryCode",
    }
)
class ShipperAddress(BaseModel):
    """Address tag Container.  The package should be returned to this address if the package is undeliverable.

    This address appears on the upper left hand corner of the label.

    Note: If the ShipFrom container is not present then this address will be used as the ShipFrom address. If this address is used as the ShipFrom the shipment will be rated from this origin address.


    :param address_line: The Shipper street address including name and number (when applicable). Up to three occurrences are allowed; only the first is printed on the label. 35 characters are accepted, but for the first occurrence, only 30 characters will be printed on the label for return shipments.
    :type address_line: List[str]
    :param city: Shipper's City.   For forward Shipment 30 characters are accepted, but only 15 characters will be printed on the label.
    :type city: str
    :param state_province_code: Shipper's state or province code. For forward Shipment 5 characters are accepted, but only 2 characters will be printed on the label.  For US, PR and CA accounts, the account must be either a daily pickup account, an occasional account, or a customer B.I.N account. , defaults to None
    :type state_province_code: str, optional
    :param postal_code: Shipper's postal code., defaults to None
    :type postal_code: str, optional
    :param country_code: Shipper's country or territory code. Refer to country or territory Codes in the Appendix for valid values. Drop Shipper accounts are valid for return service shipments only if the account is Trade Direct (TD) enabled.
    :type country_code: str
    """

    def __init__(
        self,
        address_line: List[str],
        city: str,
        country_code: str,
        state_province_code: str = None,
        postal_code: str = None,
    ):
        self.address_line = address_line
        self.city = city
        if state_province_code is not None:
            self.state_province_code = state_province_code
        if postal_code is not None:
            self.postal_code = postal_code
        self.country_code = country_code
