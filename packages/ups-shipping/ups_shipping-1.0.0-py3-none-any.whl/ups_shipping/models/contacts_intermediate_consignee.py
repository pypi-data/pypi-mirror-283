# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .intermediate_consignee_address import IntermediateConsigneeAddress


@JsonMap({"company_name": "CompanyName", "address": "Address"})
class ContactsIntermediateConsignee(BaseModel):
    """The intermediate consignee is the person or company in the importing country or territory that makes final delivery to the ultimate consignee.  Applicable for EEI form only.

    :param company_name: Company Name or the Individual name of the Intermediate consignee.  Applicable for EEI form only.
    :type company_name: str
    :param address: Address information of the Intermediate Consignee.  Applicable for EEI form only.
    :type address: IntermediateConsigneeAddress
    """

    def __init__(self, company_name: str, address: IntermediateConsigneeAddress):
        self.company_name = company_name
        self.address = self._define_object(address, IntermediateConsigneeAddress)
