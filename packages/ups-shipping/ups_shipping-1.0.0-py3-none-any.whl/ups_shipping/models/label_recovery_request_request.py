# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .lr_request_transaction_reference import LrRequestTransactionReference


@JsonMap(
    {
        "sub_version": "SubVersion",
        "request_option": "RequestOption",
        "transaction_reference": "TransactionReference",
    }
)
class LabelRecoveryRequestRequest(BaseModel):
    """Request Container.

    :param sub_version: When UPS introduces new elements in the response that are not associated with new request elements, Subversion is used. This ensures backward compatibility. To get such elements you need to have the right Subversion. The value of the subversion is explained in the Response element Description. Format: YYMM = Year and month of the release. Example: 1701 = 2017 January  Supported values: 1701, 1707, 1903, defaults to None
    :type sub_version: str, optional
    :param request_option: Request option is no longer used., defaults to None
    :type request_option: str, optional
    :param transaction_reference: Container that identifies transactions between client and server., defaults to None
    :type transaction_reference: LrRequestTransactionReference, optional
    """

    def __init__(
        self,
        sub_version: str = None,
        request_option: str = None,
        transaction_reference: LrRequestTransactionReference = None,
    ):
        if sub_version is not None:
            self.sub_version = sub_version
        if request_option is not None:
            self.request_option = request_option
        if transaction_reference is not None:
            self.transaction_reference = self._define_object(
                transaction_reference, LrRequestTransactionReference
            )
