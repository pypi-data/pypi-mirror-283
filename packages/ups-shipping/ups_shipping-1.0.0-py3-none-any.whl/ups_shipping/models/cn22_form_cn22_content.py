# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .cn22_content_cn22_content_weight import Cn22ContentCn22ContentWeight


@JsonMap(
    {
        "cn22_content_quantity": "CN22ContentQuantity",
        "cn22_content_description": "CN22ContentDescription",
        "cn22_content_weight": "CN22ContentWeight",
        "cn22_content_total_value": "CN22ContentTotalValue",
        "cn22_content_currency_code": "CN22ContentCurrencyCode",
        "cn22_content_country_of_origin": "CN22ContentCountryOfOrigin",
        "cn22_content_tariff_number": "CN22ContentTariffNumber",
    }
)
class Cn22FormCn22Content(BaseModel):
    """Container for CN22 content.  Required if the CN22 form container is present.
    Note: The maximum number of goods printed on the CN22 form when a combined MI package and CN22 form label is requested is 30.

    :param cn22_content_quantity: Total number of items associated with this content.  Required if the CN22 form container is present.
    :type cn22_content_quantity: str
    :param cn22_content_description: Detailed description of the content. If the combined MI package and CN22 label is requested, only the first 30 characters will appear on the combined label.  Required if the CN22 form container is present.
    :type cn22_content_description: str
    :param cn22_content_weight: Container for CN22 content weight.
    :type cn22_content_weight: Cn22ContentCn22ContentWeight
    :param cn22_content_total_value: Total value of the items associated with this content.  Required if the CN22 form container is present.
    :type cn22_content_total_value: str
    :param cn22_content_currency_code: Currently only USD is supported.  Required if the CN22 form container is present.
    :type cn22_content_currency_code: str
    :param cn22_content_country_of_origin: Country or Territory of Origin from where the CN22 contents originated., defaults to None
    :type cn22_content_country_of_origin: str, optional
    :param cn22_content_tariff_number: The tariff number associated with the CN22 contents., defaults to None
    :type cn22_content_tariff_number: str, optional
    """

    def __init__(
        self,
        cn22_content_quantity: str,
        cn22_content_description: str,
        cn22_content_weight: Cn22ContentCn22ContentWeight,
        cn22_content_total_value: str,
        cn22_content_currency_code: str,
        cn22_content_country_of_origin: str = None,
        cn22_content_tariff_number: str = None,
    ):
        self.cn22_content_quantity = cn22_content_quantity
        self.cn22_content_description = cn22_content_description
        self.cn22_content_weight = self._define_object(
            cn22_content_weight, Cn22ContentCn22ContentWeight
        )
        self.cn22_content_total_value = cn22_content_total_value
        self.cn22_content_currency_code = cn22_content_currency_code
        if cn22_content_country_of_origin is not None:
            self.cn22_content_country_of_origin = cn22_content_country_of_origin
        if cn22_content_tariff_number is not None:
            self.cn22_content_tariff_number = cn22_content_tariff_number
