# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .package_weight_unit_of_measurement import PackageWeightUnitOfMeasurement


@JsonMap({"unit_of_measurement": "UnitOfMeasurement", "weight": "Weight"})
class PackagePackageWeight(BaseModel):
    """Container to hold package weight information.  Package weight is a required for Ground Freight Pricing shipments and Heavy Goods service. Package Weight will be ignored for Simple Rate.

    :param unit_of_measurement: Container to hold UnitOfMeasurement information for package weight.
    :type unit_of_measurement: PackageWeightUnitOfMeasurement
    :param weight: Packages weight. Weight accepted for letters/envelopes.  Only average package weight is required for Ground Freight Pricing Shipment.
    :type weight: str
    """

    def __init__(
        self, unit_of_measurement: PackageWeightUnitOfMeasurement, weight: str
    ):
        self.unit_of_measurement = self._define_object(
            unit_of_measurement, PackageWeightUnitOfMeasurement
        )
        self.weight = weight
