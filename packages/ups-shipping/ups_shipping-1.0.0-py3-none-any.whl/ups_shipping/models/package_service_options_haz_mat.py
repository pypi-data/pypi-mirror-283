# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "packaging_type_quantity": "PackagingTypeQuantity",
        "record_identifier1": "RecordIdentifier1",
        "record_identifier2": "RecordIdentifier2",
        "record_identifier3": "RecordIdentifier3",
        "sub_risk_class": "SubRiskClass",
        "a_dr_item_number": "aDRItemNumber",
        "a_dr_packing_group_letter": "aDRPackingGroupLetter",
        "technical_name": "TechnicalName",
        "hazard_label_required": "HazardLabelRequired",
        "class_division_number": "ClassDivisionNumber",
        "reference_number": "ReferenceNumber",
        "quantity": "Quantity",
        "uom": "UOM",
        "packaging_type": "PackagingType",
        "id_number": "IDNumber",
        "proper_shipping_name": "ProperShippingName",
        "additional_description": "AdditionalDescription",
        "packaging_group_type": "PackagingGroupType",
        "packaging_instruction_code": "PackagingInstructionCode",
        "emergency_phone": "EmergencyPhone",
        "emergency_contact": "EmergencyContact",
        "reportable_quantity": "ReportableQuantity",
        "regulation_set": "RegulationSet",
        "transportation_mode": "TransportationMode",
        "commodity_regulated_level_code": "CommodityRegulatedLevelCode",
        "transport_category": "TransportCategory",
        "tunnel_restriction_code": "TunnelRestrictionCode",
        "chemical_record_identifier": "ChemicalRecordIdentifier",
        "local_technical_name": "LocalTechnicalName",
        "local_proper_shipping_name": "LocalProperShippingName",
    }
)
class PackageServiceOptionsHazMat(BaseModel):
    """Container to hold HazMat Chemical Records.

    :param packaging_type_quantity: The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode = LQ or FR.  Valid values are 1 to 999., defaults to None
    :type packaging_type_quantity: str, optional
    :param record_identifier1: Reserved for future use., defaults to None
    :type record_identifier1: str, optional
    :param record_identifier2: Reserved for future use., defaults to None
    :type record_identifier2: str, optional
    :param record_identifier3: Reserved for future use., defaults to None
    :type record_identifier3: str, optional
    :param sub_risk_class: Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Secondary hazardous characteristics of a package. (There can be more than one â€“ separate each with a comma). , defaults to None
    :type sub_risk_class: str, optional
    :param a_dr_item_number: The type of regulated good for an ADR package where ADR is for Europe to Europe ground movement., defaults to None
    :type a_dr_item_number: str, optional
    :param a_dr_packing_group_letter: Required if the field applies to the material by regulation. Field input is Arabic numerals, output is Roman numerals. Will be shown in Roman Numerals.  Valid values: - "1" = "I", - "2" = "II", - "3" = "III", - and blank. , defaults to None
    :type a_dr_packing_group_letter: str, optional
    :param technical_name: The technical name (when required) for the specified commodity. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation., defaults to None
    :type technical_name: str, optional
    :param hazard_label_required: Defines the type of label that is required on the package for the commodity.  Not applicable if CommodityRegulatedLevelCode = LR or EQ., defaults to None
    :type hazard_label_required: str, optional
    :param class_division_number: This is the hazard class associated to the specified commodity. Required if CommodityRegulatedLevelCode is 'EQ', 'LQ' or 'FR' , defaults to None
    :type class_division_number: str, optional
    :param reference_number: Optional reference number. It will be displayed only on label., defaults to None
    :type reference_number: str, optional
    :param quantity: Required if CommodityRegulatedLevelCode = EQ, LQ or FR. The numerical value of the mass capacity of the regulated good.  Should be more than 0.0. Valid characters are 0-9 and "." (Decimal point). Limit to 1 digit after the decimal. The maximum length of the field is 5 including "." (Decimal point) and can hold up to 1 decimal place., defaults to None
    :type quantity: str, optional
    :param uom: Required if CommodityRegulatedLevelCode = LQ, EQ or FR. The unit of measure used for the mass capacity of the regulated good.  For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc., defaults to None
    :type uom: str, optional
    :param packaging_type: The type of package used to contain the regulated good. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode = LQ or FR.   Ex. FIBERBOARD BOX, WOOD(EN) BOX, PLASTIC JERRICAN, METAL BOX, STEEL DRUM, OTHER, PLASTIC BOX, PLASTIC DRUM, STYROFOAM BOX, CYLINDERS, ENVIROTAINER, PLYWOOD BOX, ALUMINUM DRUM, ALUMINUM CYLINDERS, PLASTIC PAIL, PLYWOOD DRUM, FIBER DRUM, STEEL JERRICAN, ALUMINUM JERRICAN, STEEL BOX, CARTON, ALUMINUM BOX, defaults to None
    :type packaging_type: str, optional
    :param id_number: This is the ID number (UN/NA/ID) for the specified commodity.  Required if CommodityRegulatedLevelCode = LR, LQ or FR and if the field applies to the material by regulation.  UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry)., defaults to None
    :type id_number: str, optional
    :param proper_shipping_name: The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode = LR, LQ or FR.
    :type proper_shipping_name: str
    :param additional_description: Additional remarks or special provision information. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Additional information that may be required by regulation about a hazardous material, such as, "Limited Quantity", DOT-SP numbers, EX numbers. , defaults to None
    :type additional_description: str, optional
    :param packaging_group_type: This is the packing group category associated to the specified commodity. Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals.   Valid values: I II III blank, defaults to None
    :type packaging_group_type: str, optional
    :param packaging_instruction_code: The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation., defaults to None
    :type packaging_instruction_code: str, optional
    :param emergency_phone: 24 Hour Emergency Phone Number of the shipper. Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is 1, area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number. The following are restricted in the phone number period ".", dash "-", plus sign "+" and conventional parentheses "(" and ")", "EXT" or "OPT" , defaults to None
    :type emergency_phone: str, optional
    :param emergency_contact: The emergency information, contact name and/or contract number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA., defaults to None
    :type emergency_contact: str, optional
    :param reportable_quantity: Recommended if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, 'RQ' should be entered., defaults to None
    :type reportable_quantity: str, optional
    :param regulation_set: The Regulatory set associated with every regulated shipment. It must be same across the shipment.  Valid values:  ADR = Europe to Europe Ground Movement  CFR = HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada  IATA= Worldwide Air movement  TDG= Canada to Canada ground movement or Canada to U.S. standard movement.  Valid values are ADR, CFR, IATA and TDG. For multiple Chemical Records per package or multiple packages containing different RegulationSet, RegulationSet of first Chemical Record would be considered for validating and rating the entire shipment.
    :type regulation_set: str
    :param transportation_mode: Not applicable for ADR regulation set. Required for any other regulation set. Declares that a package was prepared according to ground passenger aircraft or cargo aircraft only.  Valid values:  Highway=Highway  Ground=Ground  PAX=Passenger Aircraft  Passenger Aircraft=Passenger Aircraft  CAO=Cargo Aircraft Only  Cargo Aircraft Only=Cargo Aircraft Only  Valid entries include: Highway, Ground, PAX, Passenger Aircraft, CAO and Cargo Aircraft Only.
    :type transportation_mode: str
    :param commodity_regulated_level_code: Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ) or Lightly Regulated (LR).  Valid values are LR, FR, LQ and EQ. Required for subversion 1701 or greater. LR and EQ are validated if subversion is 1701 or greater. FR, LQ will be validated if subversion is 1807 or greater, defaults to None
    :type commodity_regulated_level_code: str, optional
    :param transport_category: Transport Category.  Valid values are 0 to 4., defaults to None
    :type transport_category: str, optional
    :param tunnel_restriction_code: Defines what is restricted to pass through a tunnel., defaults to None
    :type tunnel_restriction_code: str, optional
    :param chemical_record_identifier: Identifies the Chemical Record.  Required if SubVersion is greater than or equal to 1701., defaults to None
    :type chemical_record_identifier: str, optional
    :param local_technical_name: Technical name in local language., defaults to None
    :type local_technical_name: str, optional
    :param local_proper_shipping_name: Proper shipping name in local langauge., defaults to None
    :type local_proper_shipping_name: str, optional
    """

    def __init__(
        self,
        proper_shipping_name: str,
        regulation_set: str,
        transportation_mode: str,
        packaging_type_quantity: str = None,
        record_identifier1: str = None,
        record_identifier2: str = None,
        record_identifier3: str = None,
        sub_risk_class: str = None,
        a_dr_item_number: str = None,
        a_dr_packing_group_letter: str = None,
        technical_name: str = None,
        hazard_label_required: str = None,
        class_division_number: str = None,
        reference_number: str = None,
        quantity: str = None,
        uom: str = None,
        packaging_type: str = None,
        id_number: str = None,
        additional_description: str = None,
        packaging_group_type: str = None,
        packaging_instruction_code: str = None,
        emergency_phone: str = None,
        emergency_contact: str = None,
        reportable_quantity: str = None,
        commodity_regulated_level_code: str = None,
        transport_category: str = None,
        tunnel_restriction_code: str = None,
        chemical_record_identifier: str = None,
        local_technical_name: str = None,
        local_proper_shipping_name: str = None,
    ):
        if packaging_type_quantity is not None:
            self.packaging_type_quantity = packaging_type_quantity
        if record_identifier1 is not None:
            self.record_identifier1 = record_identifier1
        if record_identifier2 is not None:
            self.record_identifier2 = record_identifier2
        if record_identifier3 is not None:
            self.record_identifier3 = record_identifier3
        if sub_risk_class is not None:
            self.sub_risk_class = sub_risk_class
        if a_dr_item_number is not None:
            self.a_dr_item_number = a_dr_item_number
        if a_dr_packing_group_letter is not None:
            self.a_dr_packing_group_letter = a_dr_packing_group_letter
        if technical_name is not None:
            self.technical_name = technical_name
        if hazard_label_required is not None:
            self.hazard_label_required = hazard_label_required
        if class_division_number is not None:
            self.class_division_number = class_division_number
        if reference_number is not None:
            self.reference_number = reference_number
        if quantity is not None:
            self.quantity = quantity
        if uom is not None:
            self.uom = uom
        if packaging_type is not None:
            self.packaging_type = packaging_type
        if id_number is not None:
            self.id_number = id_number
        self.proper_shipping_name = proper_shipping_name
        if additional_description is not None:
            self.additional_description = additional_description
        if packaging_group_type is not None:
            self.packaging_group_type = packaging_group_type
        if packaging_instruction_code is not None:
            self.packaging_instruction_code = packaging_instruction_code
        if emergency_phone is not None:
            self.emergency_phone = emergency_phone
        if emergency_contact is not None:
            self.emergency_contact = emergency_contact
        if reportable_quantity is not None:
            self.reportable_quantity = reportable_quantity
        self.regulation_set = regulation_set
        self.transportation_mode = transportation_mode
        if commodity_regulated_level_code is not None:
            self.commodity_regulated_level_code = commodity_regulated_level_code
        if transport_category is not None:
            self.transport_category = transport_category
        if tunnel_restriction_code is not None:
            self.tunnel_restriction_code = tunnel_restriction_code
        if chemical_record_identifier is not None:
            self.chemical_record_identifier = chemical_record_identifier
        if local_technical_name is not None:
            self.local_technical_name = local_technical_name
        if local_proper_shipping_name is not None:
            self.local_proper_shipping_name = local_proper_shipping_name
