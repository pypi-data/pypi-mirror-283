# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .sold_to_phone import SoldToPhone
from .sold_to_address import SoldToAddress


@JsonMap(
    {
        "name": "Name",
        "attention_name": "AttentionName",
        "tax_identification_number": "TaxIdentificationNumber",
        "phone": "Phone",
        "option": "Option",
        "address": "Address",
        "e_mail_address": "EMailAddress",
        "account_number": "AccountNumber",
    }
)
class ContactsSoldTo(BaseModel):
    """SoldTo Container. The Sold To party's country code must be the same as the Ship To party's country code with the exception of Canada and satellite countries.  Applies to Invoice and NAFTA CO Forms. Required if Invoice or NAFTA CO (International Form) is requested.

    :param name: Company Name.
    :type name: str
    :param attention_name: Sold to contact name.
    :type attention_name: str
    :param tax_identification_number: SoldTo Tax Identification Number., defaults to None
    :type tax_identification_number: str, optional
    :param phone: Phone Container., defaults to None
    :type phone: SoldToPhone, optional
    :param option: The text associated with the code will be printed in the sold to section of the NAFTA CO form.  The values indicate the following: 01 â€“ Unknown.  Applies to NAFTA CO form. Possible Values are 01 and 02., defaults to None
    :type option: str, optional
    :param address: Sold To Address Container.  Applies to NAFTA CO.
    :type address: SoldToAddress
    :param e_mail_address: SoldTo email address., defaults to None
    :type e_mail_address: str, optional
    :param account_number: SoldTo AccountNumber, defaults to None
    :type account_number: str, optional
    """

    def __init__(
        self,
        name: str,
        attention_name: str,
        address: SoldToAddress,
        tax_identification_number: str = None,
        phone: SoldToPhone = None,
        option: str = None,
        e_mail_address: str = None,
        account_number: str = None,
    ):
        self.name = name
        self.attention_name = attention_name
        if tax_identification_number is not None:
            self.tax_identification_number = tax_identification_number
        if phone is not None:
            self.phone = self._define_object(phone, SoldToPhone)
        if option is not None:
            self.option = option
        self.address = self._define_object(address, SoldToAddress)
        if e_mail_address is not None:
            self.e_mail_address = e_mail_address
        if account_number is not None:
            self.account_number = account_number
