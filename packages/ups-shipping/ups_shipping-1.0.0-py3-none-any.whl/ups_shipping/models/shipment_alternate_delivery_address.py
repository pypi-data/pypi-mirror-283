# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .alternate_delivery_address_address import AlternateDeliveryAddressAddress


@JsonMap(
    {
        "name": "Name",
        "attention_name": "AttentionName",
        "ups_access_point_id": "UPSAccessPointID",
        "address": "Address",
    }
)
class ShipmentAlternateDeliveryAddress(BaseModel):
    """AlternateDeliveryAddress Container.  Alternate Delivery Address (UPS Access Point Address) required if ShipmentIndicationType is 01 or 02.

    :param name: Retail Location Name.
    :type name: str
    :param attention_name: Attention Name.
    :type attention_name: str
    :param ups_access_point_id: UPS Access Point ID., defaults to None
    :type ups_access_point_id: str, optional
    :param address: Address Container.
    :type address: AlternateDeliveryAddressAddress
    """

    def __init__(
        self,
        name: str,
        attention_name: str,
        address: AlternateDeliveryAddressAddress,
        ups_access_point_id: str = None,
    ):
        self.name = name
        self.attention_name = attention_name
        if ups_access_point_id is not None:
            self.ups_access_point_id = ups_access_point_id
        self.address = self._define_object(address, AlternateDeliveryAddressAddress)
