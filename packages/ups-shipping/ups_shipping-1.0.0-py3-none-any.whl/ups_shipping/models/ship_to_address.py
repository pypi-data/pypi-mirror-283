# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "address_line": "AddressLine",
        "city": "City",
        "state_province_code": "StateProvinceCode",
        "postal_code": "PostalCode",
        "country_code": "CountryCode",
        "residential_address_indicator": "ResidentialAddressIndicator",
    }
)
class ShipToAddress(BaseModel):
    """Address Container.

    :param address_line: Address Line of the consignee. Only first two Address Lines will be printed on the label.
    :type address_line: List[str]
    :param city: Consignee's city. 30 characters are accepted, but only 15 characters will be printed on the label.
    :type city: str
    :param state_province_code: Consignee's state or province code. Required for US or Canada.  If destination is US or CA, then the value must be a valid US State/ Canadian Province code. If the country or territory is Ireland, the StateProvinceCode will contain the county. , defaults to None
    :type state_province_code: str, optional
    :param postal_code: Consignee's postal code.  If the ShipTo country or territory is US or Puerto Rico, 5 or 9 digits are required. If the ShipTo country or territory is CA, then the postal code is required and must be 6 alphanumeric characters whose format is A#A#A# where A is an uppercase letter and # is a digit. Otherwise optional. For all other countries or territories the postal code is optional and must be no more than 9 alphanumeric characters long. , defaults to None
    :type postal_code: str, optional
    :param country_code: Consignee's country or territory code.  Must be a valid UPS Billing country or territory code. For Return Shipment the country or territory code must meet the following conditions: - At least two of the following country or territory codes are the same: ShipTo, ShipFrom, and Shipper. - None of the following country or territory codes are the same and are a member of the EU: ShipTo, ShipFrom, and Shipper. - If any of the two following country or territory codes: ShipTo/ ShipFrom/ Shipper are members in EU otherwise check if the shipper has Third country or territory Contract.
    :type country_code: str
    :param residential_address_indicator: This field is a flag to indicate if the receiver is a residential location.  True if ResidentialAddressIndicator tag exists.  This is an empty tag, any value inside is ignored., defaults to None
    :type residential_address_indicator: str, optional
    """

    def __init__(
        self,
        address_line: List[str],
        city: str,
        country_code: str,
        state_province_code: str = None,
        postal_code: str = None,
        residential_address_indicator: str = None,
    ):
        self.address_line = address_line
        self.city = city
        if state_province_code is not None:
            self.state_province_code = state_province_code
        if postal_code is not None:
            self.postal_code = postal_code
        self.country_code = country_code
        if residential_address_indicator is not None:
            self.residential_address_indicator = residential_address_indicator
