# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .ship_to_phone import ShipToPhone
from .ship_to_address import ShipToAddress


@JsonMap(
    {
        "name": "Name",
        "attention_name": "AttentionName",
        "company_displayable_name": "CompanyDisplayableName",
        "tax_identification_number": "TaxIdentificationNumber",
        "phone": "Phone",
        "fax_number": "FaxNumber",
        "e_mail_address": "EMailAddress",
        "address": "Address",
        "location_id": "LocationID",
    }
)
class ShipmentShipTo(BaseModel):
    """Ship To Container.

    :param name: Consignee's company name.  All other accounts must be either a daily pickup account or an occasional account.
    :type name: str
    :param attention_name: Contact name at the consignee's location.  Required for: UPS Next Day AirÂ® Early service, and when ShipTo country or territory is different than ShipFrom country or territory. Required if Invoice International form is requested. , defaults to None
    :type attention_name: str, optional
    :param company_displayable_name: Not applicable for ShipTo, defaults to None
    :type company_displayable_name: str, optional
    :param tax_identification_number: Consignee's tax identification number., defaults to None
    :type tax_identification_number: str, optional
    :param phone: Container for Phone Number, defaults to None
    :type phone: ShipToPhone, optional
    :param fax_number: Consignee's fax number.  If ShipTo country or territory is US 10 digits allowed, otherwise 1-15 digits allowed., defaults to None
    :type fax_number: str, optional
    :param e_mail_address: Consignee's email address., defaults to None
    :type e_mail_address: str, optional
    :param address: Address Container.
    :type address: ShipToAddress
    :param location_id: Location ID is a unique identifier referring to a specific shipping/receiving location.  Location ID must be alphanumeric characters. All letters must be capitalized., defaults to None
    :type location_id: str, optional
    """

    def __init__(
        self,
        name: str,
        address: ShipToAddress,
        attention_name: str = None,
        company_displayable_name: str = None,
        tax_identification_number: str = None,
        phone: ShipToPhone = None,
        fax_number: str = None,
        e_mail_address: str = None,
        location_id: str = None,
    ):
        self.name = name
        if attention_name is not None:
            self.attention_name = attention_name
        if company_displayable_name is not None:
            self.company_displayable_name = company_displayable_name
        if tax_identification_number is not None:
            self.tax_identification_number = tax_identification_number
        if phone is not None:
            self.phone = self._define_object(phone, ShipToPhone)
        if fax_number is not None:
            self.fax_number = fax_number
        if e_mail_address is not None:
            self.e_mail_address = e_mail_address
        self.address = self._define_object(address, ShipToAddress)
        if location_id is not None:
            self.location_id = location_id
