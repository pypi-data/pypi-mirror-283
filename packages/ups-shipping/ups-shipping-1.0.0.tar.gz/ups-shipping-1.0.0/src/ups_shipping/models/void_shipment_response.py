# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .void_shipment_response_response import VoidShipmentResponseResponse
from .void_shipment_response_summary_result import VoidShipmentResponseSummaryResult
from .void_shipment_response_package_level_result import (
    VoidShipmentResponsePackageLevelResult,
)


@JsonMap(
    {
        "response": "Response",
        "summary_result": "SummaryResult",
        "package_level_result": "PackageLevelResult",
    }
)
class VoidShipmentResponse(BaseModel):
    """Void Response Container.

    :param response: Response Container.
    :type response: VoidShipmentResponseResponse
    :param summary_result: Container for the Summary Result
    :type summary_result: VoidShipmentResponseSummaryResult
    :param package_level_result: Contains the Package Level Results. **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1. , defaults to None
    :type package_level_result: List[VoidShipmentResponsePackageLevelResult], optional
    """

    def __init__(
        self,
        response: VoidShipmentResponseResponse,
        summary_result: VoidShipmentResponseSummaryResult,
        package_level_result: List[VoidShipmentResponsePackageLevelResult] = None,
    ):
        self.response = self._define_object(response, VoidShipmentResponseResponse)
        self.summary_result = self._define_object(
            summary_result, VoidShipmentResponseSummaryResult
        )
        if package_level_result is not None:
            self.package_level_result = self._define_list(
                package_level_result, VoidShipmentResponsePackageLevelResult
            )
