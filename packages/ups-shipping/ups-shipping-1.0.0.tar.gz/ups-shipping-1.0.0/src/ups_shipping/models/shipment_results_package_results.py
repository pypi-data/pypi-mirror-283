# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel
from .package_results_rate_modifier import PackageResultsRateModifier
from .package_results_base_service_charge import PackageResultsBaseServiceCharge
from .package_results_service_options_charges import PackageResultsServiceOptionsCharges
from .package_results_shipping_label import PackageResultsShippingLabel
from .package_results_shipping_receipt import PackageResultsShippingReceipt
from .package_results_accessorial import PackageResultsAccessorial
from .package_results_simple_rate import PackageResultsSimpleRate
from .package_results_form import PackageResultsForm
from .package_results_itemized_charges import PackageResultsItemizedCharges
from .package_results_negotiated_charges import PackageResultsNegotiatedCharges


@JsonMap(
    {
        "tracking_number": "TrackingNumber",
        "rate_modifier": "RateModifier",
        "base_service_charge": "BaseServiceCharge",
        "service_options_charges": "ServiceOptionsCharges",
        "shipping_label": "ShippingLabel",
        "shipping_receipt": "ShippingReceipt",
        "uspspic_number": "USPSPICNumber",
        "cn22_number": "CN22Number",
        "accessorial": "Accessorial",
        "simple_rate": "SimpleRate",
        "form": "Form",
        "itemized_charges": "ItemizedCharges",
        "negotiated_charges": "NegotiatedCharges",
    }
)
class ShipmentResultsPackageResults(BaseModel):
    """ShipmentResultsPackageResults

    :param tracking_number: Package 1Z number.   For Mail Innovations shipments, please use the USPSPICNumber when tracking packages (a non-1Z number Mail Manifest Id is returned).
    :type tracking_number: str
    :param rate_modifier: Container for returned Rate Modifier information. Applies only if SubVersion is 2205 or greater., defaults to None
    :type rate_modifier: PackageResultsRateModifier, optional
    :param base_service_charge: Base Service Charge container. Transportation charge = BaseServiceCharge + Fuel charge  Returned only if Subversion >=1701., defaults to None
    :type base_service_charge: PackageResultsBaseServiceCharge, optional
    :param service_options_charges: Shipment charges info. Shipment charges are only guaranteed to be returned for shipments whose origin country or territory is US or Puerto Rico., defaults to None
    :type service_options_charges: PackageResultsServiceOptionsCharges, optional
    :param shipping_label: The container for UPS shipping label. Returned for following shipments - Forward shipments, Shipments with PRL returns service,  Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707. Shipping label wont be returned if BarCodeImageIndicator is present., defaults to None
    :type shipping_label: PackageResultsShippingLabel, optional
    :param shipping_receipt: Supported for following shipments - PRL shipments, Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707., defaults to None
    :type shipping_receipt: PackageResultsShippingReceipt, optional
    :param uspspic_number: USPSPICNumber is USPS Package Identification; it should be used for tracking Mail Innovations shipments., defaults to None
    :type uspspic_number: str, optional
    :param cn22_number: USPS defined CN22 ID number format varies based on destination country or territory.  Not applicable as of Jan 2015.  Mail Innovations shipments US to VI, PR, and GU are not considered international., defaults to None
    :type cn22_number: str, optional
    :param accessorial: The container for Accessorial indicators. This information would be returned only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service request with Dry Ice or Oversize Pallet and SubVersion greater than or equal to 1707. This is valid only for UPS Worldwide Express Freight and UPS Worldwide Express Freight Mid-day service. **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1. , defaults to None
    :type accessorial: List[PackageResultsAccessorial], optional
    :param simple_rate: SimpleRate will be returned if Simple Rate  present in request, defaults to None
    :type simple_rate: PackageResultsSimpleRate, optional
    :param form: Container tag for the International forms image.  Currently this container would be returned for UPS Premium Care shipments. Form is returned for following shipments - Forward shipments, Shipments with PRL ReturnService, Electronic Return Label or Electronic Import Control Label shipments with SubVersion greater than or equal to 1707. CN22 data for Worlwide economy services will be returned within the PDF417 barcode of the label., defaults to None
    :type form: PackageResultsForm, optional
    :param itemized_charges: Itemized Charges are returned only when the subversion element is present and greater than or equal to 1607. Package level itemized charges are only returned for US domestic movements. **NOTE:** For versions >= v2403, this element will always be returned as an array. For requests using versions < v2403, this element will be returned as an array if there is more than one object and a single object if there is only 1. , defaults to None
    :type itemized_charges: List[PackageResultsItemizedCharges], optional
    :param negotiated_charges: Negotiated Rates Charge Container.  These charges are returned when: 1) Subversion is greater than or equal to 1607 2) If negotiated rates were requested for GFP shipments and account number is eligible to receive negotiated rates., defaults to None
    :type negotiated_charges: PackageResultsNegotiatedCharges, optional
    """

    def __init__(
        self,
        tracking_number: str,
        rate_modifier: PackageResultsRateModifier = None,
        base_service_charge: PackageResultsBaseServiceCharge = None,
        service_options_charges: PackageResultsServiceOptionsCharges = None,
        shipping_label: PackageResultsShippingLabel = None,
        shipping_receipt: PackageResultsShippingReceipt = None,
        uspspic_number: str = None,
        cn22_number: str = None,
        accessorial: List[PackageResultsAccessorial] = None,
        simple_rate: PackageResultsSimpleRate = None,
        form: PackageResultsForm = None,
        itemized_charges: List[PackageResultsItemizedCharges] = None,
        negotiated_charges: PackageResultsNegotiatedCharges = None,
    ):
        self.tracking_number = tracking_number
        if rate_modifier is not None:
            self.rate_modifier = self._define_object(
                rate_modifier, PackageResultsRateModifier
            )
        if base_service_charge is not None:
            self.base_service_charge = self._define_object(
                base_service_charge, PackageResultsBaseServiceCharge
            )
        if service_options_charges is not None:
            self.service_options_charges = self._define_object(
                service_options_charges, PackageResultsServiceOptionsCharges
            )
        if shipping_label is not None:
            self.shipping_label = self._define_object(
                shipping_label, PackageResultsShippingLabel
            )
        if shipping_receipt is not None:
            self.shipping_receipt = self._define_object(
                shipping_receipt, PackageResultsShippingReceipt
            )
        if uspspic_number is not None:
            self.uspspic_number = uspspic_number
        if cn22_number is not None:
            self.cn22_number = cn22_number
        if accessorial is not None:
            self.accessorial = self._define_list(accessorial, PackageResultsAccessorial)
        if simple_rate is not None:
            self.simple_rate = self._define_object(
                simple_rate, PackageResultsSimpleRate
            )
        if form is not None:
            self.form = self._define_object(form, PackageResultsForm)
        if itemized_charges is not None:
            self.itemized_charges = self._define_list(
                itemized_charges, PackageResultsItemizedCharges
            )
        if negotiated_charges is not None:
            self.negotiated_charges = self._define_object(
                negotiated_charges, PackageResultsNegotiatedCharges
            )
