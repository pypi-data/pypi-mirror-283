# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .eei_information_license import EeiInformationLicense
from .eei_information_ddtc_information import EeiInformationDdtcInformation


@JsonMap(
    {
        "export_information": "ExportInformation",
        "license": "License",
        "ddtc_information": "DDTCInformation",
    }
)
class ProductEeiInformation(BaseModel):
    """Required for EEI form.  Applies to EEI form only.

    :param export_information: Required for EEI form id it is a SDL product. Valid values: LC, LV, SS,MS, GS, DP, HR, UG, IC, SC, DD, HH, SR, TE,TL, IS, CR, GP, RJ, TP, IP, IR, DB, CH, RS, OS  Applies to EEI form only. Required if EEIFilingOption code 3 specified for EEI form., defaults to None
    :type export_information: str, optional
    :param license: Licence information for SDL commodity.  Applies to EEI form only., defaults to None
    :type license: EeiInformationLicense, optional
    :param ddtc_information: Department of State/ Directorate of Defense Trade Control Information. This element is a container for additional information that is applicable to SDL products. It will only be evaluated if the provided license code is an SDL code.  Applies to EEI Form only., defaults to None
    :type ddtc_information: EeiInformationDdtcInformation, optional
    """

    def __init__(
        self,
        export_information: str = None,
        license: EeiInformationLicense = None,
        ddtc_information: EeiInformationDdtcInformation = None,
    ):
        if export_information is not None:
            self.export_information = export_information
        if license is not None:
            self.license = self._define_object(license, EeiInformationLicense)
        if ddtc_information is not None:
            self.ddtc_information = self._define_object(
                ddtc_information, EeiInformationDdtcInformation
            )
