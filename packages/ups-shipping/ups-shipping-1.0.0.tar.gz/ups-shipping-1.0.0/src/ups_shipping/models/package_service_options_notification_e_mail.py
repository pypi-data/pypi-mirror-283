# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .base import BaseModel


@JsonMap(
    {
        "subject": "Subject",
        "subject_code": "SubjectCode",
        "e_mail_address": "EMailAddress",
        "undeliverable_e_mail_address": "UndeliverableEMailAddress",
        "from_e_mail_address": "FromEMailAddress",
        "from_name": "FromName",
        "memo": "Memo",
    }
)
class PackageServiceOptionsNotificationEMail(BaseModel):
    """Container for the e-mail message.

    :param subject: The eMails subject. Defaults to the UPS Receiver Return Notification plus the shipment ID.  Only allowed at the first package., defaults to None
    :type subject: str, optional
    :param subject_code: Specifies a reference code and reference number to display in the subject of the Receiver Return Notification. When the subject code is provided, the subject will contain the following: UPS Receiver Return Notification. The reference code (the reference code will be mapped to the corresponding ANSI value) Plus the reference number. The valid subject codes are: - 01 - Shipment Reference Number 1, - 02 - Shipment Reference Number 2, - 03 - package Reference Number 1, - 04 - package Reference Number 2, - 05 - package Reference Number 3, - 06 - package Reference Number 4, - 07 - package Reference Number 5, - 08 - Subject Text (Return Notification only). If the subject code tag is not provided and the subject text is provided, the subject of the notification will be the subject text. If the subject text is provided, and subject code tag exists, then the subject code value must be 08. If the subject code is 08, the subject text must exist. If a subject code is provided that refers to a nonexistent reference number, the subject will default to the tracking number. Only allowed at the first package. , defaults to None
    :type subject_code: str, optional
    :param e_mail_address: The destination email address of the receiver returns notification email.
    :type e_mail_address: List[str]
    :param undeliverable_e_mail_address: The e-mail address where an undeliverable email message is sent if the Receiver Return Notification email is undeliverable. Defaults to FromEMailAddress. Only allowed at the first package., defaults to None
    :type undeliverable_e_mail_address: str, optional
    :param from_e_mail_address: The email address listed in the Reply To field of the message header, includes name and e-mail address of sender. The "From" field of the message header contains pkginfo@ups.com.  Only allowed at the first package., defaults to None
    :type from_e_mail_address: str, optional
    :param from_name: The name the receiver return notification will appear to be from. Defaults to the Shipper Name. Only allowed at the first package., defaults to None
    :type from_name: str, optional
    :param memo: User defined text that will be included in the email. Only allowed at the first package., defaults to None
    :type memo: str, optional
    """

    def __init__(
        self,
        e_mail_address: List[str],
        subject: str = None,
        subject_code: str = None,
        undeliverable_e_mail_address: str = None,
        from_e_mail_address: str = None,
        from_name: str = None,
        memo: str = None,
    ):
        if subject is not None:
            self.subject = subject
        if subject_code is not None:
            self.subject_code = subject_code
        self.e_mail_address = e_mail_address
        if undeliverable_e_mail_address is not None:
            self.undeliverable_e_mail_address = undeliverable_e_mail_address
        if from_e_mail_address is not None:
            self.from_e_mail_address = from_e_mail_address
        if from_name is not None:
            self.from_name = from_name
        if memo is not None:
            self.memo = memo
