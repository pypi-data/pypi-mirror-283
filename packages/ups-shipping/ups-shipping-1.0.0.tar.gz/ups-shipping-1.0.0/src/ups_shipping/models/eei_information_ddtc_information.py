# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .ddtc_information_unit_of_measurement import DdtcInformationUnitOfMeasurement


@JsonMap(
    {
        "itar_exemption_number": "ITARExemptionNumber",
        "usml_category_code": "USMLCategoryCode",
        "eligible_party_indicator": "EligiblePartyIndicator",
        "registration_number": "RegistrationNumber",
        "quantity": "Quantity",
        "unit_of_measurement": "UnitOfMeasurement",
        "significant_military_equipment_indicator": "SignificantMilitaryEquipmentIndicator",
        "acm_number": "ACMNumber",
    }
)
class EeiInformationDdtcInformation(BaseModel):
    """Department of State/ Directorate of Defense Trade Control Information. This element is a container for additional information that is applicable to SDL products. It will only be evaluated if the provided license code is an SDL code.  Applies to EEI Form only.

    :param itar_exemption_number: The specific citation (exemption number) under the International Traffic in Arms Regulations (ITAR) from the Code of Federal Register (see 22 CFR 120-130) that exempts the shipment from the requirements for a license or other written authorization from the Directorate of Trade Controls (DDTC).  Refer to EEI License Codes in the Appendix for valid values.  Applies to EEI Form only. This field is applicable for EEIFiling option 1A and 3., defaults to None
    :type itar_exemption_number: str, optional
    :param usml_category_code: Digit numeric code (e.g. 01-18, 20 or 21). Indicates the U.S. Munitions List (USML) category article, service or related technical data as it applies to the article reported.  Applies to EEI form only. It is required for EEIFilingOption code 3., defaults to None
    :type usml_category_code: str, optional
    :param eligible_party_indicator: Presence/Absent indicator. Certification by the U.S. exporter that the exporter is an eligible party to participate in the defense trade., defaults to None
    :type eligible_party_indicator: str, optional
    :param registration_number: It is a unique registration code assigned to the registrant. The DDTC registration code consist of a letter prefix, M (assigned to a manufacturer and/or exporter) or K (assigned to a broker), followed by four or five digits (e.g. K-1234 or M12345).  It is required for EEIFilingOption code 3., defaults to None
    :type registration_number: str, optional
    :param quantity: Export Quantity.  Applies to EEI form only. It is required for EEIFilingOption code 3. Only positive integer value is valid., defaults to None
    :type quantity: str, optional
    :param unit_of_measurement: Container for unit of measurement.  Applies to EEI form only. It is required for EEIFilingOption code 3., defaults to None
    :type unit_of_measurement: DdtcInformationUnitOfMeasurement, optional
    :param significant_military_equipment_indicator: Presence/ Absence Indicator.  Applies to EEI form only., defaults to None
    :type significant_military_equipment_indicator: str, optional
    :param acm_number: Approved Community Member Number (ACM). It is required to be provided along with ITARExemptionNumber for some License code (SGB and SAU). The ACM# for the United Kingdom (License code SGB) must begin with UK followed by 9 numbers.  The ACM# for Australia (License Code SAU) must begin with DTT followed by 8 numbers.  Applies to EEI form only.  It is required for EEIFilingOption code 1A and 3., defaults to None
    :type acm_number: str, optional
    """

    def __init__(
        self,
        itar_exemption_number: str = None,
        usml_category_code: str = None,
        eligible_party_indicator: str = None,
        registration_number: str = None,
        quantity: str = None,
        unit_of_measurement: DdtcInformationUnitOfMeasurement = None,
        significant_military_equipment_indicator: str = None,
        acm_number: str = None,
    ):
        if itar_exemption_number is not None:
            self.itar_exemption_number = itar_exemption_number
        if usml_category_code is not None:
            self.usml_category_code = usml_category_code
        if eligible_party_indicator is not None:
            self.eligible_party_indicator = eligible_party_indicator
        if registration_number is not None:
            self.registration_number = registration_number
        if quantity is not None:
            self.quantity = quantity
        if unit_of_measurement is not None:
            self.unit_of_measurement = self._define_object(
                unit_of_measurement, DdtcInformationUnitOfMeasurement
            )
        if significant_military_equipment_indicator is not None:
            self.significant_military_equipment_indicator = (
                significant_military_equipment_indicator
            )
        if acm_number is not None:
            self.acm_number = acm_number
