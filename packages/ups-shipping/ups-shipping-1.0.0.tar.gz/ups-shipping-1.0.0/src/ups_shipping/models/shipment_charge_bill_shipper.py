# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .bill_shipper_credit_card import BillShipperCreditCard


@JsonMap(
    {
        "account_number": "AccountNumber",
        "credit_card": "CreditCard",
        "alternate_payment_method": "AlternatePaymentMethod",
    }
)
class ShipmentChargeBillShipper(BaseModel):
    """Container for the BillShipper billing option. The three payment methods that are available for the Bill Shipper billing option are alternate payment method, account number or credit card.  This element or its sibling element, BillReceiver, BillThirdParty or ConsigneeBilledIndicator, must be present but no more than one can be present.

    :param account_number: UPS account number.  Must be the same UPS account number as the one provided in Shipper/ShipperNumber.  Either this element or one of the sibling elements CreditCard or AlternatePaymentMethod must be provided, but all of them may not be provided., defaults to None
    :type account_number: str, optional
    :param credit_card: Credit card information container.  Required if neither of the following is present:  /ShipmentRequest/Shipment/PaymentInformation/ShipmentCharge/BillShipper/AccountNumber  or  /ShipmentRequest/Shipment/PaymentInformation/ShipmentCharge/BillShipper/AlternatePaymentMethod.  Credit card payment is valid for shipments without return service only., defaults to None
    :type credit_card: BillShipperCreditCard, optional
    :param alternate_payment_method: Alternate Payment Method. Valid value: 01= PayPal Only valid for forward shipments. It is not valid for Return or Import Control shipments.  This element or one of the sibling elements CreditCard or AccountNumber must be provided, but all of them may not be provided.   PayPal 01: Is only valid for forward shipments. It is not valid for Return or Import Control shipments.  This element or one of the sibling elements CreditCard or AccountNumber must be provided, but all of them may not be provided., defaults to None
    :type alternate_payment_method: str, optional
    """

    def __init__(
        self,
        account_number: str = None,
        credit_card: BillShipperCreditCard = None,
        alternate_payment_method: str = None,
    ):
        if account_number is not None:
            self.account_number = account_number
        if credit_card is not None:
            self.credit_card = self._define_object(credit_card, BillShipperCreditCard)
        if alternate_payment_method is not None:
            self.alternate_payment_method = alternate_payment_method
