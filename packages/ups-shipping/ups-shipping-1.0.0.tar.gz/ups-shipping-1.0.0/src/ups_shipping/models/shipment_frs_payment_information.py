# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .frs_payment_information_type import FrsPaymentInformationType
from .frs_payment_information_address import FrsPaymentInformationAddress


@JsonMap({"type_": "Type", "account_number": "AccountNumber", "address": "Address"})
class ShipmentFrsPaymentInformation(BaseModel):
    """Container to hold the Payment information for the Ground Freight Pricing Shipments.  Required for Ground Freight Pricing Shipments only.

    :param type_: Container to hold the Ground Freight Pricing payment type information.  It is required if the request has Ground Freight Pricing shipment indicator.
    :type type_: FrsPaymentInformationType
    :param account_number: The UPS account number.  If the Ground Freight Pricing indicator and FreightShipmentInformation/DensityEligibleIndicator is present in the request, this account number must be validated to check if it is Ground Freight Pricing Density Based Rating enabled.
    :type account_number: str
    :param address: Container to hold the information for the FreightCollect and PrepaidThirdParty Address.  Note: The Address is required only when the billing option is Freight collect or ThirdParty., defaults to None
    :type address: FrsPaymentInformationAddress, optional
    """

    def __init__(
        self,
        type_: FrsPaymentInformationType,
        account_number: str,
        address: FrsPaymentInformationAddress = None,
    ):
        self.type_ = self._define_object(type_, FrsPaymentInformationType)
        self.account_number = account_number
        if address is not None:
            self.address = self._define_object(address, FrsPaymentInformationAddress)
