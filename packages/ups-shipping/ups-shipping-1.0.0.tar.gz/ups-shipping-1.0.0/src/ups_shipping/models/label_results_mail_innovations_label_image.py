# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .base import BaseModel
from .mail_innovations_label_image_label_image_format import (
    MailInnovationsLabelImageLabelImageFormat,
)


@JsonMap(
    {
        "label_image_format": "LabelImageFormat",
        "graphic_image": "GraphicImage",
        "html_image": "HTMLImage",
        "pdf417": "PDF417",
        "international_signature_graphic_image": "InternationalSignatureGraphicImage",
        "url": "URL",
    }
)
class LabelResultsMailInnovationsLabelImage(BaseModel):
    """Container to hold Mail Innovations shipments label. The elements needed to render a label on a printer or in a browser. Specifies the format in which GraphicImage is represented. If LabelImageFormat is GIF, LabelImage contains GraphicImage and HTMLImage. Otherwise, it contains only GraphicImage.   Applicable for Single Mail Innovations Returns and Dual Mail Innovations Returns shipment. Returned only if MailInnovationsTrackingNumber is provided in request.
    If LabelImageFormat requested was PDF and TrackingNumber was present along with MailInnovationsTrackingNumber in the request, only LabelImage container is returned. MailInnovationsLabelImage will not be returned. In that case, the labels for Small Package Tracking Number and Mail Innovations Tracking Number will be stitched in single PDF file.

    :param label_image_format: The format of a label image byte stream.
    :type label_image_format: MailInnovationsLabelImageLabelImageFormat
    :param graphic_image: Base 64 encoded graphic image.
    :type graphic_image: str
    :param html_image: Base 64 encoded html browser image rendering software. This is only returned for GIF image formats., defaults to None
    :type html_image: str, optional
    :param pdf417: PDF-417 is a two-dimensional barcode, which can store up to about 1,800 printable ASCII characters or 1,100 binary characters per symbol. The symbol is rectangular. The PDF417 image will be returned when the shipment is trans-border and the service option is one of the following: Standard, Express Saver or Express Plus.  The image is Base 64 encoded and only returned for GIF image format, defaults to None
    :type pdf417: str, optional
    :param international_signature_graphic_image: Base 64 encoded graphic image of the Warsaw text and signature box.  EPL2, ZPL and SPL labels. The image will be returned for non-US based shipments. One image will be given per shipment and it will be in the first PackageResults container., defaults to None
    :type international_signature_graphic_image: str, optional
    :param url: This is only returned if the label link is requested to be returned and only at the first package result  Applicable for following types of shipments: Print/Electronic Return Label, defaults to None
    :type url: str, optional
    """

    def __init__(
        self,
        label_image_format: MailInnovationsLabelImageLabelImageFormat,
        graphic_image: str,
        html_image: str = None,
        pdf417: str = None,
        international_signature_graphic_image: str = None,
        url: str = None,
    ):
        self.label_image_format = self._define_object(
            label_image_format, MailInnovationsLabelImageLabelImageFormat
        )
        self.graphic_image = graphic_image
        if html_image is not None:
            self.html_image = html_image
        if pdf417 is not None:
            self.pdf417 = pdf417
        if international_signature_graphic_image is not None:
            self.international_signature_graphic_image = (
                international_signature_graphic_image
            )
        if url is not None:
            self.url = url
