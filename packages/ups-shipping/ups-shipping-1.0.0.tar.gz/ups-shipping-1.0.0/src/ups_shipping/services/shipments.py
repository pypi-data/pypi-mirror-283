# This file was generated by liblab | https://liblab.com/

from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..models.voidshipment_response_wrapper import VoidshipmentResponseWrapper
from ..models.utils.cast_models import cast_models
from ..models.ship_response_wrapper import ShipResponseWrapper
from ..models.ship_request_wrapper import ShipRequestWrapper


class ShipmentsService(BaseService):

    @cast_models
    def shipment(
        self,
        request_body: ShipRequestWrapper,
        version: str,
        additionaladdressvalidation: str = None,
        trans_id: str = None,
        transaction_src: str = None,
    ) -> ShipResponseWrapper:
        """The Shipping API makes UPS shipping services available to client applications that communicate with UPS
        using the Internet

        :param request_body: The request body.
        :type request_body: ShipRequestWrapper
        :param version: Indicates Ship API to display the new release features in Ship API response based on Ship release.

        Valid values:
        - v2403
        :type version: str
        :param additionaladdressvalidation: Valid Values:
        city = validation will include city.Length 15, defaults to None
        :type additionaladdressvalidation: str, optional
        :param trans_id: An identifier unique to the request. Length 32, defaults to None
        :type trans_id: str, optional
        :param transaction_src: An identifier of the client/source application that is making the request.Length 512, defaults to None
        :type transaction_src: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: successful operation
        :rtype: ShipResponseWrapper
        """

        Validator(ShipRequestWrapper).validate(request_body)
        Validator(str).validate(version)
        Validator(str).is_optional().validate(additionaladdressvalidation)
        Validator(str).is_optional().validate(trans_id)
        Validator(str).is_optional().validate(transaction_src)

        serialized_request = (
            Serializer(
                f"{self.base_url}/shipments/{{version}}/ship",
                self.get_default_headers(),
            )
            .add_header("transId", trans_id)
            .add_header("transactionSrc", transaction_src)
            .add_path("version", version)
            .add_query("additionaladdressvalidation", additionaladdressvalidation)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response = self.send_request(serialized_request)

        return ShipResponseWrapper._unmap(response)

    @cast_models
    def void_shipment(
        self,
        version: str,
        shipmentidentificationnumber: str,
        trackingnumber: str = None,
        trans_id: str = None,
        transaction_src: str = None,
    ) -> VoidshipmentResponseWrapper:
        """The Void Shipping API is used to cancel the previously scheduled shipment

        :param version: API Version

        Valid values:
        - v2403
        :type version: str
        :param shipmentidentificationnumber: The shipment's identification number
        Alpha-numeric. Must pass 1Z rules. Must be
        upper case. Length 18
        :type shipmentidentificationnumber: str
        :param trackingnumber: The package's tracking number. You may have
        up to 20 different tracking numbers listed.
        If more than one tracking number, pass this
        value as: trackingnumber=
        ["1ZISUS010330563105","1ZISUS01033056310
        8"] with a coma separating each number.
        Alpha-numeric. Must pass 1Z rules. Must be
        upper case. Length 18, defaults to None
        :type trackingnumber: str, optional
        :param trans_id: An identifier unique to the request. Length 32, defaults to None
        :type trans_id: str, optional
        :param transaction_src: An identifier of the client/source application that is making the request.Length 512, defaults to None
        :type transaction_src: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: successful operation
        :rtype: VoidshipmentResponseWrapper
        """

        Validator(str).validate(version)
        Validator(str).validate(shipmentidentificationnumber)
        Validator(str).is_optional().validate(trackingnumber)
        Validator(str).is_optional().validate(trans_id)
        Validator(str).is_optional().validate(transaction_src)

        serialized_request = (
            Serializer(
                f"{self.base_url}/shipments/{{version}}/void/cancel/{{shipmentidentificationnumber}}",
                self.get_default_headers(),
            )
            .add_header("transId", trans_id)
            .add_header("transactionSrc", transaction_src)
            .add_path("version", version)
            .add_path("shipmentidentificationnumber", shipmentidentificationnumber)
            .add_query("trackingnumber", trackingnumber)
            .serialize()
            .set_method("DELETE")
        )

        response = self.send_request(serialized_request)

        return VoidshipmentResponseWrapper._unmap(response)

    @cast_models
    def deprecated_shipment(
        self,
        request_body: ShipRequestWrapper,
        deprecated_version: str,
        additionaladdressvalidation: str = None,
        trans_id: str = None,
        transaction_src: str = None,
    ) -> ShipResponseWrapper:
        """The Shipping API makes UPS shipping services available to client applications that communicate with UPS
        using the Internet

        :param request_body: The request body.
        :type request_body: ShipRequestWrapper
        :param deprecated_version: Indicates Ship API to display the new release features in Ship API response based on Ship release.

        Valid values:
        - v1
        - v1601
        - v1607
        - v1701
        - v1707
        - v1801
        - v1807
        - v2108
        - v2205
        :type deprecated_version: str
        :param additionaladdressvalidation: Valid Values:
        city = validation will include city.Length 15, defaults to None
        :type additionaladdressvalidation: str, optional
        :param trans_id: An identifier unique to the request. Length 32, defaults to None
        :type trans_id: str, optional
        :param transaction_src: An identifier of the client/source application that is making the request.Length 512, defaults to None
        :type transaction_src: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: successful operation
        :rtype: ShipResponseWrapper
        """

        Validator(ShipRequestWrapper).validate(request_body)
        Validator(str).validate(deprecated_version)
        Validator(str).is_optional().validate(additionaladdressvalidation)
        Validator(str).is_optional().validate(trans_id)
        Validator(str).is_optional().validate(transaction_src)

        serialized_request = (
            Serializer(
                f"{self.base_url}/shipments/{{deprecatedVersion}}/ship",
                self.get_default_headers(),
            )
            .add_header("transId", trans_id)
            .add_header("transactionSrc", transaction_src)
            .add_path("deprecatedVersion", deprecated_version)
            .add_query("additionaladdressvalidation", additionaladdressvalidation)
            .serialize()
            .set_method("POST")
            .set_body(request_body)
        )

        response = self.send_request(serialized_request)

        return ShipResponseWrapper._unmap(response)

    @cast_models
    def deprecated_void_shipment(
        self,
        deprecated_version: str,
        shipmentidentificationnumber: str,
        trackingnumber: str = None,
        trans_id: str = None,
        transaction_src: str = None,
    ) -> VoidshipmentResponseWrapper:
        """The Void Shipping API is used to cancel the previously scheduled shipment

        :param deprecated_version: API Version.

        Valid values:
        - v1
        :type deprecated_version: str
        :param shipmentidentificationnumber: The shipment's identification number
        Alpha-numeric. Must pass 1Z rules. Must be
        upper case. Length 18
        :type shipmentidentificationnumber: str
        :param trackingnumber: The package's tracking number. You may have
        up to 20 different tracking numbers listed.
        If more than one tracking number, pass this
        value as: trackingnumber=
        ["1ZISUS010330563105","1ZISUS01033056310
        8"] with a coma separating each number.
        Alpha-numeric. Must pass 1Z rules. Must be
        upper case. Length 18, defaults to None
        :type trackingnumber: str, optional
        :param trans_id: An identifier unique to the request. Length 32, defaults to None
        :type trans_id: str, optional
        :param transaction_src: An identifier of the client/source application that is making the request.Length 512, defaults to None
        :type transaction_src: str, optional
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: successful operation
        :rtype: VoidshipmentResponseWrapper
        """

        Validator(str).validate(deprecated_version)
        Validator(str).validate(shipmentidentificationnumber)
        Validator(str).is_optional().validate(trackingnumber)
        Validator(str).is_optional().validate(trans_id)
        Validator(str).is_optional().validate(transaction_src)

        serialized_request = (
            Serializer(
                f"{self.base_url}/shipments/{{deprecatedVersion}}/void/cancel/{{shipmentidentificationnumber}}",
                self.get_default_headers(),
            )
            .add_header("transId", trans_id)
            .add_header("transactionSrc", transaction_src)
            .add_path("deprecatedVersion", deprecated_version)
            .add_path("shipmentidentificationnumber", shipmentidentificationnumber)
            .add_query("trackingnumber", trackingnumber)
            .serialize()
            .set_method("DELETE")
        )

        response = self.send_request(serialized_request)

        return VoidshipmentResponseWrapper._unmap(response)
