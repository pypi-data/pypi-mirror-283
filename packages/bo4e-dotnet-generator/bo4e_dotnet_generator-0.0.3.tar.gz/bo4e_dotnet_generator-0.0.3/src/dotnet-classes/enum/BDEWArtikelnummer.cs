// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BO4EDotNet;
//
//    var bdewArtikelnummer = BdewArtikelnummer.FromJson(jsonString);

namespace BO4EDotNet
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>
    /// BDEW Artikelnummern
    /// </summary>
    public enum BdewArtikelnummerEnum { AbgabeKwkg, Abschlag, Ausgleichsenergie, AusgleichsenergieUnterdeckung, Befestigungseinrichtung, Blindmehrarbeit, Blindmehrleistung, Energiesteuer, EntgeltAbrechnung, EntgeltEinbauBetriebWartungMesstechnik, EntgeltFernauslesung, EntgeltMessungAblesung, Entsperrkosten, FixeArbeitsentgeltkomponente, FixeLeistungsentgeltkomponente, Grundpreis, Inkassokosten, Kommunikationseinrichtung, Konzessionsabgabe, Leistung, LeistungPauschal, Mahnkosten, MehrMindermengen, Mehrmenge, Mindermenge, MsbInklMessung, NotstromlieferungArbeit, NotstromlieferungLeistung, OffshoreHaftungsumlage, Paragraf19_StromNevUmlage, PruefgebuehrenAusserplanmaessig, RegelenergieArbeit, RegelenergieLeistung, Reserveleistung, Reservenetzkapazitaet, SingulaerGenutzteBetriebsmittel, SmartmeterGateway, Sperrkosten, Steuerbox, TechnischeSteuereinrichtung, UmlageAbschaltbareLasten, Untermessung, WandlerMengenumwerter, Wirkarbeit, Zaehleinrichtung, ZusaetzlicheAblesung };

    public class BdewArtikelnummer
    {
        public static BdewArtikelnummerEnum FromJson(string json) => JsonConvert.DeserializeObject<BdewArtikelnummerEnum>(json, BO4EDotNet.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this BdewArtikelnummerEnum self) => JsonConvert.SerializeObject(self, BO4EDotNet.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                BdewArtikelnummerEnumConverter.Singleton,
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class BdewArtikelnummerEnumConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(BdewArtikelnummerEnum) || t == typeof(BdewArtikelnummerEnum?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            switch (value)
            {
                case "ABGABE_KWKG":
                    return BdewArtikelnummerEnum.AbgabeKwkg;
                case "ABSCHLAG":
                    return BdewArtikelnummerEnum.Abschlag;
                case "AUSGLEICHSENERGIE":
                    return BdewArtikelnummerEnum.Ausgleichsenergie;
                case "AUSGLEICHSENERGIE_UNTERDECKUNG":
                    return BdewArtikelnummerEnum.AusgleichsenergieUnterdeckung;
                case "BEFESTIGUNGSEINRICHTUNG":
                    return BdewArtikelnummerEnum.Befestigungseinrichtung;
                case "BLINDMEHRARBEIT":
                    return BdewArtikelnummerEnum.Blindmehrarbeit;
                case "BLINDMEHRLEISTUNG":
                    return BdewArtikelnummerEnum.Blindmehrleistung;
                case "ENERGIESTEUER":
                    return BdewArtikelnummerEnum.Energiesteuer;
                case "ENTGELT_ABRECHNUNG":
                    return BdewArtikelnummerEnum.EntgeltAbrechnung;
                case "ENTGELT_EINBAU_BETRIEB_WARTUNG_MESSTECHNIK":
                    return BdewArtikelnummerEnum.EntgeltEinbauBetriebWartungMesstechnik;
                case "ENTGELT_FERNAUSLESUNG":
                    return BdewArtikelnummerEnum.EntgeltFernauslesung;
                case "ENTGELT_MESSUNG_ABLESUNG":
                    return BdewArtikelnummerEnum.EntgeltMessungAblesung;
                case "ENTSPERRKOSTEN":
                    return BdewArtikelnummerEnum.Entsperrkosten;
                case "FIXE_ARBEITSENTGELTKOMPONENTE":
                    return BdewArtikelnummerEnum.FixeArbeitsentgeltkomponente;
                case "FIXE_LEISTUNGSENTGELTKOMPONENTE":
                    return BdewArtikelnummerEnum.FixeLeistungsentgeltkomponente;
                case "GRUNDPREIS":
                    return BdewArtikelnummerEnum.Grundpreis;
                case "INKASSOKOSTEN":
                    return BdewArtikelnummerEnum.Inkassokosten;
                case "KOMMUNIKATIONSEINRICHTUNG":
                    return BdewArtikelnummerEnum.Kommunikationseinrichtung;
                case "KONZESSIONSABGABE":
                    return BdewArtikelnummerEnum.Konzessionsabgabe;
                case "LEISTUNG":
                    return BdewArtikelnummerEnum.Leistung;
                case "LEISTUNG_PAUSCHAL":
                    return BdewArtikelnummerEnum.LeistungPauschal;
                case "MAHNKOSTEN":
                    return BdewArtikelnummerEnum.Mahnkosten;
                case "MEHRMENGE":
                    return BdewArtikelnummerEnum.Mehrmenge;
                case "MEHR_MINDERMENGEN":
                    return BdewArtikelnummerEnum.MehrMindermengen;
                case "MINDERMENGE":
                    return BdewArtikelnummerEnum.Mindermenge;
                case "MSB_INKL_MESSUNG":
                    return BdewArtikelnummerEnum.MsbInklMessung;
                case "NOTSTROMLIEFERUNG_ARBEIT":
                    return BdewArtikelnummerEnum.NotstromlieferungArbeit;
                case "NOTSTROMLIEFERUNG_LEISTUNG":
                    return BdewArtikelnummerEnum.NotstromlieferungLeistung;
                case "OFFSHORE_HAFTUNGSUMLAGE":
                    return BdewArtikelnummerEnum.OffshoreHaftungsumlage;
                case "PARAGRAF_19_STROM_NEV_UMLAGE":
                    return BdewArtikelnummerEnum.Paragraf19_StromNevUmlage;
                case "PRUEFGEBUEHREN_AUSSERPLANMAESSIG":
                    return BdewArtikelnummerEnum.PruefgebuehrenAusserplanmaessig;
                case "REGELENERGIE_ARBEIT":
                    return BdewArtikelnummerEnum.RegelenergieArbeit;
                case "REGELENERGIE_LEISTUNG":
                    return BdewArtikelnummerEnum.RegelenergieLeistung;
                case "RESERVELEISTUNG":
                    return BdewArtikelnummerEnum.Reserveleistung;
                case "RESERVENETZKAPAZITAET":
                    return BdewArtikelnummerEnum.Reservenetzkapazitaet;
                case "SINGULAER_GENUTZTE_BETRIEBSMITTEL":
                    return BdewArtikelnummerEnum.SingulaerGenutzteBetriebsmittel;
                case "SMARTMETER_GATEWAY":
                    return BdewArtikelnummerEnum.SmartmeterGateway;
                case "SPERRKOSTEN":
                    return BdewArtikelnummerEnum.Sperrkosten;
                case "STEUERBOX":
                    return BdewArtikelnummerEnum.Steuerbox;
                case "TECHNISCHE_STEUEREINRICHTUNG":
                    return BdewArtikelnummerEnum.TechnischeSteuereinrichtung;
                case "UMLAGE_ABSCHALTBARE_LASTEN":
                    return BdewArtikelnummerEnum.UmlageAbschaltbareLasten;
                case "UNTERMESSUNG":
                    return BdewArtikelnummerEnum.Untermessung;
                case "WANDLER_MENGENUMWERTER":
                    return BdewArtikelnummerEnum.WandlerMengenumwerter;
                case "WIRKARBEIT":
                    return BdewArtikelnummerEnum.Wirkarbeit;
                case "ZAEHLEINRICHTUNG":
                    return BdewArtikelnummerEnum.Zaehleinrichtung;
                case "ZUSAETZLICHE_ABLESUNG":
                    return BdewArtikelnummerEnum.ZusaetzlicheAblesung;
            }
            throw new Exception("Cannot unmarshal type BdewArtikelnummerEnum");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (BdewArtikelnummerEnum)untypedValue;
            switch (value)
            {
                case BdewArtikelnummerEnum.AbgabeKwkg:
                    serializer.Serialize(writer, "ABGABE_KWKG");
                    return;
                case BdewArtikelnummerEnum.Abschlag:
                    serializer.Serialize(writer, "ABSCHLAG");
                    return;
                case BdewArtikelnummerEnum.Ausgleichsenergie:
                    serializer.Serialize(writer, "AUSGLEICHSENERGIE");
                    return;
                case BdewArtikelnummerEnum.AusgleichsenergieUnterdeckung:
                    serializer.Serialize(writer, "AUSGLEICHSENERGIE_UNTERDECKUNG");
                    return;
                case BdewArtikelnummerEnum.Befestigungseinrichtung:
                    serializer.Serialize(writer, "BEFESTIGUNGSEINRICHTUNG");
                    return;
                case BdewArtikelnummerEnum.Blindmehrarbeit:
                    serializer.Serialize(writer, "BLINDMEHRARBEIT");
                    return;
                case BdewArtikelnummerEnum.Blindmehrleistung:
                    serializer.Serialize(writer, "BLINDMEHRLEISTUNG");
                    return;
                case BdewArtikelnummerEnum.Energiesteuer:
                    serializer.Serialize(writer, "ENERGIESTEUER");
                    return;
                case BdewArtikelnummerEnum.EntgeltAbrechnung:
                    serializer.Serialize(writer, "ENTGELT_ABRECHNUNG");
                    return;
                case BdewArtikelnummerEnum.EntgeltEinbauBetriebWartungMesstechnik:
                    serializer.Serialize(writer, "ENTGELT_EINBAU_BETRIEB_WARTUNG_MESSTECHNIK");
                    return;
                case BdewArtikelnummerEnum.EntgeltFernauslesung:
                    serializer.Serialize(writer, "ENTGELT_FERNAUSLESUNG");
                    return;
                case BdewArtikelnummerEnum.EntgeltMessungAblesung:
                    serializer.Serialize(writer, "ENTGELT_MESSUNG_ABLESUNG");
                    return;
                case BdewArtikelnummerEnum.Entsperrkosten:
                    serializer.Serialize(writer, "ENTSPERRKOSTEN");
                    return;
                case BdewArtikelnummerEnum.FixeArbeitsentgeltkomponente:
                    serializer.Serialize(writer, "FIXE_ARBEITSENTGELTKOMPONENTE");
                    return;
                case BdewArtikelnummerEnum.FixeLeistungsentgeltkomponente:
                    serializer.Serialize(writer, "FIXE_LEISTUNGSENTGELTKOMPONENTE");
                    return;
                case BdewArtikelnummerEnum.Grundpreis:
                    serializer.Serialize(writer, "GRUNDPREIS");
                    return;
                case BdewArtikelnummerEnum.Inkassokosten:
                    serializer.Serialize(writer, "INKASSOKOSTEN");
                    return;
                case BdewArtikelnummerEnum.Kommunikationseinrichtung:
                    serializer.Serialize(writer, "KOMMUNIKATIONSEINRICHTUNG");
                    return;
                case BdewArtikelnummerEnum.Konzessionsabgabe:
                    serializer.Serialize(writer, "KONZESSIONSABGABE");
                    return;
                case BdewArtikelnummerEnum.Leistung:
                    serializer.Serialize(writer, "LEISTUNG");
                    return;
                case BdewArtikelnummerEnum.LeistungPauschal:
                    serializer.Serialize(writer, "LEISTUNG_PAUSCHAL");
                    return;
                case BdewArtikelnummerEnum.Mahnkosten:
                    serializer.Serialize(writer, "MAHNKOSTEN");
                    return;
                case BdewArtikelnummerEnum.Mehrmenge:
                    serializer.Serialize(writer, "MEHRMENGE");
                    return;
                case BdewArtikelnummerEnum.MehrMindermengen:
                    serializer.Serialize(writer, "MEHR_MINDERMENGEN");
                    return;
                case BdewArtikelnummerEnum.Mindermenge:
                    serializer.Serialize(writer, "MINDERMENGE");
                    return;
                case BdewArtikelnummerEnum.MsbInklMessung:
                    serializer.Serialize(writer, "MSB_INKL_MESSUNG");
                    return;
                case BdewArtikelnummerEnum.NotstromlieferungArbeit:
                    serializer.Serialize(writer, "NOTSTROMLIEFERUNG_ARBEIT");
                    return;
                case BdewArtikelnummerEnum.NotstromlieferungLeistung:
                    serializer.Serialize(writer, "NOTSTROMLIEFERUNG_LEISTUNG");
                    return;
                case BdewArtikelnummerEnum.OffshoreHaftungsumlage:
                    serializer.Serialize(writer, "OFFSHORE_HAFTUNGSUMLAGE");
                    return;
                case BdewArtikelnummerEnum.Paragraf19_StromNevUmlage:
                    serializer.Serialize(writer, "PARAGRAF_19_STROM_NEV_UMLAGE");
                    return;
                case BdewArtikelnummerEnum.PruefgebuehrenAusserplanmaessig:
                    serializer.Serialize(writer, "PRUEFGEBUEHREN_AUSSERPLANMAESSIG");
                    return;
                case BdewArtikelnummerEnum.RegelenergieArbeit:
                    serializer.Serialize(writer, "REGELENERGIE_ARBEIT");
                    return;
                case BdewArtikelnummerEnum.RegelenergieLeistung:
                    serializer.Serialize(writer, "REGELENERGIE_LEISTUNG");
                    return;
                case BdewArtikelnummerEnum.Reserveleistung:
                    serializer.Serialize(writer, "RESERVELEISTUNG");
                    return;
                case BdewArtikelnummerEnum.Reservenetzkapazitaet:
                    serializer.Serialize(writer, "RESERVENETZKAPAZITAET");
                    return;
                case BdewArtikelnummerEnum.SingulaerGenutzteBetriebsmittel:
                    serializer.Serialize(writer, "SINGULAER_GENUTZTE_BETRIEBSMITTEL");
                    return;
                case BdewArtikelnummerEnum.SmartmeterGateway:
                    serializer.Serialize(writer, "SMARTMETER_GATEWAY");
                    return;
                case BdewArtikelnummerEnum.Sperrkosten:
                    serializer.Serialize(writer, "SPERRKOSTEN");
                    return;
                case BdewArtikelnummerEnum.Steuerbox:
                    serializer.Serialize(writer, "STEUERBOX");
                    return;
                case BdewArtikelnummerEnum.TechnischeSteuereinrichtung:
                    serializer.Serialize(writer, "TECHNISCHE_STEUEREINRICHTUNG");
                    return;
                case BdewArtikelnummerEnum.UmlageAbschaltbareLasten:
                    serializer.Serialize(writer, "UMLAGE_ABSCHALTBARE_LASTEN");
                    return;
                case BdewArtikelnummerEnum.Untermessung:
                    serializer.Serialize(writer, "UNTERMESSUNG");
                    return;
                case BdewArtikelnummerEnum.WandlerMengenumwerter:
                    serializer.Serialize(writer, "WANDLER_MENGENUMWERTER");
                    return;
                case BdewArtikelnummerEnum.Wirkarbeit:
                    serializer.Serialize(writer, "WIRKARBEIT");
                    return;
                case BdewArtikelnummerEnum.Zaehleinrichtung:
                    serializer.Serialize(writer, "ZAEHLEINRICHTUNG");
                    return;
                case BdewArtikelnummerEnum.ZusaetzlicheAblesung:
                    serializer.Serialize(writer, "ZUSAETZLICHE_ABLESUNG");
                    return;
            }
            throw new Exception("Cannot marshal type BdewArtikelnummerEnum");
        }

        public static readonly BdewArtikelnummerEnumConverter Singleton = new BdewArtikelnummerEnumConverter();
    }
}
