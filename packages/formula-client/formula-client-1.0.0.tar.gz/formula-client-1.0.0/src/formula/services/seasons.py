# This file was generated by liblab | https://liblab.com/

from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..models.utils.cast_models import cast_models


class SeasonsService(BaseService):

    @cast_models
    def seasons_list(self):
        """This endpoint gives the seasons currently supported by the API.


        Season lists can be refined by adding one or more of the following criteria:

        /circuits/<circuitId>
        /constructors/<constructorId>
        /drivers/<driverId>
        /grid/<position>
        /results/<position>
        /fastest/<rank>
        /status/<statusId>

        For example, to list all seasons where a specific driver has driven for a particular constructor:

        http://ergast.com/api/f1/drivers/alonso/constructors/renault/seasons

        Alternatively, to list the seasons where a specific driver or constructor has achieved a particular final position in the championship:

        http://ergast.com/api/f1/drivers/alonso/driverStandings/1/seasons
        http://ergast.com/api/f1/constructors/renault/constructorStandings/1/seasons

        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        """

        serialized_request = (
            Serializer(f"{self.base_url}/api/f1/seasons", self.get_default_headers())
            .serialize()
            .set_method("GET")
        )

        response = self.send_request(serialized_request)

        return response
