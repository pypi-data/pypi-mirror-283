# This file was generated by liblab | https://liblab.com/

from .utils.validator import Validator
from .utils.base_service import BaseService
from ..net.transport.serializer import Serializer
from ..models.utils.cast_models import cast_models


class LapTimesService(BaseService):

    @cast_models
    def lap_time(self, year: str, round: str, lapnumber: str) -> str:
        """This endpoint requires the season(year), race(round) and lap number(lapnumber) to be specified.

        :param year: year
        :type year: str
        :param round: round
        :type round: str
        :param lapnumber: lapnumber
        :type lapnumber: str
        ...
        :raises RequestError: Raised when a request fails, with optional HTTP status code and details.
        ...
        :return: Lap time- Example- 2019- Race 1- Lap 5
        :rtype: str
        """

        Validator(str).validate(year)
        Validator(str).validate(round)
        Validator(str).validate(lapnumber)

        serialized_request = (
            Serializer(
                f"{self.base_url}/api/f1/{{year}}/{{round}}/laps/{{lapnumber}}",
                self.get_default_headers(),
            )
            .add_path("year", year)
            .add_path("round", round)
            .add_path("lapnumber", lapnumber)
            .serialize()
            .set_method("GET")
        )

        response = self.send_request(serialized_request)

        return response
