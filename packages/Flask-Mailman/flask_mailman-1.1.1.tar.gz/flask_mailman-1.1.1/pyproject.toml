[tool.poetry]
name = "Flask-Mailman"
version = "1.1.1"
description = "Porting Django's email implementation to your Flask applications."
authors = ["Waynerv <ampedee@gmail.com>"]
license = "BSD-3-Clause"
readme="README.md"
repository="https://github.com/waynerv/flask-mailman"
keywords=["flask", "mail", "smtp", "flask-mail"]
exclude = ["docs", "tests*"]
classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: BSD License",
        "Framework :: Flask",
        "Topic :: Software Development :: Build Tools",
        "Topic :: Communications :: Email",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
    ]

[tool.poetry.dependencies]
python = "^3.7"
flask = ">= 1.0"

black  = { version = "*", optional = true}
isort  = { version = "*", optional = true}
flake8  = { version = "*", optional = true}
pytest  = { version = "*", optional = true}
pytest-cov  = { version = "*", optional = true}
tox  = { version = "*", optional = true}
virtualenv  = { version = "*", optional = true}
pip  = { version = "*", optional = true}
mkdocs  = { version = "*", optional = true}
mkdocs-include-markdown-plugin  = { version = "*", optional = true}
mkdocs-material  = { version = "*", optional = true}
mkdocstrings  = { version = "*", optional = true}
mkdocs-material-extensions  = { version = "*", optional = true}
twine  = { version = "*", optional = true}
mkdocs-autorefs = {version = "*", optional = true}
pre-commit = {version = "*", optional = true}
toml = {version = "*", optional = true}
bump2version = {version = "*", optional = true}
aiosmtpd = {version = "^1.4.4.post2", optional = true}

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "flake8",
    "pytest-cov",
    "aiosmtpd"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extensions",
    "mkdocs-autorefs"
    ]

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
